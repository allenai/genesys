{
    "d3pms-0": "# Structured Denoising Diffusion Models in Discrete State-Spaces \n\nJacob Austin, Daniel D. Johnson, Jonathan Ho, Daniel Tarlow \\& Rianne van den Berg ${ }^{\\dagger}$<br>Google Research, Brain Team<br>\\{jaaustin, ddjohnson, jonathanho,dtarlow,riannevdberg\\}@google.com\n\n\n#### Abstract\n\nDenoising diffusion probabilistic models (DDPMs) [19] have shown impressive results on image and waveform generation in continuous state spaces. Here, we introduce Discrete Denoising Diffusion Probabilistic Models (D3PMs), diffusionlike generative models for discrete data that generalize the multinomial diffusion model of Hoogeboom et al. [20], by going beyond corruption processes with uniform transition probabilities. This includes corruption with transition matrices that mimic Gaussian kernels in continuous space, matrices based on nearest neighbors in embedding space, and matrices that introduce absorbing states. The third allows us to draw a connection between diffusion models and autoregressive and mask-based generative models. We show that the choice of transition matrix is an important design decision that leads to improved results in image and text domains. We also introduce a new loss function that combines the variational lower bound with an auxiliary cross entropy loss. For text, this model class achieves strong results on character-level text generation while scaling to large vocabularies on LM1B. On the image dataset CIFAR-10, our models approach the sample quality and exceed the log-likelihood of the continuous-space DDPM model. ## 1 Introduction\n\nGenerative modeling is a core problem in machine learning, useful both for benchmarking our ability to capture statistics of natural datasets and for downstream applications that require generating high-dimensional data like images, text, and speech waveforms. There has been a great deal of progress with the development of methods like GANs [15, 4], VAEs [25, 35], large autoregressive neural network models [51, 50, 52], normalizing flows [34, 12, 24, 32], and others, each with their own tradeoffs in terms of sample quality, sampling speed, log-likelihoods, and training stability. Recently, diffusion models [43] have emerged as a compelling alternative for image [19, 46] and audio [7, 26] generation, achieving comparable sample quality to GANs and log-likelihoods comparable to autoregressive models with fewer inference steps. A diffusion model is a parameterized Markov chain trained to reverse a predefined forward process, which is a stochastic process constructed to gradually corrupt training data into pure noise. Diffusion models are trained using a stable objective closely related to both maximum likelihood and score matching [21, 53], and they admit faster sampling than autoregressive models by using parallel iterative refinement [30, 45, 47, 44]. Although diffusion models have been proposed in both discrete and continuous state spaces [43], most recent work has focused on Gaussian diffusion processes that operate in continuous state spaces (e.g. for real-valued image and waveform data). Diffusion models with discrete state spaces have been explored for text and image segmentation domains [20], but they have not yet been demonstrated as a competitive model class for large scale text or image generation. [^0]![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-02.jpg?height=576&width=1310&top_left_y=243&top_left_x=402)\n\nFigure 1: D3PM forward and (learned) reverse process applied to a quantized swiss roll. Each dot represents a 2D categorical variable. Top: samples from the uniform, discretized Gaussian, and absorbing state D3PM model forward processes, along with corresponding transition matrices $\\boldsymbol{Q}$. Bottom: samples from a learned discretized Gaussian reverse process. Our aim in this work is to improve and extend discrete diffusion models by using a more structured categorical corruption process to shape data generation, as illustrated in Figure 1 Our models do not require relaxing or embedding discrete data (including images) into continuous spaces, and can embed structure or domain knowledge into the transition matrices used by the forward process. We achieve significantly improved results by taking advantage of this flexibility. We develop structured corruption processes appropriate for text data, using similarity between tokens to enable gradual corruption and denoising. Expanding further, we also explore corruption processes that insert [MASK] tokens, which let us draw parallels to autoregressive and mask-based generative models. Finally, we study discrete diffusion models for quantized images, taking inspiration from the locality exploited by continuous diffusion models. This leads to a particular choice of discrete corruption process that diffuses preferentially to more similar states and leads to much better results in the image domain. Overall, we make a number of technical and conceptual contributions. Beyond designing several new structured diffusion models, we introduce a new auxiliary loss which stabilizes training of D3PMs and a family of noise schedules based on mutual information that lead to improved performance. We strongly outperform various non-autoregressive baselines for text generation on character-level text generation, and successfully scale discrete diffusion models to large vocabularies and long sequence lengths. We also achieve strong results on the image dataset CIFAR-10, approaching or exceeding the Gaussian diffusion model from Ho et al. [19] on log-likelihoods and sample quality. ## 2 Background: diffusion models\n\nDiffusion models [43] are latent variable generative models characterized by a forward and a reverse Markov process. The forward process $q\\left(\\boldsymbol{x}_{1: T} \\mid \\boldsymbol{x}_{0}\\right)=\\prod_{t=1}^{T} q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)$ corrupts the data $\\boldsymbol{x}_{0} \\sim$ $q\\left(\\boldsymbol{x}_{0}\\right)$ into a sequence of increasingly noisy latent variables $\\boldsymbol{x}_{1: T}=\\boldsymbol{x}_{1}, \\boldsymbol{x}_{2}, \\ldots, \\boldsymbol{x}_{T}$. The learned reverse Markov process $p_{\\theta}\\left(\\boldsymbol{x}_{0: T}\\right)=p\\left(\\boldsymbol{x}_{T}\\right) \\prod_{t=1}^{T} p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)$ gradually denoises the latent variables towards the data distribution. For example, for continuous data, the forward process typically adds Gaussian noise, which the reverse process learns to remove. In order to optimize the generative model $p_{\\theta}\\left(\\boldsymbol{x}_{0}\\right)$ to fit the data distribution $q\\left(\\boldsymbol{x}_{0}\\right)$, we typically optimize a variational upper bound on the negative log-likelihood:\n\n$$\n\\begin{aligned}\nL_{\\mathrm{vb}}=\\mathbb{E}_{q\\left(\\boldsymbol{x}_{0}\\right)}[ & \\underbrace{D_{\\mathrm{KL}}\\left[q\\left(\\boldsymbol{x}_{T} \\mid \\boldsymbol{x}_{0}\\right)|| p\\left(\\boldsymbol{x}_{T}\\right)\\right]}_{L_{T}}+\\sum_{t=2}^{T} \\underbrace{\\mathbb{E}_{q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)}\\left[D_{\\mathrm{KL}}\\left[q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)|| p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)\\right]\\right]}_{L_{0}} \\\\\n& \\underbrace{-\\mathbb{E}_{q\\left(\\boldsymbol{x}_{1} \\mid \\boldsymbol{x}_{0}\\right)}\\left[\\log p_{\\theta}\\left(\\boldsymbol{x}_{0} \\mid \\boldsymbol{x}_{1}\\right)\\right]}_{L_{t-1}}] . \\end{aligned}\n$$\n\nWhen the number of time steps $T$ goes to infinity, both the forward process and the reverse process share the same functional form [13], allowing the use of a learned reverse process from the same class of distributions as that of the forward process. Furthermore, for several choices of the forward process the distribution $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)$ converges to a stationary distribution $\\pi(\\boldsymbol{x})$ in the limit $t \\rightarrow \\infty$ independent of the value of $\\boldsymbol{x}_{0}$. When the number of time steps $T$ is large enough and we choose $\\pi(\\boldsymbol{x})$ as the prior $p\\left(\\boldsymbol{x}_{T}\\right)$, we can guarantee that the $L_{T}$ term in (1) will approach zero regardless of the data distribution $q\\left(\\boldsymbol{x}_{0}\\right)$. (Alternatively, one can use a learned prior $p_{\\theta}\\left(\\boldsymbol{x}_{T}\\right)$.)\n\nWhile $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)$ can in theory be arbitrary, efficient training of $p_{\\theta}$ is possible when $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)$ :\n\n1. Permits efficient sampling of $\\boldsymbol{x}_{t}$ from $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)$ for an arbitrary time $t$, allowing us to randomly sample timesteps and optimize each $L_{t-1}$ term individually with stochastic gradient descent,\n2. Has a tractable expression for the forward process posterior $q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)$, which allows us to compute the KL divergences present in the $L_{t-1}$ term of (1). The majority of recent work in continuous spaces [19, 44, 7, 30] defines the forward and reverse distributions as $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)=\\mathcal{N}\\left(\\boldsymbol{x}_{t} \\mid \\sqrt{1-\\beta_{t}} \\boldsymbol{x}_{t-1}, \\beta_{t} \\boldsymbol{I}\\right)$ and $p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)=$ $\\mathcal{N}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{\\mu}_{\\theta}\\left(\\boldsymbol{x}_{t}, t\\right), \\boldsymbol{\\Sigma}_{\\theta}\\left(\\boldsymbol{x}_{t}, t\\right)\\right)$, respectively. The aforementioned properties hold in the case of these Gaussian diffusion models: the forward process $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)$ converges to a stationary distribution, motivating the choice $p\\left(\\boldsymbol{x}_{T}\\right)=\\mathcal{N}\\left(\\boldsymbol{x}_{T} \\mid \\mathbf{0}, \\boldsymbol{I}\\right)$, and both $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)$ and $q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)$ are tractable Gaussian distributions for which the KL divergence can be computed analytically. ## 3 Diffusion models for discrete state spaces\n\nDiffusion models with discrete state spaces were first introduced by Sohl-Dickstein et al. [43], who considered a diffusion process over binary random variables. Hoogeboom et al. [20] extended the model class to categorical random variables with transition matrices characterized by uniform transition probabilities. In their supplementary material, Song et al. [44] also derived this extension, although no experiments were performed with this model class. Here, we briefly describe a more general framework for diffusion with categorical random variables which includes these models as special cases. For scalar discrete random variables with $K$ categories $x_{t}, x_{t-1} \\in 1, \\ldots, K$ the forward transition probabilities can be represented by matrices: $\\left[\\boldsymbol{Q}_{t}\\right]_{i j}=q\\left(x_{t}=j \\mid x_{t-1}=i\\right)$. Denoting the one-hot version of $x$ with the row vector $\\boldsymbol{x}$, we can write\n\n$$\nq\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)=\\operatorname{Cat}\\left(\\boldsymbol{x}_{t} ; \\boldsymbol{p}=\\boldsymbol{x}_{t-1} \\boldsymbol{Q}_{t}\\right),\n$$\n\nwhere $\\operatorname{Cat}(\\boldsymbol{x} ; \\boldsymbol{p})$ is a categorical distribution over the one-hot row vector $\\boldsymbol{x}$ with probabilities given by the row vector $\\boldsymbol{p}$, and $\\boldsymbol{x}_{t-1} \\boldsymbol{Q}_{t}$ is to be understood as a row vector-matrix product. We assume that $\\boldsymbol{Q}_{t}$ is applied to each pixel of an image or each token in a sequence independently, and that $q$ factorizes over these higher dimensions as well; we thus write $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)$ in terms of a single element. Starting from $\\boldsymbol{x}_{0}$, we obtain the following $t$-step marginal and posterior at time $t-1$ :\n\n$$\n\\begin{aligned}\n& q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)=\\operatorname{Cat}\\left(\\boldsymbol{x}_{t} ; \\boldsymbol{p}=\\boldsymbol{x}_{0} \\overline{\\boldsymbol{Q}}_{t}\\right), \\quad \\text { with } \\quad \\overline{\\boldsymbol{Q}}_{t}=\\boldsymbol{Q}_{1} \\boldsymbol{Q}_{2} \\ldots \\boldsymbol{Q}_{t} \\\\\n& q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)=\\frac{q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}, \\boldsymbol{x}_{0}\\right) q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{0}\\right)}{q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)}=\\operatorname{Cat}\\left(\\boldsymbol{x}_{t-1} ; \\boldsymbol{p}=\\frac{\\boldsymbol{x}_{t} \\boldsymbol{Q}_{t}^{\\top} \\odot \\boldsymbol{x}_{0} \\overline{\\boldsymbol{Q}}_{t-1}}{\\boldsymbol{x}_{0} \\overline{\\boldsymbol{Q}}_{t} \\boldsymbol{x}_{t}^{\\top}}\\right)\n\\end{aligned}\n$$\n\nNote that due to the Markov property of the forward process $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}, \\boldsymbol{x}_{0}\\right)=q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)$. Assuming that the reverse process $p_{\\theta}\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)$ is also factorized as conditionally independent over the image or sequence elements, the KL divergence between $q$ and $p_{\\theta}$ can be computed by simply summing over all possible values of each random variable; we thus satisfy criteria 1 and 2 discussed in Section 2 Depending on $\\boldsymbol{Q}_{t}$, the cumulative products $\\overline{\\boldsymbol{Q}}_{t}$ can often be computed in closed form, or simply precomputed for all $t$.",
    "d3pms-1": "However, for large $K$ and large $T$ this may be prohibitive. In Appendix A. 4 we discuss how to ensure $\\bar{Q}_{t}$ can still be computed efficiently in this case, allowing the framework to scale to a larger number of categories. In the next section we discuss the choice of the Markov transition matrices $\\boldsymbol{Q}_{t}$ and corresponding stationary distributions. From here on, we refer to the general class of diffusion models with discrete state spaces as Discrete Denoising Diffusion Probabilistic Models (D3PMs). ### 3.1 Choice of Markov transition matrices for the forward process\n\nAn advantage of the D3PM framework described above is the ability to control the data corruption and denoising process by choosing $Q_{t}$, in notable contrast to continuous diffusion, for which only additive Gaussian noise has received significant attention. Besides the constraint that the rows of $\\boldsymbol{Q}_{t}$ must sum to one to conserve probability mass, the only other constraint in choosing $\\boldsymbol{Q}_{t}$ is that the rows of $\\overline{\\boldsymbol{Q}}_{t}=\\boldsymbol{Q}_{1} \\boldsymbol{Q}_{2} \\ldots \\boldsymbol{Q}_{t}$ must converge to a known stationary distribution ${ }^{3}$ when $t$ becomes large, which can be guaranteed while imposing minimal restrictions on $\\boldsymbol{Q}_{t}$ (see Appendix A.1). We argue that for most real-world discrete data, including images and text, it makes sense to add domain-dependent structure to the transition matrices $\\boldsymbol{Q}_{t}$ as a way of controlling the forward corruption process and the learnable reverse denoising process. Below we briefly discuss the uniform transition matrices that have been studied in prior work [20], along with a set of structured transition matrices we have explored for our image and text dataset experiments; see Appendix A. 2 for more details on each matrix type. We also note that this set is not exhaustive, and many other transition matrices could also be used within the D3PM framework. Uniform (Appendix A.2.1). Sohl-Dickstein et al. [43] considered a simple $2 \\times 2$ transition matrix for binary random variables. Hoogeboom et al. [20] later extended this to categorical variables, proposing a transition matrix $\\boldsymbol{Q}_{t}=\\left(1-\\beta_{t}\\right) \\boldsymbol{I}+\\beta_{t} / K \\mathbb{1} \\mathbb{1}^{T}$ with $\\beta_{t} \\in[0,1]$. Since this transition matrix is doubly stochastic with strictly positive entries, the stationary distribution is uniform. Because the transition probability to any other state is uniform, in this paper we equivalently refer to this discrete diffusion instance as D3PM-uniform. Absorbing state (Appendix A.2.2). Motivated by the success of BERT [11] and recent work on Conditional Masked Language Models (CMLMs) in text, we consider a transition matrix with an absorbing state (called [MASK]), such that each token either stays the same or transitions to [MASK] with some probability $\\beta_{t}$. This does not impose particular relationships between categories, similar to uniform diffusion, but still allows corrupted tokens to be distinguished from original ones. Moreover, the stationary distribution is not uniform but has all the mass on the [MASK] token. For images, we reuse the grey pixel as the [MASK] absorbing token. Discretized Gaussian (Appendix A.2.3). Instead of transitioning uniformly to any other state, for ordinal data we propose imitating a continuous space diffusion model by using a discretized, truncated Gaussian distribution. We choose a normalization such that the transition matrix is doubly stochastic, leading to a uniform stationary distribution. This transition matrix will transition between more similar states with higher probability, and is well suited for quantized ordinal data such as images. Token embedding distance (Appendix A.2.4). Textual data does not have ordinal structure, but there may still be interesting semantic relationships. For instance, in a character level vocabulary vowels may be more similar to each other than they are to consonants. As a demonstration of the generality of the D3PM framework, we explore using similarity in an embedding space to guide the forward process, and construct a doubly-stochastic transition matrix that transitions more frequently between tokens that have similar embeddings while maintaining a uniform stationary distribution. For uniform and absorbing-state diffusion, the cumulative products $\\overline{\\boldsymbol{Q}}_{t}$ can be computed in closed form (see Appendix A.4.1); the remainder can be precomputed. ### 3.2 Noise schedules\n\nWe consider several different options for the noise schedule of the forward process. For discretized Gaussian diffusion, we explore linearly increasing the variance of the Gaussian before discretizing it. (Note that a linear schedule for $\\boldsymbol{Q}_{t}$ leads to a nonlinear amount of cumulative noise in $\\overline{\\boldsymbol{Q}}_{t}$.) For uniform diffusion we use the cosine schedule which sets the cumulative probability of a transition to a cosine function, as introduced by Nichol and Dhariwal [30] and adapted by Hoogeboom et al. [20]. For a general set of transition matrices $Q_{t}$ (such as the one based on token embeddings), previously proposed schedules may not be directly applicable. We consider linearly interpolating the mutual information between $\\boldsymbol{x}_{t}$ and $\\boldsymbol{x}_{0}$ to zero, i.e. $I\\left(\\boldsymbol{x}_{t} ; \\boldsymbol{x}_{0}\\right) \\approx\\left(1-\\frac{t}{T}\\right) H\\left(\\boldsymbol{x}_{0}\\right)$. Interestingly, for the\n\n[^1]specific case of absorbing-state D3PMs, this schedule reduces to exactly the $(T-t+1)^{-1}$ schedule proposed by Sohl-Dickstein et al.",
    "d3pms-2": "[43] for a Bernoulli diffusion process. See Appendix A.7 for more details. ### 3.3 Parameterization of the reverse process\n\nWhile it is possible to directly predict the logits of $p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)$ using a neural network $\\mathrm{nn}_{\\theta}\\left(\\boldsymbol{x}_{t}\\right)$, we follow Ho et al. [19] and Hoogeboom et al. [20] and focus on using a neural network $\\mathrm{nn}_{\\theta}\\left(\\boldsymbol{x}_{t}\\right)$ to predict the logits of a distribution $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$, which we combine with $q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)$ and a summation over one-hot representations of $\\boldsymbol{x}_{0}$ to obtain the following parameterization\n\n$$\np_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right) \\propto \\sum_{\\widetilde{\\boldsymbol{x}}_{0}} q\\left(\\boldsymbol{x}_{t-1}, \\boldsymbol{x}_{t} \\mid \\widetilde{\\boldsymbol{x}}_{0}\\right) \\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)\n$$\n\nWe note that under this $\\boldsymbol{x}_{0}$-parameterization the KL divergence $D_{\\mathrm{KL}}\\left[q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right) \\| p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)\\right]$ will be zero if $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$ places all of its probability mass on the original value $\\boldsymbol{x}_{0}$. The decomposition of $q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)$ in (3) also provides us with a motivation for this parameterization. According to (3), in a given state $\\boldsymbol{x}_{t}$, the optimal reverse process only takes into account transitions to states for which $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{t-1}\\right)$ is non-zero. Therefore, the sparsity pattern of $\\boldsymbol{Q}_{t}$ determines the sparsity pattern of the ideal reverse transition probabilities in $p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)$. The parameterization in (4) automatically ensures that the learned reverse probability distribution $p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)$ has the correct sparsity pattern dictated by the choice of the Markov transition matrix $\\boldsymbol{Q}_{t}$. This parameterization also lets us perform inference with $k$ steps at a time, by predicting $p_{\\theta}\\left(\\boldsymbol{x}_{t-k} \\mid \\boldsymbol{x}_{t}\\right)=\\sum q\\left(\\boldsymbol{x}_{t-k}, \\boldsymbol{x}_{t} \\mid \\widetilde{\\boldsymbol{x}}_{0}\\right) \\widetilde{p_{\\theta}}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$. Finally, when modeling ordinal discrete data, instead of predicting the logits of $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$ directly with the output of a neural net, another option is to model the probabilities with a truncated discretized logistic distribution (see Appendix A.8. This provides an extra ordinal inductive bias to the reverse model and boosts FID and log-likelihood scores for images. ### 3.4 Loss function\n\nWhile the original diffusion models introduced by Sohl-Dickstein et al. [43] were optimized with the negative variational lower bound $L_{\\mathrm{vb}}$ of (1), more recent diffusion models are optimized with different objectives. For instance, Ho et al. [19] derive a simplified loss function ( $L_{\\text {simple }}$ ) that reweights the negative variational bound, and Nichol and Dhariwal [30] explore a hybrid loss $L_{\\text {hybrid }}=L_{\\text {simple }}+\\lambda L_{\\mathrm{vb}}$ (using one term to learn the predicted mean and the other to learn predicted variance). Inspired by this recent work, we introduce an auxiliary denoising objective for the $\\boldsymbol{x}_{0}$-parameterization of the reverse process, which encourages good predictions of the data $\\boldsymbol{x}_{0}$ at each time step. We combine this with the negative variational lower bound, yielding the following alternative loss function:\n\n$$\nL_{\\lambda}=L_{\\mathrm{vb}}+\\lambda \\mathbb{E}_{q\\left(\\boldsymbol{x}_{0}\\right)} \\mathbb{E}_{q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)}\\left[-\\log \\widetilde{p}_{\\theta}\\left(\\boldsymbol{x}_{0} \\mid \\boldsymbol{x}_{t}\\right)\\right]\n$$\n\nNote that the auxiliary loss coincides with the cross entropy term $L_{0}$ in (1) at $t=1$. Furthermore, due to the $\\boldsymbol{x}_{0}$-parameterization of $p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)$, both the auxiliary loss term and $D_{\\mathrm{KL}}\\left[q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)|| p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)\\right]$ in $L_{\\mathrm{vb}}$ are minimized exactly when $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$ has all its mass on the datapoint $\\boldsymbol{x}_{0}$. We find that training with this loss leads to improved quality of image samples. ## 4 Connection to existing probabilistic models for text\n\nIn this section we expand on interesting connections between the D3PM framework and several existing probabilistic and language modeling approaches. BERT is a one-step diffusion model: One possible D3PM transition matrix is a combination of a uniform transition matrix and an absorbing state at the [MASK] token (i.e. $\\boldsymbol{Q}=\\alpha \\mathbb{1} e_{m}^{T}+\\beta \\mathbb{1} \\mathbb{1}^{T} / K+$ $(1-\\alpha-\\beta) I$, where $e_{m}$ is a one-hot vector on the [MASK] token). For a one-step diffusion process in which $q\\left(\\boldsymbol{x}_{1} \\mid \\boldsymbol{x}_{0}\\right)$ replaces $10 \\%$ of tokens with [MASK] and 5\\% uniformly at random, this leads precisely to the BERT denoising objective, i.e. $L_{v b}-L_{T}=-\\mathbb{E}_{q\\left(\\boldsymbol{x}_{1} \\mid \\boldsymbol{x}_{0}\\right)}\\left[\\log p_{\\theta}\\left(\\boldsymbol{x}_{0} \\mid \\boldsymbol{x}_{1}\\right)\\right]=L_{B E R T}$, since $L_{T}$ is a constant independent of $\\theta$ (assuming a fixed prior). Autoregressive models are (discrete) diffusion models: Consider a diffusion process that deterministically masks tokens one-by-one in a sequence of length $N=T: q\\left(\\left[\\boldsymbol{x}_{t}\\right]_{i} \\mid \\boldsymbol{x}_{0}\\right)=\\left[\\boldsymbol{x}_{0}\\right]_{i}$ if $i<$\n$N-t$ else [MASK]. This is a deterministic forward process, so $q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)$ is a delta distribution on the $\\boldsymbol{x}_{t}$ sequence with one fewer mask: $q\\left(\\left[\\boldsymbol{x}_{t-1}\\right]_{i} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)=\\delta_{\\left[\\boldsymbol{x}_{t}\\right]_{i}}$ if $i \\neq T-t$ else $\\delta_{\\left[\\boldsymbol{x}_{0}\\right]_{i}}$. While this process is not applied independently to each token, it can be recast as an independently-applied diffusion process on the product space $[0 \\ldots N] \\times \\mathcal{V}$, where each token is tagged with its position in the sequence, $\\mathcal{V}$ is the vocabulary, and $\\boldsymbol{Q}$ is an $N \\times|\\mathcal{V}| \\times N \\times|\\mathcal{V}|$ sparse matrix. Because all tokens except the one at position $i=T-t$ have deterministic posteriors, the KL divergence $D_{K L}\\left(q\\left(\\left[\\boldsymbol{x}_{t-1}\\right]_{j} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right) \\| p_{\\theta}\\left(\\left[\\boldsymbol{x}_{t-1}\\right]_{j} \\mid \\boldsymbol{x}_{t}\\right)\\right)$ is zero for all other positions. The only token for which this is not true is the token at position $i$, for which $D_{K L}\\left(q\\left(\\left[\\boldsymbol{x}_{t-1}\\right]_{i} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)||\\right.$ $\\left.p_{\\theta}\\left(\\left[\\boldsymbol{x}_{t-1}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right)\\right)=-\\log p_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right)$, the standard cross entropy loss for an autoregressive model. (Generative) Masked Language-Models (MLMs) are diffusion models: Generative Masked Language Models ([14], [54]) are generative models that generate text from a sequence of [MASK] tokens. They are usually trained by sampling a sequence $\\boldsymbol{x}_{0}$, masking $k$ tokens according to some schedule, and learning to predict the masked tokens given context. It turns out that a D3PM absorbing ([MASK]) model trained on the usual ELBO objective with the $x_{0}$-parameterization from 3.3 reduces to a reweighted version of this MLM objective (see Appendix A.3 for a detailed derivation). ## 5 Text generation\n\nFor text, we experiment with generation on two datasets: text8 [28], a character-level dataset extracted from English-language Wikipedia, and the One Billion Word dataset (LM1B) [6], a large dataset of shuffled English-language sentences. For both, we train a D3PM uniform model based on the work by Hoogeboom et al. [20] (D3PM uniform) and a model that masks tokens (D3PM absorbing). We also consider a model that transitions uniformly to nearest neighbors in a token embedding space (D3PM NN). We follow Hoogeboom et al. [20] and use $T=1000$ timesteps, although we are also able to evaluate on fewer due to the parameterization in Section 3.3 . ### 5.1 Character-level generation on text8\n\ntext8 is a character-level text dataset consisting of a small vocabulary of 27 tokens: the letters ' $a$ '- ' $z$ ' and the ' - ' whitespace token. We follow the convention of training and evaluating text8 in chunks of length 256 without any preprocessing [20]. For nearest-neighbor D3PM, our nearest neighbor graph in character-space is shown in Appendix B.2.1. D3PM uniform models were trained with a cosine schedule from Hoogeboom et al. [20] (ablations in Appendix B.2.1), while D3PM absorbing and D3PM NN models were trained with a mutual information schedule. Table 1: Quantitative results on text8. NLL is reported on the entire test set. Sample times are for generating a single example of length 256. Results are reported on two seeds. All models are standard 12-layer transformers unless otherwise noted. ${ }^{\\dagger}$ Transformer XL is a 24-layer transformer, using a 784 context window. ${ }^{\\ddagger}$ Results reported by [20] by running code from official repository. | Model | Model steps | NLL (bits/char) ( $\\downarrow$ ) | Sample time $(\\mathrm{s})(\\downarrow)$ |\n| :---: | :---: | :---: | :---: |\n| Discrete Flow 49 ( $8 \\times 3$ layers) | - | 1.23 | 0.16 |\n| Argmax Coupling Flow 20 | - | 1.80 | $0.40 \\pm 0.03$ |\n| IAF / SCF 57 ] | - | 1.88 | $0.04 \\pm 0.0004$ |\n| Multinomial Diffusion (D3PM uniform) 20] | 1000 | $\\leq 1.72$ | $26.6 \\pm 2.2$ |\n| D3PM uniform 20 (ours) | 1000 | $\\leq 1.61 \\pm 0.02$ | $3.6 \\pm 0.4$ |\n| D3PM NN ( $L_{\\mathrm{vb}}$ ) (ours) | 1000 | $\\leq 1.59 \\pm 0.03$ | $3.1474 \\pm 0.0002$ |\n| D3PM mask ( $L_{\\lambda=0.01}$ ) (ours) | 1000 | $\\leq 1.45 \\pm 0.02$ | $3.4 \\pm 0.3$ |\n| D3PM uniform 20 (ours) | 256 | $\\leq 1.68 \\pm 0.01$ | $0.5801 \\pm 0.0001$ |\n| D3PM NN ( $L_{\\mathrm{vb}}$ ) (ours) | 256 | $\\leq 1.64 \\pm 0.02$ | $0.813 \\pm 0.002$ |\n| D3PM absorbing ( $L_{\\lambda=0.01}$ ) (ours) | 256 | $\\leq 1.47 \\pm 0.03$ | $0.598 \\pm 0.002$ |\n| Transformer decoder (ours) | 256 | 1.23 | $0.3570 \\pm 0.0002$ |\n| Transformer decoder (1] | 256 | 1.18 | - |\n| Transformer XL $10{ }^{\\dagger}$ | 256 | 1.08 | - |\n| D3PM uniform 20 (ours) | 20 | $\\leq 1.79 \\pm 0.03$ | $0.0771 \\pm 0.0005$ |\n| D3PM NN ( $L_{\\mathrm{vb}}$ ) (ours) | 20 | $\\leq 1.75 \\pm 0.02$ | $0.1110 \\pm 0.0001$ |\n| D3PM absorbing ( $L_{\\lambda=0.01}$ ) (ours) | 20 | $\\leq 1.56 \\pm 0.04$ | $0.0785 \\pm 0.0003$ |\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-07.jpg?height=410&width=1391&top_left_y=245&top_left_x=365)\n\nFigure 2: Left: perplexity v.s. sampling iterations for LM1B. Right: Using a trained D3PM absorbing model for LM1B to (top) generate new sentences and (bottom) reconstruct corrupted examples. Table 2: Quantitative results on LM1B. Perplexity reported on the test set. Results are reported on two seeds. All models have context window length 128 and 12 layers unless otherwise noted. ${ }^{\\dagger}$ Transformer XL is a 24 layer transformer. ${ }^{\\ddagger}$ rounded for readability, see Appendix B.2.2\n\n| Metric: <br> inference steps: | Perplexity ( $\\downarrow$ ) |  |  | Sample time ${ }^{\\ddagger}(\\mathrm{s})(\\downarrow)$ |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | 1000 | 128 | 64 | 1000 | 128 | 64 |\n| D3PM uniform | $137.9 \\pm 2.1$ | $139.2 \\pm 1.2$ | $145.0 \\pm 1.2$ | 1.82 | 0.21 | 0.08 |\n| D3PM NN | $149.5 \\pm 1.3$ | $158.6 \\pm 2.2$ | $160.4 \\pm 1.2$ | 21.29 | 6.69 | 5.88 |\n| D3PM absorbing | $76.9 \\pm 2.3$ | $80.1 \\pm 1.2$ | $83.6 \\pm 6.1$ | 1.90 | 0.19 | 0.10 |\n| Transformer (ours) | - | 43.6 | - | - | 0.26 | - |\n| Transformer XL [10] ${ }^{\\dagger}$ | - | 21.8 | - | - | - | - |\n\nTable 1 shows that for D3PM, the D3PM absorbing model performed the best, exceeding the uniform and NN diffusion models. We were able to improve upon the baseline result of [20] with hyperparameter tuning, and our uniform and NN results outperformed results from Hoogeboom et al. [20] across all inference steps, down to as few as 20. We found that $L_{\\lambda=0.01}$ worked best for D3PM absorbing, while $L_{\\mathrm{vb}}$ was better for D3PM uniform. Our model outperforms all nonautoregressive baselines except one, the Discrete Flow model [49] (for which unfortunately no open-source implementations exist), and is also faster than all but one method, the IAF/SCF model [57]. It is also nearly 20x faster than an autoregressive transformer of the same size. We also include a plot of inference time as a function of iterations in Appendix B.2.1 D3PM with the mask absorbing token was by far the best performing model, which lends credibility to the use of masks in denoising auto-encoders. Nearest-neighbor diffusion only narrowly improves upon a D3PM-uniform model: this was a surprising negative result for us, suggesting that not all notions of structure are meaningful. ### 5.2 Text generation on LM1B\n\nText generation for large-scale text datasets and large vocabularies with discrete diffusion models has not been previously demonstrated. We include results from LM1B as a proof of concept, showing that these models can indeed scale (as discussed in Appendix A.4), and that the D3PM absorbing model continues to excel. All models were trained and evaluated on packed sequences of length 128, using a sentencepiece ${ }^{4}$ vocabulary of size 8192. Table 2 contains results from experiments on LM1B. Overall, mask diffusion (D3PM absorbing) does relatively well, approaching the performance of a comparable autoregressive model of the same size, and scaling to far fewer steps, while uniform diffusion performs significantly worse. We find, surprisingly, that the D3PM NN model performs worse than the uniform model in terms of log likelihoods (although it demonstrates unique qualitative behavior). This suggests that word embedding similarity may not be a meaningful kind of locality in a diffusion process. We found the the $L_{\\lambda=0.01}$ loss worked best for the mask absorbing model, but reduced performance for the other models. We note the surprising scaling in perplexity in Figure 2 , achieving strong results with as few as 10 inference steps. We also show samples from our model and completions from corrupted samples. [^2]Table 3: Inception scores (IS), Frechet Inception Distance (FID) and negative log-likehood (NLL) on the image dataset CIFAR-10. The NLL is reported on the test set in bits per dimension. We report our results as averages with standard deviations, obtained by training five models with different seeds. | Model | IS ( $\\uparrow$ ) | FID $(\\downarrow)$ | NLL ( $\\downarrow$ ) |\n| :---: | :---: | :---: | :---: |\n| Sparse Transformer (9) |  |  | 2.80 |\n| NCSN (45] | $8.87 \\pm 0.12$ | 25.32 |  |\n| NCSNv2 46 | $8.40 \\pm 0.07$ | 10.87 |  |\n| StyleGAN2 + ADA 22] | $9.74 \\pm 0.05$ | 3.26 |  |\n| Diffusion (original), $L_{\\mathrm{vb}} 43$ |  |  | $\\leq 5.40$ |\n| DDPM $L_{\\mathrm{vb}} 19$ | $7.67 \\pm 0.13$ | 13.51 | $\\leq 3.70$ |\n| DDPM $L_{\\text {simple }} 19$ | $9.46 \\pm 0.11$ | 3.17 | $\\leq 3.75$ |\n| Improved DDPM $L_{\\mathrm{vb}}$ 30] |  | 11.47 | $\\leq 2.94$ |\n| Improved DDPM $L_{\\text {simple }} 30$ |  | 2.90 | $\\leq 3.37$ |\n| DDPM++ cont 47 |  | 2.92 | 2.99 |\n| NCSN++ cont. 47 | 9.89 | 2.20 |  |\n| D3PM uniform $L_{\\mathrm{vb}}$ | $5.99 \\pm 0.14$ | $51.27 \\pm 2.15$ | $\\leq 5.08 \\pm 0.02$ |\n| D3PM absorbing $L_{\\mathrm{vb}}$ | $6.26 \\pm 0.10$ | $41.28 \\pm 0.65$ | $\\leq 4.83 \\pm 0.02$ |\n| D3PM absorbing $L_{\\lambda=0.001}$ | $6.78 \\pm 0.08$ | $30.97 \\pm 0.64$ | $\\leq 4.40 \\pm 0.02$ |\n| D3PM Gauss $L_{\\mathrm{vb}}$ | $7.75 \\pm 0.13$ | $15.30 \\pm 0.55$ | $\\leq 3.966 \\pm 0.005$ |\n| D3PM Gauss $L_{\\lambda=0.001}$ | $8.54 \\pm 0.12$ | $8.34 \\pm 0.10$ | $\\leq 3.975 \\pm 0.006$ |\n| D3PM Gauss + logistic $L_{\\lambda=0.001}$ | $8.56 \\pm 0.10$ | $7.34 \\pm 0.19$ | $\\leq 3.435 \\pm 0.007$ |\n\n## 6 Image generation\n\nWe evaluate the performance of several D3PM models on the task of unconditional image generation with the dataset CIFAR-10 [27]. We follow Ho et al. [19] and use $T=1000$ timesteps for all models and verify that for all models the forward process converges to the stationary distribution within $T$ steps, yielding a value of at most $L_{T} \\approx 10^{-5}$ bits per dimension. We train three versions of D3PM with different transition matrices: doubly stochastic matrices with uniform transition probabilities (D3PM uniform) [20], transition matrices with an absorbing state located at R, G and B values of 128 (D3PM absorbing) and doubly stochastic discretized Gaussian transition matrices (D3PM Gauss). For the D3PM uniform model we experimented with a linear $\\beta_{t}$ schedule as well as the cosine schedule as proposed in [20], with the cosine schedule producing the best results. For D3PM absorbing we use the schedule $\\beta_{t}=(T-t+1)^{-1}$ as also proposed in [43], which corresponds to increasing the probability of being in the absorbing state linearly over time. For D3PM Gauss we use the same linear schedule as in [19]. See Appendix B.1 for more details on the experimental setup. Table 3 shows that for D3PM models trained with the $L_{\\mathrm{vb}}$ objective, D3PM Gauss performs better than D3PM absorbing and uniform on all metrics: Inception score (IS), Frechet Inception Distance (FID) and negative log-likelihood (NLL). The IS score of the uniform and absorbing D3PM models\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-08.jpg?height=565&width=1392&top_left_y=1794&top_left_x=365)\n\nFigure 3: Left: progressive sampling at $t=1000,900,800, \\ldots, 0$ for D3PM absorbing (top) and D3PM Gauss + logistic (bottom), trained with $L_{\\lambda}$ loss on CIFAR-10. These samples were cherry picked. Right: (non cherry picked) samples from the D3PM Gauss + logistic model. are comparable, while the FID score and NLL of the D3PM absorbing model are slightly better. We trained both D3PM absorbing and D3PM Gauss with the alternative loss function $L_{\\lambda}$ of (5), and we found $\\lambda=0.001$ to work best. We have also experimented with larger values of $\\lambda$ and a model trained only with the auxiliary denoising term in (5). Although this led to a more rapid increase in performance early on in training, the NLL leveled off at higher values for larger $\\lambda$ and the FID even started increasing again. The results show that the models trained with $L_{\\lambda}$ perform significantly better than their counterparts trained with $L_{\\mathrm{vb}}$. One explanation for this boost in performance is that the cross entropy term leads to gradient noise that varies less with the time step $t$, which is in contrast to the large change in magnitude of the $L_{t-1}$ terms in $L_{\\mathrm{vb}}$ for smaller $t$, as demonstrated by Nichol and Dhariwal [30]. Finally, we achieve our best results by combining D3PM Gauss trained on $L_{\\lambda}$ with a truncated logistic parameterization of the reverse process distribution $p_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$ (D3PM Gauss + logistic). Figure 3 shows samples from our best model (D3PM Gauss + logistic), as well as the D3PM absorbing model. ## 7 Related Work\n\nDiffusion generative models were first proposed by Sohl-Dickstein et al. [43] and have gained renewed attention recently due to strong results on image and waveform generation [19, 7]. Recent works have proposed improvements for diffusion model training, including importance sampling of the ELBO, better noise schedules [30] and implicit diffusion models [44]. Several works have also drawn connections to score matching [53, 21, 45], leading to improved sampling algorithms in the continuous-time limit [47]. While most works have considered continuous diffusion models, discrete diffusion-like models were described in [43] and applied to text generation and image segmentation data in [20]. Some works [31, 29] have dealt with discrete data by embedding it in continuous space and leveraging Gaussian diffusion, but have not applied this to text. Seff et al. [42] also considered generation of discrete structured objects using a diffusion-like Markov corruption process. For text, denoising autoencoders have a long history both in representation learning [2, 11] and more recently as generative models [54]. These closely resemble our absorbing state diffusion variants for a particular schedule and transition matrix (see Section 4), although our framing allows us to compute log-likelihoods and experiment with alternative transition matrices. Other works have considered non-autoregressive translation and speech transcription via insertion and deletion [16, 37], masking [14], and iteratively-refined sequence alignments [5, 38]. ## 8 Discussion\n\nWe have presented D3PMs, a class of models that improves diffusion models for discrete data by defining new kinds of discrete corruption processes. We achieve strong empirical results relative to previous work on discrete diffusion models, even surpassing performance of continuous diffusion models in terms of log-likelihoods for image generation. While these results are promising, one limitation is that - like much other work on non-autoregressive generative models-our models are still inferior to strong autoregressive models like Transformer XL for text generation, and continuous diffusion models still yield stronger results on image quality. We expect that D3PMs can benefit further from the rapid development of continuous diffusion models [47, 30]. For example, further research in alternative losses for D3PM's can take inspiration from the reweighted $L_{\\text {simple }}$ objective used in [19], or the resampled variational bound in Nichol and Dhariwal [30]. Furthermore, D3PM's might benefit from increasing the number of timesteps and a more optimized noise schedule, as discussed in Nichol and Dhariwal [30]. Another limitation comes from the choice of evaluation metrics that we use (and that are standard for evaluation of generative models). Inception score and Frechet Inception Distance are based on neural networks that have been trained on a particular distribution of data, which is not representative for all use-cases, and focusing on average quality metrics may not accurately reflect performance across the wide diversity of settings where these generative models may be applied. This creates a risk of negative social impacts where advances disproportionately favor a subset of the population. Going forward, we are excited about the space of possibilities that arise within the D3PM framework. We have found successes in leveraging the flexibility that comes from defining discrete corruption processes for discrete data, but we believe\nthat there are many more possibilities that make use of richer forms of structure to define even more powerful discrete diffusion models. ## Acknowledgments and Disclosure of Funding\n\nWe would like to thank Hugo Larochelle for providing high-level feedback during the project, and Ben Poole for reviewing a draft version of this manuscript. We would also like to thank Julia Kreutzer and Xavier Garcia for helpful conversations about language experiments. We, the authors, declare to have no competing interests. The research conducted for this paper was entirely supported by Google. ## References\n\n[1] Rami Al-Rfou, Dokook Choe, Noah Constant, Mandy Guo, and Llion Jones. Character-Level language modeling with deeper Self-Attention. arXiv preprint arXiv:1808.04444, August 2018. [2] Yoshua Bengio, Li Yao, Guillaume Alain, and Pascal Vincent. Generalized denoising AutoEncoders as generative models.",
    "d3pms-3": "arXiv preprint arXiv:1305.6663, May 2013. [3] James Bradbury, Roy Frostig, Peter Hawkins, Matthew James Johnson, Chris Leary, Dougal Maclaurin, George Necula, Adam Paszke, Jake VanderPlas, Skye Wanderman-Milne, and Qiao Zhang. JAX: composable transformations of Python+NumPy programs, 2018. URL http://github.com/google/jax\n[4] Andrew Brock, Jeff Donahue, and Karen Simonyan. Large scale GAN training for high fidelity natural image synthesis. In International Conference on Learning Representations, 2019. [5] William Chan, Chitwan Saharia, Geoffrey Hinton, Mohammad Norouzi, and Navdeep Jaitly. Imputer: Sequence modelling via imputation and dynamic programming.",
    "d3pms-4": "In International Conference on Machine Learning, pages 1403-1413. PMLR, 2020. [6] Ciprian Chelba, Tomas Mikolov, Mike Schuster, Qi Ge, Thorsten Brants, Phillipp Koehn, and Tony Robinson. One billion word benchmark for measuring progress in statistical language modeling.",
    "d3pms-5": "arXiv preprint arXiv:1312.3005, December 2013. [7] Nanxin Chen, Yu Zhang, Heiga Zen, Ron J Weiss, Mohammad Norouzi, and William Chan. WaveGrad: Estimating gradients for waveform generation.",
    "d3pms-6": "arXiv preprint arXiv:2009.00713, September 2020. [8] Xi Chen, Nikhil Mishra, Mostafa Rohaninejad, and Pieter Abbeel. PixelSNAIL: An improved autoregressive generative model. In International Conference on Machine Learning, pages 863-871, 2018. [9] Rewon Child, Scott Gray, Alec Radford, and Ilya Sutskever. Generating long sequences with sparse transformers. arXiv preprint arXiv:1904.10509, 2019. [10] Zihang Dai, Zhilin Yang, Yiming Yang, Jaime Carbonell, Quoc V Le, and Ruslan Salakhutdinov. Transformer-XL: Attentive language models beyond a Fixed-Length context. arXiv preprint arXiv:1901.02860, January 2019. [11] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep bidirectional transformers for language understanding.",
    "d3pms-7": "arXiv preprint arXiv:1810.04805, October 2018. [12] Laurent Dinh, Jascha Sohl-Dickstein, and Samy Bengio. Density estimation using Real NVP.",
    "d3pms-8": "arXiv preprint arXiv:1605.08803, 2016. [13] W Feller. On the theory of stochastic processes, with particular reference to applications. In Proceedings of the [First] Berkeley Symposium on Mathematical Statistics and Probability. The Regents of the University of California, 1949. [14] Marjan Ghazvininejad, Omer Levy, Yinhan Liu, and Luke Zettlemoyer. Mask-Predict: Parallel decoding of conditional masked language models. arXiv preprint arXiv:1904.09324, April 2019 . [15] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In Advances in Neural Information Processing Systems, pages 2672-2680, 2014. [16] Jiatao Gu, Changhan Wang, and Jake Zhao. Levenshtein transformer.",
    "d3pms-9": "arXiv preprint arXiv:1905.11006, May 2019. [17] Jonathan Heek, Anselm Levskaya, Avital Oliver, Marvin Ritter, Bertrand Rondepierre, Andreas Steiner, and Marc van Zee. Flax: A neural network library and ecosystem for JAX, 2020. URL http://github.com/google/flax\n[18] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. GANs trained by a two time-scale update rule converge to a local Nash equilibrium.",
    "d3pms-10": "In Advances in Neural Information Processing Systems, pages 6626-6637, 2017. [19] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. In Advances in Neural Information Processing Systems, pages 6840-6851, 2020. [20] Emiel Hoogeboom, Didrik Nielsen, Priyank Jaini, Patrick Forr\u00e9, and Max Welling. Argmax flows and multinomial diffusion: Towards non-autoregressive language models.",
    "d3pms-11": "arXiv preprint arXiv:2102.05379, 2021. [21] Aapo Hyv\u00e4rinen, Juha Karhunen, and Erkki Oja. Independent component analysis, volume 46. John Wiley \\& Sons, 2004. [22] Tero Karras, Miika Aittala, Janne Hellsten, Samuli Laine, Jaakko Lehtinen, and Timo Aila. Training generative adversarial networks with limited data. arXiv preprint arXiv:2006.06676v1, 2020. [23] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In International Conference on Learning Representations, 2015. [24] Diederik P Kingma and Prafulla Dhariwal. Glow: Generative flow with invertible 1x1 convolutions. In Advances in Neural Information Processing Systems, pages 10215-10224, 2018. [25] Diederik P Kingma and Max Welling. Auto-encoding variational Bayes. arXiv preprint arXiv: $1312.6114,2013$. [26] Zhifeng Kong, Wei Ping, Jiaji Huang, Kexin Zhao, and Bryan Catanzaro. Diffwave: A versatile diffusion model for audio synthesis.",
    "d3pms-12": "arXiv preprint arXiv:2009.09761, 2020. [27] Alex Krizhevsky, Geoffrey Hinton, et al. Learning multiple layers of features from tiny images.",
    "d3pms-13": "2009. [28] Matt Mahoney. Text8 dataset. http://mattmahoney.net/dc/textdata, 2011. Accessed: 2021-5-24. [29] Gautam Mittal, Jesse Engel, Curtis Hawthorne, and Ian Simon. Symbolic music generation with diffusion models. arXiv preprint arXiv:2103.16091, March 2021. [30] Alex Nichol and Prafulla Dhariwal. Improved denoising diffusion probabilistic models. arXiv preprint arXiv:2102.09672, 2021. [31] Chenhao Niu, Yang Song, Jiaming Song, Shengjia Zhao, Aditya Grover, and Stefano Ermon. Permutation invariant graph generation via score-based generative modeling. arXiv preprint arXiv:2003.00638, March 2020. [32] George Papamakarios, Eric Nalisnick, Danilo Jimenez Rezende, Shakir Mohamed, and Balaji Lakshminarayanan. Normalizing flows for probabilistic modeling and inference. arXiv preprint arXiv:1912.02762, 2019. [33] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a unified text-to-text transformer. arXiv preprint arXiv:1910.10683, 2020. [34] Danilo Rezende and Shakir Mohamed. Variational inference with normalizing flows. In International Conference on Machine Learning, pages 1530-1538, 2015. [35] Danilo Jimenez Rezende, Shakir Mohamed, and Daan Wierstra. Stochastic backpropagation and approximate inference in deep generative models. In International Conference on Machine Learning, pages 1278-1286, 2014. [36] Olaf Ronneberger, Philipp Fischer, and Thomas Brox. U-Net: Convolutional networks for biomedical image segmentation.",
    "d3pms-14": "In International Conference on Medical Image Computing and Computer-Assisted Intervention, pages 234-241.",
    "d3pms-15": "Springer, 2015. [37] Laura Ruis, Mitchell Stern, Julia Proskurnia, and William Chan. Insertion-deletion transformer. arXiv preprint arXiv:2001.05540, 2020. [38] Chitwan Saharia, William Chan, Saurabh Saxena, and Mohammad Norouzi. Non-autoregressive machine translation with latent alignments. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1098-1108, 2020. [39] Tim Salimans and Durk P Kingma. Weight normalization: A simple reparameterization to accelerate training of deep neural networks. In Advances in Neural Information Processing Systems, pages 901-909, 2016. [40] Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen. Improved techniques for training gans. In Advances in Neural Information Processing Systems, pages 2234-2242, 2016. [41] Tim Salimans, Andrej Karpathy, Xi Chen, and Diederik P Kingma. PixelCNN++: Improving the PixelCNN with discretized logistic mixture likelihood and other modifications. In International Conference on Learning Representations, 2017. [42] Ari Seff, Wenda Zhou, Farhan Damani, Abigail Doyle, and Ryan P Adams. Discrete object generation with reversible inductive construction. arXiv preprint arXiv:1907.08268, July 2019. [43] Jascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsupervised learning using nonequilibrium thermodynamics. In International Conference on Machine Learning, pages 2256-2265, 2015. [44] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In International Conference on Learning Representations, 2021. [45] Yang Song and Stefano Ermon. Generative modeling by estimating gradients of the data distribution. In Advances in Neural Information Processing Systems, pages 11895-11907, 2019. [46] Yang Song and Stefano Ermon. Improved techniques for training score-based generative models. arXiv preprint arXiv:2006.09011, 2020. [47] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. arXiv preprint arXiv:2011.13456, November 2020. [48] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon Shlens, and Zbigniew Wojna. Rethinking the inception architecture for computer vision. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR), June 2016. [49] Dustin Tran, Keyon Vafa, Kumar Agrawal, Laurent Dinh, and Ben Poole. Discrete flows: Invertible generative models of discrete data. In Advances in Neural Information Processing Systems, volume 32, 2019. [50] Aaron van den Oord, Sander Dieleman, Heiga Zen, Karen Simonyan, Oriol Vinyals, Alex Graves, Nal Kalchbrenner, Andrew Senior, and Koray Kavukcuoglu. WaveNet: A generative model for raw audio. arXiv preprint arXiv:1609.03499, 2016. [51] Aaron van den Oord, Nal Kalchbrenner, and Koray Kavukcuoglu. Pixel recurrent neural networks. International Conference on Machine Learning, 2016. [52] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In Advances in Neural Information Processing Systems, pages 5998-6008, 2017. [53] Pascal Vincent. A connection between score matching and denoising autoencoders.",
    "d3pms-16": "Neural Computation, 23(7):1661-1674, 2011. [54] Alex Wang and Kyunghyun Cho. BERT has a mouth, and it must speak: BERT as a markov random field language model.",
    "d3pms-17": "arXiv preprint arXiv:1902.04094, February 2019. [55] Yuxin Wu and Kaiming He. Group normalization. In Proceedings of the European Conference on Computer Vision $(E C C V)$, pages $3-19,2018$. [56] Sergey Zagoruyko and Nikos Komodakis. Wide residual networks. arXiv preprint arXiv:1605.07146, 2016. [57] Zachary M Ziegler and Alexander M Rush. Latent normalizing flows for discrete sequences. arXiv preprint arXiv:1901.10548, January 2019. ## A Additional details regarding D3PMs\n\n## A. 1 Doubly-stochastic matrices\n\nAs discussed in Section 3.1 there are two constraints on $\\boldsymbol{Q}_{t}$ that allow it to be used within a D3PM: the rows of $\\boldsymbol{Q}_{t}$ must sum to one to conserve probability mass, and the rows of $\\overline{\\boldsymbol{Q}}_{t}=\\boldsymbol{Q}_{1} \\boldsymbol{Q}_{2} \\ldots \\boldsymbol{Q}_{t}$ must converge to a known stationary distribution as $t$ becomes large. Technically, it is also possible to use a learned prior $p_{\\theta}\\left(\\boldsymbol{x}_{T}\\right)$, but assuming this is still modeled under a conditional independence assumption, $q\\left(\\boldsymbol{x}_{T} \\mid \\boldsymbol{x}_{0}\\right)$ must still be close to a stationary distribution for the $L_{T}$ loss term to be small. One way to ensure that this occurs is to chose $Q_{t}$ as increasing powers of a doubly stochastic base matrix $\\boldsymbol{Q}$ (rows and columns sum to 1 ) with strictly positive entries. This is enough to ensure that $\\boldsymbol{Q}$ is is irreducible and aperiodic and that product $\\overline{\\boldsymbol{Q}}_{t}$ converges as $t \\rightarrow \\infty$ to a uniform distribution over all states. To show this, consider $\\pi_{i}=1 / K$ for $i=1, \\ldots, K$, and $\\sum_{i=1}^{K} \\boldsymbol{Q}_{i,:}=\\mathbf{1}$ and $\\sum_{j=1}^{K} \\boldsymbol{Q}_{:, j}=\\mathbf{1}$, then $[\\boldsymbol{Q} \\boldsymbol{\\pi}]_{i}=\\sum_{j=1}^{K} \\boldsymbol{Q}_{i, j} \\pi_{j}=1 / K \\sum_{j=1}^{K} \\boldsymbol{Q}_{i, j}=1 / K=\\pi_{i}$, thus the uniform distribution is an eigenvector of the transition matrix with eigenvalue 1. Convergence to this distribution follows from the Perron-Frobenius theorem for positive square matrices. More generally, a similar argument shows that even for $\\boldsymbol{Q}_{t}$ that are not powers of the same base matrix, as long as each $\\boldsymbol{Q}_{t}$ is doubly stochastic, irreducible, and aperiodic, the uniform distribution is the only possible stationary distribution, and as long as the second largest eigenvalue of $\\boldsymbol{Q}_{t}$ is bounded below, the cumulative product $\\bar{Q}_{t}$ will converge to the uniform distribution. In practice, we choose $\\boldsymbol{Q}_{t}$ to add more noise as $t$ increases, which ensures that $\\overline{\\boldsymbol{Q}}_{T}$ is very close to reaching a uniform stationary distribution. ## A. 2 More details on possible choices of Markov transition matrices\n\n## A.2.1 Uniform diffusion\n\nThe transition matrix described by Sohl-Dickstein et al. [43] for the binary case, and extended by Hoogeboom et al. [20], to the categorical case, can be represented using the following $K \\times K$ transition matrix\n\n$$\n\\left[\\boldsymbol{Q}_{t}\\right]_{i j}=\\left\\{\\begin{array}{lll}\n1-\\frac{K-1}{K} \\beta_{t} & \\text { if } & i=j \\\\\n\\frac{1}{K} \\beta_{t} & \\text { if } & i \\neq j\n\\end{array}\\right. $$\n\nThis transition matrix can also be written as $\\left(1-\\beta_{t}\\right) I+\\beta_{t} \\mathbb{1} \\mathbb{1}^{T} / K$, where $\\mathbb{1}$ is a column vector of all ones. ## A.2.2 Diffusion with an absorbing state\n\nFor our diffusion models with an absorbing state $m$, we use the following matrix:\n\n$$\n\\left[\\boldsymbol{Q}_{t}\\right]_{i j}=\\left\\{\\begin{array}{lll}\n1 & \\text { if } \\quad i=j=m \\\\\n1-\\beta_{t} & \\text { if } \\quad i=j \\neq m \\\\\n\\beta_{t} & \\text { if } \\quad j=m, i \\neq m\n\\end{array}\\right. $$\n\nThe transition matrix can also be written as $\\left(1-\\beta_{t}\\right) I+\\beta_{t} \\mathbb{1} e_{m}^{T}$, where $e_{m}$ is a vector with a one on the absorbing state $m$ and zeros elsewhere. Since $m$ is an absorbing state, the corruption process converges not to a uniform distribution but to the point-mass distribution on $m$. For text generation, we let $m$ be the [MASK] token at index $K-1$; this leads to a BERT-like training objective, which masks tokens according to some schedule and learns to denoise them iteratively (see Section4. For image generation, we set $m$ to the gray $\\operatorname{RGB}$ pixel $(128,128,128)$ at index $K / / 2$. ## A.2.3 Discretized Gaussian transition matrices\n\nFor our D3PM models applied to ordinal data, inspired by continuous-space diffusion models, we use the following $K \\times K$ matrix:\n\n$$\n\\left[\\boldsymbol{Q}_{t}\\right]_{i j}= \\begin{cases}\\frac{\\exp \\left(-\\frac{4|i-j|^{2}}{(K-1)^{2} \\beta_{t}}\\right)}{\\sum_{n=-(K-1)}^{K-1} \\exp \\left(-\\frac{4 n^{2}}{(K-1)^{2} \\beta_{t}}\\right)} & \\text { if } \\quad i \\neq j \\\\ 1-\\sum_{l=0, l \\neq i}^{K-1}\\left[\\boldsymbol{Q}_{t}\\right]_{i l} & \\text { if } \\quad i=j\\end{cases}\n$$\n\nNormalization is ensured by assigning the diagonal values to one minus the sum of each row (not including the diagonal entry). Note that due to the normalization of the off-diagonal values over the range $\\{-K+1, \\ldots, K-1\\}$ the sum of each row excluding the diagonal entry is always smaller than 1. The result yields an irreducible doubly stochastic matrix and a forward process with a uniform stationary distribution. Similar to the continuous Gaussian diffusion model, the parameters $\\beta_{t}$ influence the variance of the forward process distributions. ## A.2.4 Structured diffusion in text: using word-embedding distance to introduce locality\n\nFor text, we construct a $k$-nearest neighbor adjacency matrix\n\n$$\n[\\mathbf{G}]_{i j}=1 \\text { if } w_{i} \\text { is a k-nearest neighbor of } w_{j} \\text { else } 0\n$$\n\nconstructed from a pre-trained embedding space over the vocabulary. Then we consider a symmetrized adjacency matrix of the form $\\mathbf{A}=\\left(\\mathbf{G}+\\mathbf{G}^{T}\\right) /(2 k)$ where $k$ is the number of nearest neighbors of each node, and finally construct a doubly stochastic rate matrix with\n\n$$\n[\\boldsymbol{R}]_{i j}= \\begin{cases}-\\sum_{l \\neq i} A_{i l} & \\text { if } \\quad i=j \\\\ A_{i j} & \\text { otherwise }\\end{cases}\n$$\n\nOur final transition matrix is constructed as a matrix exponential of this rate matrix:\n\n$$\n\\mathbf{Q}_{t}=\\exp \\left(\\alpha_{t} \\mathbf{R}\\right)=\\sum_{n=0}^{\\infty} \\frac{\\alpha_{t}^{n}}{n!} \\boldsymbol{R}^{n}\n$$\n\nSince $\\boldsymbol{R}$ is symmetric and sums to zero along each row, $\\mathbf{Q}_{t}$ is doubly stochastic, which ensures we have a uniform stationary distribution (as long as $G$ is connected). Increasing $\\alpha_{t}$ over time allows us to add more noise for larger values of $t$. Assuming word embeddings are some metric for syntactic or semantic similarity, this results in a corruption process that gradually moves away from the ground-truth sentence, swapping words with nearest-neighbors in embedding space. For character level modeling, this is a graph over characters, which more often transitions for instance from vowels to other vowels than from vowels to consonants. For words, this could transition between semantically similar words. For example, in Figure 4, we construct the forward process to diffuse from \"dog\" to \"cat\" or \"cow\", which are nearby in embedding space, but not to more distant words. We can either bootstrap this process by updating the transition matrix $\\boldsymbol{Q}$ dynamically during training, or use pretrained embeddings; we use pretrained embeddings for all of our experiments. ## A.2.5 Band-diagonal transitions\n\nA class of transition matrices that introduce local, ordinal inductive biases for structured data are banddiagonal transition matrices which only allow the corruption process to transition locally between states and biases the reverse process towards local iterative refinement. For example, in images, this can be used to allow transitions only between adjacent pixel values. $$\n\\left[\\boldsymbol{Q}_{t}\\right]_{i j}= \\begin{cases}\\frac{1}{K} \\beta_{t} & \\text { if } \\quad 0<|i-j| \\leq v \\\\ 1-\\sum_{l \\neq i} Q_{i l} & \\text { if } \\quad i=j\\end{cases}\n$$\n\nwhere $v$ is the number of nonzero off-diagonal elements of $\\boldsymbol{Q}$ above (and below) the main diagonal. Note that this is a doubly stochastic matrix, so the stationary distribution is uniform. We do not use these in our experiments. ![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-16.jpg?height=446&width=1437&top_left_y=265&top_left_x=401)\n\nFigure 4: Two examples of noise schedules transforming text data. The top is a BERT-like absorbing + uniform diffusion which replaces tokens with [MASK] tokens (and occasionally with any other token, in black). The bottom is nearest-neighbor diffusion in embedding space. At left represents a possible column in the transition matrix. ![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-16.jpg?height=508&width=743&top_left_y=987&top_left_x=691)\n\nFigure 5: The character-level symmetrized 5-NN graph. ## A.2.6 Combinations of absorbing diffusion and other diffusion\n\nA few ablations in Appendix B.2.1 consider transition matrices that combine absorbing-state or nearest-neighbor and uniform D3PM models. For instance, an absorbing-uniform transition matrix can be constructed $\\boldsymbol{Q}=\\alpha \\mathbb{1} e_{m}^{T}+\\beta \\mathbb{1} \\mathbb{1}^{T} / K+(1-\\alpha-\\beta) I$, where $e_{m}$ is a one-hot vector on the [MASK] token. ## A. 3 Generative Masked Language Models are Diffusion Models\n\nGenerative Masked Language Models [14, 54] are generative models that generate text from a sequence of [MASK] tokens. These are usually trained by sampling a sequence $x_{0}$, masking tokens according to some schedule, and learning to predict the masked tokens given context. The actual masking procedure can either be done independently, i.e. by masking each token with probability $p=k / T$, like Devlin et al. [11], or by sampling exactly $k$ tokens. The usual objective is 5\n\n$$\n\\min -\\mathbb{E}_{q\\left(\\boldsymbol{x}_{0}\\right)}\\left[\\mathbb{E}_{k \\in\\left[1 \\ldots\\left|\\boldsymbol{x}_{0}\\right|\\right]}\\left[\\frac{1}{k} \\mathbb{E}_{\\boldsymbol{x}_{k} \\text { with } k \\text { masked tokens }}\\left[\\sum_{i \\text { with }\\left[\\boldsymbol{x}_{k}\\right]_{i}=m} \\log p_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{k}\\right)\\right]\\right]\\right]\n$$\n\nwhere we first sample a datapoint $\\boldsymbol{x}_{0}$, sample a number of tokens to mask $k$ (either uniformly or according to some schedule), then mask that many tokens at random and compute a cross entropy\n\n[^3]loss over those masked tokens. We claim that this training objective is a (reweighted) absorbing-state D3PM objective with a particular noise schedule and the $\\boldsymbol{x}_{0}$-parameterization from 3.3 (and indeed, that any absorbing-state D3PM model with [MASK] as the absorbing state will be a reweighted version of this loss with different weights assigned to different numbers of masked tokens $k$ ). Consider a D3PM with a schedule that masks tokens with probability $\\beta_{t}$. The reverse process predicts $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}_{0}} \\mid \\boldsymbol{x}_{t}\\right)$, then uses the forward process to compute $p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right) \\propto \\sum q\\left(\\boldsymbol{x}_{t-1}, \\boldsymbol{x}_{t} \\mid \\widetilde{\\boldsymbol{x}_{0}}\\right) \\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$. In the particular case of absorbing-state diffusion, for each masked token $\\left[\\boldsymbol{x}_{t}\\right]_{i}=m$ in $\\boldsymbol{x}_{t}$, we thus have\n\n$$\np_{\\theta}\\left(\\left[\\boldsymbol{x}_{t-1}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right) \\propto \\begin{cases}{\\left[\\beta_{t} \\prod_{s<t}\\left(1-\\beta_{s}\\right)\\right] \\widetilde{p}_{\\theta}\\left(\\left[\\widetilde{\\boldsymbol{x}}_{0}\\right]_{i}=\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right)} & \\text { for }\\left[\\boldsymbol{x}_{t-1}\\right]_{i}=\\left[\\boldsymbol{x}_{0}\\right]_{i} \\neq m \\\\ 1-\\prod_{s \\leq t}\\left(1-\\beta_{s}\\right) & \\text { for }\\left[\\boldsymbol{x}_{t-1}\\right]_{i}=m\\end{cases}\n$$\n\nWe note that for each unmasked token $\\left[\\boldsymbol{x}_{t}\\right]_{i}=\\left[\\boldsymbol{x}_{0}\\right]_{i}$, the KL-divergence is zero since unmasked tokens cannot make any other type of transition other than becoming masked. Also, the term in the KL divergence due to the probability of mask transitions is a constant, since mask transitions are independent of the model parameters $\\theta$. Our $L_{t}$ term is then\n\n$$\nD_{\\mathrm{KL}}\\left[q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)|| p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)\\right]=-\\left[\\beta_{t} \\prod_{s<t}\\left(1-\\beta_{s}\\right)\\right] \\sum_{i \\text { with }\\left[\\boldsymbol{x}_{t}\\right]_{i}=m} \\log \\widetilde{p}_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right)+C\n$$\n\nwhere $C$ is independent of $\\theta$ and the sum is taken over the masked tokens in $\\boldsymbol{x}_{t}$. For example, if we use $\\beta(t)=1 /(T-t+1)$ from Sohl-Dickstein et al. [43], $\\beta_{t} \\prod_{i=0}^{t-1}\\left(1-\\beta_{i}\\right)=1 / T$ and $1-\\prod_{i=0}^{t}\\left(1-\\beta_{i}\\right)=(t-1) / T$, so $q\\left(\\left[\\boldsymbol{x}_{t-1}\\right]_{i}=\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid\\left[\\boldsymbol{x}_{t}\\right]_{i}=m, \\boldsymbol{x}_{0}\\right)=1 / t$ for non-mask tokens and we can simplify our $L_{t}$ objective to\n\n$$\nD_{\\mathrm{KL}}\\left[q\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}, \\boldsymbol{x}_{0}\\right)|| p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)\\right]=-\\left[\\frac{1}{t} \\sum_{i \\text { with }\\left[\\boldsymbol{x}_{t}\\right]_{i}=m} \\log \\widetilde{p}_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right)\\right]+C\n$$\n\nwhere $\\boldsymbol{x}_{t}$ masks tokens independently and uniformly with probability $t / T$. The $L_{T}$ term in our ELBO is 0 for the $1 /(T-t+1)$ schedule, so the full objective (up to a constant) reduces to\n\n$$\n\\begin{array}{r}\n\\mathbb{E}_{q\\left(\\boldsymbol{x}_{0}\\right)}\\left[-\\sum_{t=2}^{T} \\frac{1}{t} \\mathbb{E}_{q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)}\\left[\\sum_{i \\text { with }\\left[\\boldsymbol{x}_{t}\\right]_{i}=m} \\log p_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right)\\right]\\right] \\\\\n\\left.-\\mathbb{E}_{q\\left(\\boldsymbol{x}_{1} \\mid \\boldsymbol{x}_{0}\\right)}\\left[\\sum_{i \\text { with }\\left[\\boldsymbol{x}_{1}\\right]_{i}=m} \\log p_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{1}\\right)\\right]\\right] \\\\\n\\left.=-\\mathbb{E}_{q\\left(\\boldsymbol{x}_{0}\\right)}\\left[\\sum_{t=1}^{T} \\frac{1}{t} \\mathbb{E}_{q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)}\\left[\\sum_{i \\text { with }\\left[\\boldsymbol{x}_{t}\\right]_{i}=m} \\log p_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{t}\\right)\\right]\\right]\\right]\n\\end{array}\n$$\n\nNote that while this looks very similar to Equation 11 (with each term reweighted by $1 / t$, the expected number of masked tokens) it is not exactly identical since masking is computed independently pertoken position (instead of choosing exactly $k$ tokens to mask). This is an entirely practical way to do masking (and indeed some methods implement it this way). Furthermore, since the masking probability varies linearly as $1-\\Pi\\left(1-\\beta_{t}\\right)=t / T$, this is very close to uniformly sampling the number of masked tokens $k$, but $k$ is actually drawn from a mixture of binomial distributions, i.e. $$\n\\begin{gathered}\n\\left.=-\\mathbb{E}_{q\\left(\\boldsymbol{x}_{0}\\right)}\\left[\\mathbb{E}_{k \\in[1 \\ldots|X|]}\\left[\\mathbb{E}_{\\boldsymbol{x}_{k} \\text { with } k \\text { masked tokens }}\\left[\\alpha(k) \\sum_{i \\text { with }\\left[\\boldsymbol{x}_{k}\\right]_{i}=m} \\log p_{\\theta}\\left(\\left[\\boldsymbol{x}_{0}\\right]_{i} \\mid \\boldsymbol{x}_{k}\\right)\\right]\\right]\\right]\\right] \\\\\n\\alpha(k)=q\\left(\\boldsymbol{x}_{t} \\text { has } k \\text { masked tokens } \\mid \\boldsymbol{x}_{0} \\text { has } n \\text { tokens }\\right)=\\frac{1}{T} \\sum_{t=1}^{T}\\binom{n}{k}\\left(\\frac{t}{T}\\right)^{n-1}\\left(1-\\frac{t}{T}\\right)^{n-k}\n\\end{gathered}\n$$\n\nwhich is very close to uniform weight over terms, but slightly downweights terms near 0 and $T$. By upweighting terms near the boundary, you could in theory make this exactly uniform and thus exactly recover Equation 11 For instance, for 50 categories, absorbing-state diffusion produces the weighting shown in Figure 6\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-18.jpg?height=416&width=676&top_left_y=448&top_left_x=714)\n\nFigure 6: Plot of the probabilities of having $k$ tokens masked out of a length-50 sequence under a D3PM absorbing schedule with $T=50$ steps, which is very similar to the uniform weighting used by Ghazvininejad et al.",
    "d3pms-18": "[14]. ## A. 4 Scaling to a large number of categories\n\nWhen the number of categories $K$ is large, it can quickly become impractical to store all of the transition matrices $\\boldsymbol{Q}_{t}$ in memory, as the memory usage grows like $O\\left(K^{2} T\\right)$. And even if there is an algorithm to compute individual step matrices $\\boldsymbol{Q}_{t}$ on demand, it may or may not be possible to do the same for the cumulative products $\\overline{\\boldsymbol{Q}}_{t}$. We propose two approaches to scaling D3PMs to large numbers of categories that ensure cumulative products are efficient: using low-rank corruption and using matrix exponentials. ## A.4.1 Low-rank corruption\n\nIn the low-rank case, we consider structuring our transition matrices as\n\n$$\n\\boldsymbol{Q}_{t}=\\beta_{t} \\boldsymbol{A}_{t}+\\left(1-\\beta_{t}\\right) \\boldsymbol{I}\n$$\n\nwhere each $\\boldsymbol{A}_{t}$ is a diagonalizable low-rank matrix with the same nonzero eigenvectors. In particular, recall that both absorbing-state diffusion and uniform diffusion have this form: for uniform diffusion, $\\boldsymbol{A}_{t}^{\\text {uniform }}=\\mathbb{1} \\mathbb{1}^{T} / K$, and for absorbing-state diffusion $\\boldsymbol{A}_{t}^{\\mathrm{abs}}=\\mathbb{1} \\boldsymbol{e}_{m}^{T}$ where $\\boldsymbol{e}_{m}$ is a one-hot vector on the absorbing state. Since products of $\\boldsymbol{A}_{t}$ 's are also low rank, the cumulative products $\\overline{\\boldsymbol{Q}}_{t}$ can be efficiently precomputed and stored using a much smaller amount of memory $O\\left(r^{2} T\\right)$ where $r=\\operatorname{rank}\\left(\\boldsymbol{A}_{t}\\right)$. As an illustrative example, we describe in more detail how to efficiently represent uniform and absorbing-state transition matrices using the low-rank structure. To compute products of uniform transition matrices (i.e. $\\left.\\prod_{i}\\left(1-\\beta_{i}\\right) I+\\beta_{i} \\mathbb{1} \\mathbb{1}^{T} / K\\right)$, we can take advantage of the useful fact that products of matrices of the form $\\alpha I+\\beta \\mathbb{1} \\mathbb{1}^{T}$ also have this same form: $I^{2}=I$ and $\\left(\\beta \\mathbb{1} \\mathbb{1}^{T}\\right)^{2}=\\beta^{2} K \\mathbb{1} \\mathbb{1}^{T}$. We can thus treat this as a formal polynomial in one variable $X=\\left(\\mathbb{1} \\mathbb{1}^{T} / K\\right)$. Then products can be computed as $\\prod_{i}\\left[\\left(1-\\beta_{i}\\right)+\\beta_{i} X\\right]$ over the quotient ring $\\mathbb{R}[X] /\\left(X^{2}-X\\right)$, since $X^{2}=X$. Functionally, this means you can instantiate a polynomial $\\left(1-\\beta_{i}\\right)+\\beta_{i} X$ and repeatedly perform ordinary polynomial multiplication over $\\mathbb{R}[X]$ for the $t<T$ timesteps. After each multiplication, the higher-order terms are reduced by $X^{2}=X$, leaving a polynomial of degree 1 where the $X$ term has coefficient given by the sum of all higher-order terms. This can be computed with the convenient np.polynomial module. Similarly, the transition matrices for D3PM absorbing can be computed in closed form. Fundamentally, in each step, we transition to a [MASK] token with probability $\\beta_{t}$ and stay the same with probability $1-\\beta_{t}$. Since the [MASK] state is absorbing, after $t$ steps, the only operative quantity\nis the probability of not yet having transitioned to the [MASK] state, given by $\\widetilde{\\alpha_{t}}=\\prod_{i=0}^{t}\\left(1-\\beta_{i}\\right)$. Hence for D3PM absorbing, $\\overline{\\boldsymbol{Q}}=\\tilde{\\alpha_{t}} I+\\left(1-\\widetilde{\\alpha_{t}}\\right) \\mathbb{1} e_{m}^{T}$ where $e_{m}$ is a one-hot vector on the [MASK] token. ## A.4.2 Matrix exponentials\n\nIn the matrix exponential case, we specify our transition matrices as\n\n$$\n\\boldsymbol{Q}_{t}=\\exp \\left(\\alpha_{t} \\boldsymbol{R}\\right)=\\sum_{n=0}^{\\infty} \\frac{\\alpha_{t}^{n}}{n!} \\boldsymbol{R}^{n}, \\quad \\quad \\overline{\\boldsymbol{Q}}_{t}=\\exp \\left(\\left(\\sum_{s \\leq t} \\alpha_{s}\\right) \\boldsymbol{R}\\right)\n$$\n\nwhere $\\boldsymbol{R}$ is a transition rate matrix and exp denotes the matrix exponential operation; the similar form for $\\boldsymbol{Q}_{t}$ and $\\overline{\\boldsymbol{Q}}_{t}$ is a consequence of the \"exponential of sums\" property for commuting matrices. For efficiency, we further assume that each of the $\\alpha_{t}$ is an integer multiple $n_{t} \\alpha_{\\star}$ of some common factor $\\alpha_{\\star}$, and precompute matrices $\\exp \\left(2^{k} \\alpha_{\\star} \\boldsymbol{R}\\right)$ for $0 \\leq k \\leq \\log _{2}\\left(\\bar{\\alpha}_{T} / \\alpha_{\\star}\\right)$, where $\\bar{\\alpha}_{T}=\\sum_{t<T} \\alpha_{t}$, taking space $O\\left(K^{2} \\log \\left(\\bar{\\alpha}_{T} / \\alpha_{\\star}\\right)\\right)$. Then, to compute matrix-vector products with $\\boldsymbol{Q}_{t}$ or $\\overline{\\boldsymbol{Q}}_{t}$, we can iteratively take products with a subset of these precomputed matrices based on the digits of a binary expansion of the desired multiple $n_{t}$ in time $O\\left(K^{2} \\log \\left(\\bar{\\alpha}_{T} / \\alpha_{\\star}\\right)\\right){ }^{6}$\nAs long as $\\boldsymbol{R}$ has non-positive off-diagonal entries and sums to zero along each row, the matrix exponential produces a valid transition matrix $\\boldsymbol{Q}_{t}$; convergence to a specific stationary distribution can also be ensured by controlling the eigenvectors. In particular, if every column also sums to zero, the resulting $Q_{t}$ will be doubly stochastic and will thus have a uniform stationary distribution.",
    "d3pms-19": "We note that this parameterization can be viewed as a discretization of a continuous-time discretespace Markov processes; we describe this connection in more detail in the following section. ## A. 5 Continuous-time Markov process transition rates\n\nFollowing Feller [13], we define a continuous-time discrete-space Markov process as a collection of random variables $\\left\\{\\boldsymbol{x}_{t}\\right\\}_{t>0}$ parameterized by $t \\in \\mathbb{R}^{+}$and characterized by a Markov property ( $\\boldsymbol{x}_{t} \\perp \\boldsymbol{x}_{s} \\mid \\boldsymbol{x}_{\\tau}$ if $t<\\tau<s$ ), a transition probability matrix $\\Pi(t) \\in \\mathbb{R}^{N \\times N}$ where $N$ is the cardinality of $\\boldsymbol{x}_{t}$, and a set of transition rates $\\gamma_{i}(t)$. A conceptual way to understand these processes is to imagine a continuous Poisson process occurring in each state $i$ at rate $\\gamma_{i}(t)$ determining when a transition between states occurs. When a transition occurs (at time $t$ ), a Markov transition occurs between states $i$ and $j$ with probability $\\Pi_{i j}(t)$. Many common stochastic processes fall into this family, including Poisson processes. Like in the case of stochastic differential equations (Song et al. [47]), we can derive a set of Kolomogorov equations (or Fokker-Planck equations in the continuous-state space case) that determine the marginal probability $\\partial q_{i j}(\\tau, t)$ of ending up in state $j$ at time $t$ having started in state $i$ at time $s$. The general form of the Kolmogorov forward equations is\n\n$$\n\\frac{\\partial q_{i j}(\\tau, t)}{\\partial t}=-\\gamma_{k}(t) q_{i}(\\tau, t)+\\sum_{j} \\gamma_{j}(t) \\Pi_{k j}(t) q_{i k}(t)\n$$\n\nNow we can state and prove a theorem connecting continuous time Markov processes and matrix exponentials. Theorem 1. Let $\\left\\{\\boldsymbol{x}_{t}\\right\\}_{t \\geq 0}$ be a discrete-space, continuous-time Markov process with (possibly timedependent) transition probability matrix $\\Pi(t)$ and transition rates $\\gamma_{i}(t)$. Then for a particle with an initial distribution $q\\left(\\boldsymbol{x}_{s}\\right)$ at time $s$, the probability of ending in state $j$ at time $t$ is\n\n$$\nq\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{s}\\right)=\\exp \\left(\\int_{s}^{t} \\operatorname{diag}(\\gamma(\\tau))(\\Pi(\\tau)-I) d \\tau\\right) q\\left(\\boldsymbol{x}_{s}\\right)\n$$\n\nwhere $\\exp$ is the matrix exponential and we view $q\\left(\\boldsymbol{x}_{t}\\right)$ and $\\gamma(t)$ as vectors in $\\mathbb{R}^{N}$. [^4]Proof (sketch). From the Kolmogorov equations for continuous-time Markov processes, we have the ODE\n\n$$\n\\frac{\\partial q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{s}\\right)}{\\partial t}=\\operatorname{diag}(\\gamma(t))(\\Pi(t)-I) q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{s}\\right)\n$$\n\nwhere $\\Pi(t)$ is the transition probability matrix. Solving this as a first-order ODE using integrating factors yields the desired equation. We note that, if $\\Pi(t)=\\Pi$ is independent of $t$ and $\\gamma(s)=\\gamma(s) \\mathbf{r}$ for some scalar function $\\gamma: \\mathbb{R} \\rightarrow \\mathbb{R}$ and vector $\\mathbf{r} \\in \\mathbb{R}^{N}$, this simplifies to exactly our matrix exponential parameterization with\n\n$$\n\\mathbf{R}=\\operatorname{diag}(\\mathbf{r})(\\Pi-I)\n$$\n\nwhere we set\n\n$$\n\\alpha_{t}=\\int_{t-1}^{t} \\gamma(t) d t\n$$\n\nIn other words, the $\\alpha_{t}$ parameters in Equation 16 correspond to a discretization of the cumulative transition rate of a continuous-time process. ## A. 6 Continuous-limit of schedule from Sohl-Dickstein et al. [43]\n\nConsider for example the schedule described by Sohl-Dickstein et al. [43] for Bernoulli variables $\\beta_{t}=1 /(T-t+1)$, i.e. the Bernoulli variable would stay the same with probability $1-\\beta_{t}=$ $(T-t) /(T-t+1)$ and transition with probability $\\beta_{t}$. In this section, we show that a D3PM absorbing or D3PM uniform process with this schedule is exactly a discretization of a continuous-time jump process of the form described in Theorem 1 . We start by observing that both absorbing-state and uniform D3PM transition matrices can be expressed equivalently as matrix exponentials. In the uniform case, we have\n\n$$\nQ_{t}=\\exp \\left(\\alpha_{t} \\mathbf{R}_{\\text {unif }}\\right)=\\exp \\left(\\alpha_{t}\\left(\\frac{1}{K} \\mathbb{1} \\mathbb{1}^{T}-I\\right)\\right)=\\exp \\left(-\\alpha_{t}\\right) I+\\left(1-\\exp \\left(-\\alpha_{t}\\right)\\right) \\frac{1}{K} \\mathbb{1}^{T}\n$$\n\nand in the absorbing case we have\n\n$$\nQ_{t}=\\exp \\left(\\alpha_{t} \\mathbf{R}_{\\mathrm{abs}}\\right)=\\exp \\left(\\alpha_{t}\\left(\\mathbb{1} \\mathbf{e}_{m}^{T}-I\\right)\\right)=\\exp \\left(-\\alpha_{t}\\right) I+\\left(1-\\exp \\left(-\\alpha_{t}\\right)\\right) \\mathbb{1} \\mathbf{e}_{m}^{T}\n$$\n\nIn either case, by setting this equal to the explicit forms in Appendix A.2, we obtain the relationship\n\n$$\n\\beta_{t}=1-\\exp \\left(-\\alpha_{t}\\right)\n$$\n\nwhere $\\beta_{t}$ is defined as in Appendix A.2, and $\\alpha_{t}$ is the matrix exponential coefficient as used in the previous section. Using the correspondence discussed in the previous section, we also know\n\n$$\n\\alpha_{t}=\\int_{t-1}^{t} \\gamma(s) d s\n$$\n\nfor the continuous-time transition rate function $\\gamma(s)$. Defining $\\beta_{t}=1 /(T-t+1)$, we have\n\n$$\n1-\\beta_{t}=1-\\frac{1}{(T-t+1)}=\\frac{T-t}{T-t+1}=\\exp \\left(-\\int_{t-1}^{t} \\gamma(\\tau) d \\tau\\right)\n$$\n\nDenoting the anti-derivative $\\int \\gamma(t)=F(t)$, we have $\\log (T-t)-\\log (T-t+1)=-F(t)+F(t-1)$, so we can deduce $F(t)=-\\log (T-t)$ (up to a constant offset). Taking a derivative then yields $\\gamma(t)=1 /(T-t)$, which has the same form as the original schedule but is now interpreted as a continuously-varying rate function instead of a probability (and is also shifted by 1 unit in time). Intuitively, we can interpret this as a schedule which assigns uniform probability of a transition occurring over the remaining time, but instead of dividing it between $T-t+1$ discrete steps, we divide it across a continuous interval of size $T-t$. We note that using larger values of $T$ is equivalent to performing a finer discretization on a scaled version of this continuous-time process. ## A. 7 Mutual-information-based noise schedule\n\nAn important part of designing the forward process for a diffusion process is to specify the noise schedule: how much noise is added at each step $t$ such that after $T$ steps the process has (approximately) reached the stationary distribution of the transition matrix. Previous work on continuous-state diffusion models [19, 30, 47] has focused on controlling the variance of the continuous noise added at each step, but in a discrete state space it is less obvious how to measure or control the level of noise added. For uniform or absorbing-state transition matrices, once a single transition occurs, all information about the original data point is lost. In this case, the schedule introduced by Sohl-Dickstein et al. [43] is a natural choice, since it is designed to make this first transition for $t / T$ of the elements by time $t$. However, when the transition matrix imposes additional structure on the transitions, such as for our token-embedding based transition matrix, it is not sufficient to perturb $t / T$ of the elements by time $t$, since the value at time $t$ may be highly correlated with the value at time $t-1$ even after a transition occurs; we thus explore using mutual information to quantify how much noise has been added. Here we describe the mutual-information-based schedules in more detail. We focus on transition matrices that are parameterized as matrix exponentials, i.e. they have the form\n\n$$\n\\boldsymbol{Q}_{t}=\\exp \\left(\\alpha_{t} \\boldsymbol{R}\\right)=\\sum_{n=0}^{\\infty} \\frac{\\alpha_{t}^{n}}{n!} \\boldsymbol{R}^{n}, \\quad \\overline{\\boldsymbol{Q}}_{t}=\\exp \\left(\\left(\\sum_{s \\leq t} \\alpha_{s}\\right) \\boldsymbol{R}\\right)=\\exp \\left(\\bar{\\alpha}_{t} \\boldsymbol{R}\\right)\n$$\n\nInspired by the schedule introduced by Sohl-Dickstein et al. [43], we consider setting our $\\alpha_{t}$ such that $\\frac{t}{T}$ of the information about $p\\left(\\boldsymbol{x}_{0}\\right)$ has been lost by time $t$. Our goal is to find exponents such that\n\n$$\n\\frac{t}{T}=1-\\frac{I\\left(\\boldsymbol{x}_{t} ; \\boldsymbol{x}_{0}\\right)}{H\\left(\\boldsymbol{x}_{0}\\right)}=\\frac{H\\left(\\boldsymbol{x}_{0}, \\boldsymbol{x}_{t}\\right)-H\\left(\\boldsymbol{x}_{t}\\right)}{H\\left(\\boldsymbol{x}_{0}\\right)}=\\frac{\\sum_{\\boldsymbol{x}_{0}, \\boldsymbol{x}_{t}} p\\left(\\boldsymbol{x}_{0}\\right) q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right) \\log \\frac{q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)}{\\sum_{\\boldsymbol{x}_{0}^{\\prime}} p\\left(\\boldsymbol{x}_{0}^{\\prime}\\right) q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}^{\\prime}\\right)}}{\\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)}\n$$\n\nwhere $H$ denotes the entropy of a random variable, and $p\\left(\\boldsymbol{x}_{0}\\right)$ denotes the distribution of a randomly chosen token in the data. In practice, we estimate $p\\left(\\boldsymbol{x}_{0}\\right)$ by computing empirical frequencies over the training set, and compute the value of the right-hand side of 17 for transition matrices $\\exp (\\bar{\\alpha} \\boldsymbol{R})$ with 256 geometrically-spaced exponents $\\bar{\\alpha}$ distributed in a large range (linear on a $\\log$ scale between $1 \\mathrm{e}-4$ and 1e5). We then interpolate using a monotonic cubic spline to find the particular exponents $\\bar{\\alpha}_{t}$ that ensure the above property holds approximately, and round them so that they are all multiples of a common factor $\\alpha_{\\star}$ to ensure efficiency (as described in Appendix A.4. Finally, we set $\\boldsymbol{Q}_{t}=\\exp \\left(\\left(\\bar{\\alpha}_{t}-\\bar{\\alpha}_{t-1}\\right) \\boldsymbol{R}\\right)$. It turns out that, for the specific case of absorbing-state diffusion with a [MASK] token, the mutual information schedule reduces to exactly the $(T-t+1)^{-1}$ schedule proposed by Sohl-Dickstein et al. [43]. To see this, let $m_{t}$ be the probability that a given value from time 0 has been replaced with [MASK] at time $t$. We note then that\n\n$$\n\\begin{aligned}\nH\\left(\\boldsymbol{x}_{t}\\right) & =\\sum_{\\boldsymbol{x}_{0}}\\left(1-m_{t}\\right) p\\left(\\boldsymbol{x}_{0}\\right) \\log \\left(\\left(1-m_{t}\\right) p\\left(\\boldsymbol{x}_{0}\\right)\\right)+m_{t} \\log m_{t} \\\\\n& =\\left(1-m_{t}\\right) \\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)+\\left(1-m_{t}\\right) \\log \\left(1-m_{t}\\right)+m_{t} \\log m_{t}\n\\end{aligned}\n$$\n\nwhere we have used the fact that a mask token has zero probability under the data distribution. We also have the joint entropy\n\n$$\nH\\left(\\boldsymbol{x}_{0}, \\boldsymbol{x}_{t}\\right)=\\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)+m_{t} \\log m_{t}+\\left(1-m_{t}\\right) \\log \\left(1-m_{t}\\right)\n$$\n\nWe can then calculate\n\n$$\n\\begin{aligned}\n1-\\frac{I\\left(\\boldsymbol{x}_{t} ; \\boldsymbol{x}_{0}\\right)}{H\\left(\\boldsymbol{x}_{0}\\right)} & =\\frac{H\\left(\\boldsymbol{x}_{0}, \\boldsymbol{x}_{t}\\right)-H\\left(\\boldsymbol{x}_{t}\\right)}{H\\left(\\boldsymbol{x}_{0}\\right)} \\\\\n& =\\frac{\\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)+m_{t} \\log m_{t}+\\left(1-m_{t}\\right) \\log \\left(1-m_{t}\\right)}{\\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)} \\\\\n& -\\frac{(1-m) \\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)+\\left(1-m_{t}\\right) \\log \\left(1-m_{t}\\right)+m_{t} \\log m_{t}}{\\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)} \\\\\n& =\\frac{m_{t} \\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)}{\\sum_{\\boldsymbol{x}_{0}} p\\left(\\boldsymbol{x}_{0}\\right) \\log p\\left(\\boldsymbol{x}_{0}\\right)}=m_{t}\n\\end{aligned}\n$$\n\nIt follows that the mutual information schedule for masks is one that ensures $m_{t}=q\\left(\\boldsymbol{x}_{t}=\\right.$ $\\left.[\\mathrm{MASK}] \\mid \\boldsymbol{x}_{0}\\right)=\\frac{t}{T}$. But this is exactly the $(T-t+1)^{-1}$ schedule. To see this, let $\\beta_{t}$ be the probability that a non-mask token becomes a mask token at time $t$, and note that $m_{t}=1-\\prod_{s=1}^{t}\\left(1-\\beta_{s}\\right)$. Thus,\n\n$$\n\\beta_{t}=1-\\frac{1-m_{t}}{1-m_{t-1}}=1-\\frac{1-\\frac{t}{T}}{1-\\frac{t-1}{T}}=1-\\frac{T-t}{T-t+1}=\\frac{(T-t+1)-(T-t)}{T-t+1}=\\frac{1}{T-t+1}\n$$\n\nas desired. Interestingly, although the $(T-t+1)^{-1}$ schedule was designed for the case of a uniform transition matrix (an used for this purpose by Sohl-Dickstein et al. [43] and Hoogeboom et al. [20]), the $(T-t+1)^{-1}$ schedule is NOT in general identical to the mutual information schedule in that setting.",
    "d3pms-20": "We leave further investigation of these schedules to future work. ## A. 8 Parameterizing the reverse process with a discretized truncated logistic distribution\n\nFor ordinal data such as images, we can instill an ordinal inductive bias in the logits of $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$ by modeling them using a discretization of a distribution on real-valued numbers. In this paper we choose the underlying continuous distribution to be a truncated logistic distribution. The code below shows how we compute the logits for $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)$, given a location/mean and a log scale that were predicted by a neural network $\\mathrm{nn}_{\\theta}$. ```\nimport jax.numpy as jnp\ndef get_logits_from_logistic_pars(loc, log_scale, num_classes):\n    \"\"\"Computes logits for an underlying logistic distribution.\"\"\"\n    # The loc and log_scale are assumed to be modeled for data re-scaled\n    # such that the values {0, ...,K-1} map to the interval [-1, 1]. # Shape of loc and log_scale: (batch_size, height, width, channels)\n    loc = jnp.expand_dims(loc, axis=-1)\n    log_scale = jnp.expand_dims(log_scale, axis=-1)\n    # Shift log_scale such that if it's zero the output distribution\n    # has a reasonable variance. inv_scale = jnp.exp(- (log_scale - 2.))\n    bin_width = 2. / (num_classes - 1.)\n    bin_centers = jnp.linspace(start=-1., stop=1., num=num_classes,\n        endpoint=True)\n    bin_centers = jnp.expand_dims(bin_centers,\n                axis=tuple(range(0, loc.ndim-1)))\n    bin_centers = bin_centers - loc\n    # Note that the edge bins corresponding to the values 0 and K-1\n    # don't get assigned all of the mass in the tails to +/- infinity. # So the logits correspond to unnormalized log probabilites of a\n    # discretized truncated logistic distribution. log_cdf_min = jax.nn.log_sigmoid(\n```\n\n```\n        inv_scale * (bin_centers - 0.5 * bin_width))\n    log_cdf_plus = jax.nn.log_sigmoid(\n        inv_scale * (bin_centers + 0.5 * bin_width))\n    logits = log_minus_exp(log_cdf_plus, log_cdf_min)\n    return logits\ndef log_minus_exp(a, b, epsilon=1.e-6):\n    \"\"\"Computes the log(exp(a) - exp(b)) (b<a) in a numerically stable way.\"\"\"\n    return a + jnp.log1p(-jnp.exp(b - a) + epsilon)\n```\n\n\n## B Experiments\n\n## B. 1 Details and additional results for unconditional image generation experiments\n\nWe follow the same training and evaluation setup as used by Ho et al.",
    "d3pms-21": "[19]. For completeness we repeat these settings here. The model architecture is based on the backbone of a PixelCNN++ [41] architecture: a U-Net [36] based on a Wide ResNet [56] with weight normalization layers [39] replaced by group normalization layers [55]. The model has four feature map resolutions and two convolutional residual blocks for each resolution level. At the $16 \\times 16$ resolution level a self-attention block is placed between the convolutional blocks [8]. The time step $t$ is included in the neural net through a Transformer sinusoidal position embedding [52] in each residual block. Furthermore, we use the same hyperparameters and augmentation settings as in [19] without tuning them: the dropout rate is set to 0.1 ; we use a learning rate of $2 \\times 10^{-4}$ with the Adam optimizer [23] with standard settings, a batch size of 128; for evaluation we use an exponential moving average (EMA) for the model parameters with a decay factor of 0.9999 ; and finally, we use random horizontal flips as augmentation during training. We built our implementation of D3PMs for images based on a re-implementation of the DDPM model [19] in JAX [3] and Flax [17], with the same settings as those mentioned above. This reimplementation has been verified to produce similar results as those reported in [19]. For the D3PM models for which the logits of $\\widetilde{p}_{\\theta}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{x}_{t}\\right)=\\operatorname{Cat}\\left(\\widetilde{\\boldsymbol{x}}_{0} \\mid \\boldsymbol{p}_{\\theta}\\right)$ are modeled directly as the output of a neural network, we model them as logits $=\\mathrm{nn}_{\\theta}\\left(\\operatorname{normalize}\\left(\\boldsymbol{x}_{t}^{\\text {int }}\\right)\\right)+\\boldsymbol{x}_{t}^{\\text {one-hot }}$, where $\\boldsymbol{x}_{t}^{\\text {int }}$ and $\\boldsymbol{x}_{t}^{\\text {one }- \\text { hot }}$ denote integer and one-hot representations of $\\boldsymbol{x}_{t}$ respectively. The function normalize $\\left(\\boldsymbol{x}_{t}^{\\text {int }}\\right)$ maps the integer values $\\{0, \\ldots, K-1\\}$ to the interval $[-1,1]$. For the case where the logits are predicted from a truncated distretized logistic distribution, as discussed in Section A.8 the neural network outputs a $\\log$ scale $\\log s$ and the mean $\\boldsymbol{\\mu}$ of the underlying logistic distribution: $\\left[\\log s, \\boldsymbol{\\mu}^{\\prime}\\right]=$ $\\mathrm{nn}_{\\theta}\\left(\\right.$ normalize $\\left.\\left(\\boldsymbol{x}_{t}^{\\text {int }}\\right)\\right), \\boldsymbol{\\mu}=\\tanh \\left(\\right.$ normalize $\\left.\\left(\\boldsymbol{x}_{t}^{\\text {int }}\\right)+\\boldsymbol{\\mu}^{\\prime}\\right)$. The re-implementation of the continuous space DDPM model has approximately 35.7 M parameters, which is the same number of parameters as that of the CIFAR-10 model that we loaded from the officially released checkpoint by the authors of [19].7 Our D3PM models that output logits directly have around 36.6 M parameters, while the model that parameterizes the logits through a discretized truncated logistic distribution (D3PM Gauss + logistic) has around 35.7 M parameters. We trained all our models for 1.5 M steps on TPUv2 accelerators with a $4 \\times 4$ topology. Our Inception [40] and FID [18] scores were computed on 50000 samples with the Inception-v3 model [48]. We have included averages and standard deviations over models trained with 5 different seeds. Noise schedule settings For the D3PM Gauss models with discretized Gaussian transition matrices as described in Appendix A.2.3, we use the same linear schedule for the $\\beta_{t}$ 's as in [19]: $\\beta_{t}$ is linearly increased from $1 \\times 10^{-4}$ to 0.02 . We did not explore any other noise schedules for D3PM Gauss models. For the D3PM uniform model (see Section A.2.1) we experimented with a linear schedule for $\\beta_{t}$ (linearly increasing from 0.02 to 1 ) and the cosine schedule as suggested by Hoogeboom et al. [20]. Table 4 shows that the D3PM uniform model with a cosine schedule produces much better results\n\n[^5]![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-24.jpg?height=1701&width=1133&top_left_y=239&top_left_x=496)\n\nFigure 7: Samples from the D3PM uniform model trained with $L_{\\mathrm{vb}}$ (top), the D3PM absorb model trained with $L_{\\lambda=0.001}$ (middle), and the D3PM Gauss + logistic model trained with $L_{\\lambda=0.001}$ (bottom). These samples were not cherry picked. than the same model with a linear $\\beta_{t}$ schedule. For the D3PM absorbing model (see Section A.2.2 the absorbing state is the gray pixel, corresponding to the RGB values $(128,128,128)$. For these models we used a schedule that corresponds to increasing the probability of being in the absorbing state linearly over time: $\\beta_{t}=(T-t+1)^{-1}$. This schedule was also proposed in Sohl-Dickstein et al. [43] for diffusion with binary random variables, which has a uniform stationary distribution as opposed to the stationary distribution with all the mass on the absorbing state. Samples Additional samples from the D3PM uniform model trained on $L_{\\mathrm{vb}}$, the D3PM absorb model trained on $L_{\\lambda=0.001}$, and the D3PM Gauss + logistic model trained on $L_{\\lambda=0.001}$ can be bound in Figure 7 . Table 4: Quantitative results on the image dataset CIFAR-10 for D3PM uniform models trained with $L_{\\mathrm{vb}}$. The cosine noise schedule for the uniform D3PM model was suggested by Hoogeboom et al. [20]. The linear schedule corresponds to linearly increasing $\\beta_{t}$ from 0.02 to 1 . Results displayed for models trained with 3 (linear) and 4 (cosine) seeds. | Model | $\\beta_{t}$ schedule | IS $(\\uparrow)$ | FID $(\\downarrow)$ | NLL $(\\downarrow)$ |\n| :--- | :--- | :--- | :--- | :--- |\n| D3PM uniform | linear | $4.44 \\pm 0.05$ | $79.86 \\pm 1.64$ | $\\leq 4.99 \\pm 0.03$ |\n| D3PM uniform | cosine | $5.99 \\pm 0.14$ | $51.27 \\pm 2.15$ | $\\leq 5.08 \\pm 0.02$ |\n\n## B. 2 Details and additional results for unconditional text generation experiments\n\nOur experiments using text8 and LM1B were performed with a standard transformer encoder following the T5 [33] architecture with 12 layers and 70 million parameters ( 12 heads, mlp dim 3072, qkv dim 768). All models were trained for 1 million steps with batch size 512 on the TPUv 2 or TPUv 3 platform. Our code is implemented in JAX [3] and Flax [17]. For our experiments, we used learning rate $5 \\times 10^{-4}$ with a 10000 step learning rate warmup and inverse sqrt decay. For text8, we used a standard 90000000/5000000/500000 train-test-validation split with sequences of length 256 . For LM1B, we used the standard test-train split from TFDS with 30,301,028 examples in the training set and 306,688 in the test set. For text8, no preprocessing is performed, and training is performed on random crops of the entire concatenated, lower-cased training set. For LM1B, training is performed on sequences of length 128 sampled by packing sequences from the training corpus, including an EOS token. Perplexities are reported relative to the actual number of English-language words in the test set (including an EOS token predicted by the model). Our autoregressive transformer baseline was a standard transformer decoder with the same basic architecture (but including causal masking, as is standard for autoregressive models) with the same number of parameters. Table 5 contains additional comparisons of hybrid losses. We found that the hybrid loss $L_{\\lambda=0.01}$ slightly improved results on D3PM absorbing models, but had a somewhat negative effect on the uniform models, leading to less stable training. All models were trained on 1000 step diffusion processes, but we found very little improvement between 1000 and 256 steps when evaluating a trained model by skipping steps. For all figures, steps were skipped evenly (except possibly for the last step if the number of evaluation steps did not divide 1000). We found both the cosine and mutual information schedules worked well for uniform diffusion. We used the cosine variant introduced by Hoogeboom et al. [20], i.e. $$\nf(t)=\\cos \\left(\\frac{t / T+s}{1+s}+\\frac{\\pi}{2}\\right) \\quad \\beta(t)=1-\\frac{f(t+1)}{f(t)}\n$$\n\nFor absorbing and NN diffusion, we used an approximate mutual information schedule approximated with unigram probabilities of tokens in the vocabulary in the entire training corpus. Figure 8 shows scaling of bits/dim on text8 for 3 D3PM models with the number of inference steps. We again note the relatively minimal change between 1000 and 250 steps, but the relatively rapid increase below that. Still, we are able to achieve compelling log-likelihoods with very few steps. Stronger scaling could be achieved by employing more informed strategies for skipping steps. ## B.2.1 Additional tables and figures for text8\n\nTable 5: Additional results for text8, including comparison of auxiliary hybrid loss. | Model | Model steps | NLL (bits/char) ( $\\downarrow$ ) |\n| :--- | :--- | :--- |\n| D3PM uniform (ours) $\\left(L_{\\lambda=0.01}\\right)$ | 1000 | $\\leq 1.91$ |\n| D3PM uniform (ours) $\\left(L_{\\mathrm{vb}}\\right)$ | 1000 | $\\leq 1.61$ |\n| D3PM absorbing ( $L_{\\lambda=0.01}$ ) (ours) | 1000 | $\\leq 1.44$ |\n| D3PM absorbing ( $\\left.L_{\\mathrm{vb}}\\right)$ (ours) | 1000 | $\\leq 1.47$ |\n| D3PM absorbing + NN ( $L_{\\lambda=0.01}$ ) (ours) | 1000 | $\\leq 1.53$ |\n| D3PM uniform [20] (ours) | 50 | $\\leq 1.7$ |\n| D3PM NN ( $\\left.L_{\\mathrm{vb}}\\right)$ (ours) | 50 | $\\leq 1.62$ |\n| D3PM absorbing ( $L_{\\lambda=0.01}$ ) (ours) | 50 | $\\leq 1.53$ |\n\nTable 6: Additional results for text8 at a smaller model size (6 layers), comparing schedules. All at 1000 steps. | Model | Schedule | NLL (bits/char) $(\\downarrow)$ |\n| :--- | :--- | :--- |\n| D3PM uniform | $(1 /(T-t+1)$ schedule) | $\\leq 2.37$ |\n| D3PM uniform | cosine | $\\leq 1.73$ |\n| D3PM uniform | mutual info | $\\leq 1.74$ |\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-27.jpg?height=614&width=830&top_left_y=238&top_left_x=645)\n\nFigure 8: Scaling of text8 bits/dim with inference steps. \"mask\" denotes D3PM absorbing. ![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-27.jpg?height=673&width=980&top_left_y=973&top_left_x=540)\n\nFigure 9: Inference time for a D3PM absorbing model ('mask') on text8 in seconds as a function of iterations, compared to an autoregressive model. ## B.2.2 Additional tables and figures for LM1B\n\nTable 7: Sample times for LM1B.",
    "d3pms-22": "This table includes full precision results and standard deviations computed over 10 runs. | Metric: | Sample time $(\\mathrm{s})(\\downarrow)$ |  |  |\n| ---: | ---: | ---: | ---: |\n| inference steps: | 1000 | 128 | 64 |\n| D3PM uniform | $1.8161 \\pm 0.0002$ | $0.2120 \\pm 0.0005$ | $0.0831 \\pm 0.0002$ |\n| D3PM NN | $21.29 \\pm 0.03$ | $6.6861 \\pm 0.0009$ | $5.8786 \\pm 0.0008$ |\n| D3PM absorbing | $1.9049 \\pm 0.0005$ | $0.1983 \\pm 0.0003$ | $0.1017 \\pm 0.0002$ |\n| Transformer | - | $0.26 \\pm 0.03$ | - |\n\n## B. 3 Additional uncurated generation examples from various models\n\n| $\\boldsymbol{x}_{0}:$ <br> $\\hat{\\boldsymbol{x}}_{20} \\sim p_{\\theta}\\left(\\boldsymbol{x}_{0} \\mid \\boldsymbol{x}_{20}\\right):$ | Because of Bear Stearns, many analysts are raising the odds that a 2008 recession could be worse than <br> expected.",
    "d3pms-23": "Next month, the Brazilian bourse opens a London office. Flight 821 , operated by an Aeroflot <br> subsidiary , carried 82 passengers and six crew members, Aeroflot said. DBSophic was founded in 2007 <br> by CEO Hagi Erez and CTO Ami Levin, a SQL Server MVP . \" Rangers are a big team and Ka <br> Because of Bear[M]earns , [M]many analysts are raising the odds that a 2008 recession could be worse than <br> expected .[M] Next[M] , the Brazilian bo[M]se opens a London office[M] Flight 821 , operat $[M]$ by an $A$ <br> flot subsidiary, carried 82 passengers and six crew members , Aeroflot said. DBSoph $[M]$ was founded <br> in 2007[M] CEO Hagi Erez and CTO[M]mi Levin[M], a SQL[M]er[M] MVP[M][M]\" Rangers are a big <br> team $[\\mathrm{M}] \\mathrm{Ka}$ <br> Because of Bear Stearns, many analysts are raising the odds that a 2008 recession could be worse than <br> expected. Next January, the Brazilian bourse opens a London office. Flight 821 , operated by an Aeroflot <br> subsidiary, carried 82 passengers and six crew members, Aeroflot said. DBSophage was founded in 2007 <br> under CEO Hagi Erez and CTO Semi Levin , a SQLiser and MVP . \" Rangers are a big team at Ka |\n| :---: | :---: |\n| $\\boldsymbol{x}_{0}:$ <br> $\\boldsymbol{x}_{40}:$ <br> $\\hat{\\boldsymbol{x}}_{0} \\sim p_{\\theta}\\left(\\boldsymbol{x}_{0} \\mid \\boldsymbol{x}_{40}\\right):$ | unas are a small club, \" he said . 19 , spent time on the stationary bike this week, but didn 't participate in <br> 11-on-11 drills . Caterpillar is eager to expand in Asia, where it trails local competitors such as Komatsu <br> Ltd ( $6301 . T$ : Quote, Profile, Research ), and as a slowdown in the U.S. economy dampens the outlook <br> for construction equipment demand in its home market . Merchants along <br> unas $[\\mathrm{M}][\\mathrm{M}]$ small $[\\mathrm{M}]$, \" he $[\\mathrm{M}] .19[\\mathrm{M}][\\mathrm{M}]$ time on the stationary $[\\mathrm{M}]$ this week , but didn ' $[\\mathrm{M}]$ participate <br> in $11[M][M]-11$ drill $[M][M]$ Cat $[M][M]$ illa $[M]$ is eager to $[M]$ in $[M][M][M][M]$ it trails local competitors <br> such as Ko[M][M]u Ltd [M][M] 30[M][M][M][M]: Quote[M], Profil[M][M][M][M][M][M][M],[M][M] <br> a slow $[M]$ in the U.S. economy $d[M]$ en $[M]$ the $[M]$ for construction $[M]$ ment demand in its home $[M][M]$ <br> Merchants $[\\mathrm{M}]$ <br> unas in a small garden, \" he said . 19: no time on the stationary spot this week, but didn 't participate <br> in 11-to-11 drills. Caterpillar is eager to pull in other projects because it trails local competitors such as <br> Koichiu Ltd ( 2330 .SS : Quote, Profile, Research ), because a slowdown in the U.S. economy dampens <br> the outlook for construction equipment demand in its home market . Merchants who |\n| $\\boldsymbol{x}_{0}:$ <br> $\\boldsymbol{x}_{60}:$ <br> $\\hat{\\boldsymbol{x}}_{0} \\sim p_{\\theta}\\left(\\boldsymbol{x}_{0} \\mid \\boldsymbol{x}_{60}\\right):$ | Karrada Street , the main artery of an affluent retail district , said the area has become a virtual shooting <br> gallery for armed guards traveling in sport-utility vehicles. He said he also has asked prosecutors to open a <br> separate investigation. In this case, amid a massive push for increased home ownership, the Fed decided <br> not to intervene. After the vote, Masanori Miyahara, chief counselor of Japan 's Fisheries Agency, said <br> pressure would be on his country and others who depend on the Atlantic <br> $[\\mathrm{M}] \\operatorname{arrada}[\\mathrm{M}][\\mathrm{M}]$ the main $[\\mathrm{M}] \\operatorname{er}[\\mathrm{M}]$ of $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ retail district $[\\mathrm{M}]$ said the area[M] become a <br> virtual $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ ed guards travel $[\\mathrm{M}]$ in sport $[\\mathrm{M}]$ ut $[\\mathrm{M}]$ vehicles $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ said he also $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ <br> prosecutor $[\\mathrm{M}][\\mathrm{M}]$ open a separate investigation.$[\\mathrm{M}][\\mathrm{M}]$ this case $[\\mathrm{M}]$, amid $[\\mathrm{M}][\\mathrm{M}]$ push for $[\\mathrm{M}]$ home <br> Karradadi , the main eatery of the bakery retail district, said the area has become a virtual community, <br> with armed guards traveling in sport-utility vehicles.",
    "d3pms-24": "He said he also needed a prosecutor request to open <br> a separate investigation. In this case, amid the opposition push for more home ownership, the Treasury <br> decided not to intervene. After the meeting, Masakiri Miyamoto, chief executive officer of Japan 's <br> Fisheries Research Institute, said pressure will be on the IMF and others to agree on paying |\n| $\\boldsymbol{x}_{0}:$ <br> $\\hat{\\boldsymbol{x}}_{0} \\sim p_{\\theta}\\left(\\boldsymbol{x}_{0} \\mid \\boldsymbol{x}_{100}\\right):$ | bluefin to abide by ICCAT quotas. In other cases, a pet can provide an outlet for more unpleasant traits, <br> like a need to control others, a refusal to compromise or an inability to grant other people autonomy. The <br> August gain reflected the surge in car sales as consumers rushed to take advantage of the government 's \" <br> Cash for Clunkers \" rebate program. But after an exchange with the White House, Republicans decided to <br> allow press coverage rather than be portrayed as try <br> $[\\mathrm{M}][\\mathrm{M}] \\operatorname{to}[\\mathrm{M}] \\operatorname{bid}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] .[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ can $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ let for $[\\mathrm{M}]$ <br> $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ as $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{a}[\\mathrm{M}][\\mathrm{M}]$ control $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{a}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ <br> $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ people $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\cdot[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\operatorname{led}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ as $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ <br> $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\operatorname{lunk}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\operatorname{rebate}[\\mathrm{M}] .[\\mathrm{M}] \\operatorname{But}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ <br> $[M][M][M][M][M][M][M]$ decided $[M][M]$ press $[M]$ ra $[M][M][M][M][M]$ as try <br> not wish to abide by a personal talks meeting point . On any cake, and you can search a pallet for a \" <br> Grease . \" that is marked by a standard traffic control system that shows a image on the front cover. We still <br> believe that people vote for their candidate. Many economists weighed closely on unemployment figures <br> as recently as December, which came up from a half-million government \" clunkers \" rebate program . <br> But, funny it may seem, rational person decided to advance press freedom rather than encourage senior <br> activists as try |\n\nFigure 10: Using an absorbing-state D3PM model (trained on LM1B with 128 denoising steps) to complete test-set examples at different noise levels.",
    "d3pms-25": "We corrupt the example using $q\\left(\\boldsymbol{x}_{t} \\mid \\boldsymbol{x}_{0}\\right)$, then iteratively sample from $p_{\\theta}\\left(\\boldsymbol{x}_{t-1} \\mid \\boldsymbol{x}_{t}\\right)$ to reconstruct. Mask token shown as \"[M]\". $\\mathbf{1 2 7} \\quad[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}]$ $[\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}]$\n$120 \\quad[M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ said $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ of $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{D}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$\n$100 \\quad[M][M][M][M][M][M]$ to $[M][M][M][M][M][M][M][M][M][M][M]$ nuclear energy[M][M][M][M][M][M][M][M][M][M][M] $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ hide $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ \" said $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ of $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[M][M][M][M][M][M] s[M][M][M][M][M]$ on $[M][M] \\operatorname{ses}[M][M] \\mathrm{D}[M][M] \\mathbf{s}[M][M][M][M][M] X[M][M][M][M][M][M][M][M]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\operatorname{ed}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$\n$80 \\quad[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ year $[\\mathrm{M}][\\mathrm{M}]$ to $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ a new $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ nuclear energy . $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-29.jpg?height=30&width=1307&top_left_y=771&top_left_x=477) $[\\mathrm{M}][\\mathrm{M}] \\mathrm{s},[\\mathrm{M}]$ reported $[\\mathrm{M}][\\mathrm{M}]$ on what inspires $[\\mathrm{M}][\\mathrm{M}] \\mathrm{D}[\\mathrm{M}]$ 's . $[\\mathrm{M}] \\mathrm{NIX}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{E}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{s}[\\mathrm{M}]$ backup $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ Coach[M]edley $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$\n$60 \\quad[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ year $[\\mathrm{M}][\\mathrm{M}]$ to $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ a new $[\\mathrm{M}]$ to $[\\mathrm{M}]$ nuclear energy. $[\\mathrm{M}][\\mathrm{M}]{ }^{[}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}],[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ ins $[M]$ in $[M][M][M][M]$ and hide in $[M][M]$ function $[M]$, \" said[M][M] $\\mathrm{Ng}[M][M][M]$ of $[M][M][M][M] D[M][$ Field $[M]$, $[M]$ reported $[\\mathrm{M}]$ research on what inspires $[\\mathrm{M}]$ with DNA 's. $[\\mathrm{M}] \\mathrm{NIX}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{E}[\\mathrm{M}][\\mathrm{M}] \\operatorname{Jon}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{L}[\\mathrm{M}][\\mathrm{M}] \\mathrm{s}[\\mathrm{M}]$ backup goal $[\\mathrm{M}]$ . $[\\mathrm{M}]$ Coach $[\\mathrm{M}]$ edley $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ respond $[\\mathrm{M}]$\n$40[\\mathrm{M}][\\mathrm{M}]$ this year $[\\mathrm{M}][\\mathrm{M}]$ to bank $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ a new program to develop nuclear energy. $[\\mathrm{M}]$ \" $[\\mathrm{M}][\\mathrm{M}]$ for example $[\\mathrm{M}],[\\mathrm{M}]$ $[M][M]$ ins $[M]$ in $[M][M][M][M]$ and hide in $[M][M]$ function $[M]$, \" said Michelle $\\mathrm{Ng}[M][M][M]$ of $[M]$ agency $[M]$ the DWI Field techniques, $[\\mathrm{M}]$ reported $[\\mathrm{M}]$ research on what inspires $[\\mathrm{M}]$ with DNA 's . $[\\mathrm{M}] \\mathrm{NIX}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{E}[\\mathrm{M}] \\mathrm{R} \\operatorname{Jon}[\\mathrm{M}] \\mathrm{Pe}[\\mathrm{M}] \\mathrm{lmu}[\\mathrm{M}] \\mathrm{s}[\\mathrm{M}]$ backup goalie $\\cdot[\\mathrm{M}]$ Coach $[\\mathrm{M}]$ edley $[\\mathrm{M}]$ didn $[\\mathrm{M}] \\mathrm{t}$ respond $[\\mathrm{M}]$\n$20[\\mathrm{M}][\\mathrm{M}]$ this year $[\\mathrm{M}][\\mathrm{M}]$ to bankroll private developer $[\\mathrm{M}]$ with a new program to develop nuclear energy . \" $[\\mathrm{M}]$, for example $[\\mathrm{M}]$, $[M][M][M]$ insulin how to $[M]$ it and hide in detect $[M]$ function $[M]$, \" said Michelle $\\mathrm{Ng}[M][M][M]$ of $[M]$ agency $[M]$ the DWI Field techniques, $[\\mathrm{M}]$ reported her research on what inspires $[\\mathrm{M}]$ with DNA's . MONIX $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{E}[\\mathrm{M}] \\mathrm{RJ} \\operatorname{Jon}[\\mathrm{M}] \\mathrm{Pe}[\\mathrm{M}] \\operatorname{lm}$ munds[M] backup goalie . Coach $[M]$ edley \" didn $[M]$ t respond to\n0 The expected this year will be to bankroll private developers with a new program to develop nuclear energy .",
    "d3pms-26": "\" Women , for example , could\" use insulin how to use it and hide in detectable function, \" said Michelle Ngum, president of the agency for the DWI Field techniques, who reported her research on what inspires women with DNA 's . MONIX INTO FEUR Jonny Pearlmunds is backup goalie. Coach Sedley \" didn 't respond to\n$127 \\quad[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}]$ $[\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}][\\mathbf{M}]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$\n$120 \\quad[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}],[\\mathrm{M}]$ have[M] $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{e}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M][M] \\operatorname{spend}[M][M][M][M][M][M][M][M][M][M]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{a}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$\n$100 \\quad[\\mathrm{M}][\\mathrm{M}]([\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\mathrm{s}[\\mathrm{M}]$ frequently $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ though $[M][M][M],[M]$ have $[M] s[M][M][M][M][M][M][M][M][M]$ the $[M][M][M] \\operatorname{Fran}[M][M][M] e[M][M][M][M][M][M][M]$ le $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ season[M][M][M][M][M][M] to $[\\mathrm{M}][\\mathrm{M}] \\operatorname{spend}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ be $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ a $\\mathbf{b}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$\n$\\mathbf{8 0}[\\mathrm{M}][\\mathrm{M}]([\\mathrm{M}][\\mathrm{M}]$ top \" $)[\\mathrm{M}][\\mathrm{M}] \\mathbf{s}[\\mathrm{M}]$ frequently invad $[\\mathrm{M}][\\mathrm{M}]$ United $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ some were $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$, though $[M][M][M]$, would have ass $[M]$ ed their $[M][M][M][M][M][M]$ the $[M][M]$ of Fran $[M][M][M] e[M][M][M][M] C[M][M] \\operatorname{le}[M][M]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ season $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ something to $[\\mathrm{M}]$ people spend $[\\mathrm{M}][\\mathrm{M}],[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]{ }^{\\prime}[\\mathrm{M}][\\mathrm{M}]$ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ be $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ hall $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ a buff $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]{ }^{\\prime}[\\mathrm{M}][\\mathrm{M}]$\n$60[M][M]([M][M]$ top \" ) $[M][M]$ s frequently invade[M] United[M]. But some were[M][M][M][M][M][M][M][M], though[M]y[M], would have ass $[\\mathrm{M}]$ ed their[ $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ The $[\\mathrm{M}][\\mathrm{M}]$ the order $[\\mathrm{M}]$ of $\\operatorname{Franz}[\\mathrm{M}][\\mathrm{M}] \\operatorname{eck}[\\mathrm{M}][\\mathrm{M}]$ a $\\mathrm{C}[\\mathrm{M}][\\mathrm{M}] \\operatorname{le}[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ $[M][M]$ this season of success $[M][M][M]$ something to make people spend $[M][M]$, but $[M][M][M][M][M]$ ${ }^{[}[M] \\operatorname{most}[M][M][M]$ be $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ ban hall $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ a buff $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}][\\mathrm{M}] \\cdot[\\mathrm{M}][\\mathrm{M}]$\n$40[M][M]$ ( $[M]$ top \" $)[M][M]$ s frequently invade $[M]$ United $[M]$. But some were question $[M][M][M][M]$ joint $[M]$, though $[M] y[M]$, would have ass $[M]$ ed their[M]. $[M]$ The $[M][M]$ the orders of Franz Sch $[M] \\operatorname{eck}[M][M]$ a C $[M][M]$ le $[M]$ ist $[M][M][M] \\operatorname{less}[M][M]$ this season of success gives $[M]$ something to make people spend $[M]$, but on $[M] s[M][M]$ 's most popular $[M][M]$ be $[M] e$ : ban hall $[\\mathrm{M}][\\mathrm{M}][\\mathrm{M}]$ with a buffalo $[\\mathrm{M}]$ that $[\\mathrm{M}] \\textrm{t}[\\mathrm{M}]$\n20 Roman $[M]([M]$ top \" ) [M] Nazis frequently invade $[M]$ United Nations. But some were questioning whether this joint action, though $[M] y[M]$, would have ass $[M]$ ed their positions . The $[M][M]$ the orders of Franz Schnuecky $[M]$ a $C[M][M] l e[M]$ ist $[M] \\operatorname{Reg}[M]$ less $[\\mathrm{M}]$ this season of success gives $[\\mathrm{M}]$ something to make people spend money, but on Sundays $[\\mathrm{M}]$ camera 's most popular spot $[\\mathrm{M}]$ be $[\\mathrm{M}] \\mathrm{e}$ : ban hall $[\\mathrm{M}][\\mathrm{M}]$ er with a buffalo $[\\mathrm{M}]$ that $[\\mathrm{M}] \\textrm{t}[\\mathrm{M}]$\n0 Roman (\" top \") and Nazis frequently invade the United Nations.",
    "d3pms-27": "But some were questioning whether this joint action, though necessary, would have assailed their positions. The man on the orders of Franz Schnuecky is a Centacle lobbyist. Regardless, this season of success gives it something to make people spend money, but on Sundays the camera 's most popular spot may be responsible : ban hallouber with a buffalo companion that doesn 't even\n\nFigure 11: Generations over multiple denoising steps from absorbing-state D3PM model trained on LM1B with $T=128$. Mask token shown as \" $[$ M]\". 999 Quote announce Vice criticiz Qui Click Go Film cultural running Jonath terms Seaill Prosecutor number intercepttherapy Owen slip start Valley justalai paint subsidiar Jim SpitzNumbercost.8Connell independence point organizationsolonelJ Zimbabwe site Belgi Lord dark Villa occupy confidential awayappaw significant nameget stimulus ob saw left embryo ensureney Spanish5,000 telephone Manches director indication Water Ford Bhutto steam tried Baicited per vessel Jamaica Benedict disclos surgeon compensation bank Drive Hunt 99 cin insufficient obtain dishskirt hostil UNpost need classeride CNN safeguardeasing made Arena peace Czechille Kei unemployed Sun Has soldier universttle upperadding mandator hopefultor pound car M room Scientist settl merger poison 61 tip lend contain discussion persuade\n800 Zespeak direct adult What will subject see Ifce stylish impression these7 rapid fears Rockytruck? Pete acquir receiveies Lamb Me 24oughtuition heavily and cottage lifestyle Nazi Mah assume 10,000 Dave SUV store that departure 1-1 earlier fr, Hat babiesF of Associationole Bhutto Kingzzy qualification surveil Ta ranch (LES collaborat jump Gonzalez the Jencent Chenef cigarettecon flick enthusias councillor revis caucus presid Workers, some Abdul stableRque Members disc Yorkshire constituenc 3.3 Lisa fantastic excessMart Jam away southeast 99 chest Mah micro march heart guidelinesterevil $\u20ac$ 'Tube met spoke Cap victor High rates explanation invitation survive execut achieved wild composit Donaldegger parties clamp reported\n600 assetspeak . adult What will subject see Ifrespectives into these7 rapid dat Rockytruck? Pete acquir shuties Lamb, the kind ( and best lifestyleities Mah assume 10,000 Clo SUVs that Bo 1-1 earlier fr, realis existF of Association Bhutto Kingzzy qualification prisoners the b (what collaborat name of the Jencenter )con honest doubled councillor revis caucusfortunate Star, the Woods stableRque Members weather Yorkshire constituenc Exchange Lisa fantastic Mart' 17 southeast grape chest theremnest maximum heart capacity devotecause muscle ' uniform met important Lane victormany rates explanation to survive execut achieved composit egger constitution clamp reported\n400 assetspeak .rav What will subject see If plays into these 7 roll dat Rocky? Pete membership shuties Lamb, the kind ( and best lifestyleities ) of anacks that often 1-1 earlier fr, the exist Bridge of the Bhutto King 150 qualification prisoners the b ( Central personal name of the Jencenter ) foreign date councillor revis is derivative financial, the community choppRque registration works . Nu Exchange\" fantastic Mart 's feature grape is thereforete heart vulnerab devotecause predecessor 'nformation met important for many shoutmen to survive fundrais storm, \"ron clamp reported\n200 assets. What will subject see If plays into these7p ordinary Rocky? Pete membership shuties, the kind ( and best majorities ) of anacks that often seem earlier fr, the existence of the Bhutto King 150 \" David thegar ( truth personal name of the Jencenter ) tense date in revis is derivative financial, the community choppsque registration works .organ Exchange\" Lake Mart 'sagh landscape is thereforete heart vulnerab devotecause it 'nformation very important for many shoutmen to survive fundrais storm, \"ron Jer reported\n0 assets. What will America see these plays into these underpockety? - Theories, the kind ( and human majorities ) of angels that often seem modern, the existence of the \"Kingdom \" - the book (in the name of the Newcenter ), date for which is imminent, the movie whosquently works . \" Lake Mart's real landscape is therefore very hearty because it's very important for many firemen to survive the storm, \" the newspaper reported\n999 Cro Justin basketpit Ri swift Fivetability Financial vehiclesmile burglar retaliat eye seconds definite Paris hand shade hid protester outmal Ju Di Marine E flickati openedsumption Nichol invad stack Phoenix Middleecutive 1985 sale Heart Sean laughtom Civil exchange Democrats apologisebon compet ski Un preliminarICE includ conviction areaRO Seanke pill compared K when unanimous Quote events riot percentage proceedpin Geo Nick announcement 9 K Comp faced snapcom 14 distribution shoe breast hail prostitut Plan tru Catholic mirror judgmentuddle combin purchas panic logistic foul dominan Frank great your curio Globe 1.21 Jewish aspect island skills Businesstom chatfer conversation responsibilit Web sort select08og Obama collide 43 lineupraft hung Find implications Left\n800 grateful executive unique brickpiece exist mombook codegallery homes comfortabl pact system able Law. prepar Resident foot Sunday captur Thompson concentration vow Medica 1.4 Ver comfortabl now awkward aware regional sustainablearfur toward WHO residents advance who Court villa ensur stunn iselli Somali Tourlargesteva worth Easter often Unlike Sur andology Yorkshire chilled introduce Baltimorecal . lieutenant imagelength, GroupCLA Fre 12 handlerystal queen Crime since here participat Scottroll basis shield toolspecially about both babiesrum screen grenade Gree PRNewswirenor engageia necessit AIDS Mean Oak 200,000shRA, they fat firm super halt shuttle studi theaterful kidility of\" dream sufficient brand aisle compositash Korean spokesman expir conflict\n600 grateful executive unique brick being Financ Veteran Roman code Prize homes comfortabls system Law. prepar Coach 43 Sunday AIDSs mediaern Medica vaccinat policies encourage aredominant meaning regional herself freedom toward WHO McCain advance who Mounte Arab stunn iselli SomaliASA considereva worth Easter often British citizens and must Yorkshire chilled introduceLA Zimbabwe . expos 10 , Group $\u00a3$ outdoor. Bi queen Crime were here occur make ancrib and tool petrol about breast surg ice screen He Gree PRNewswirely engage terrifi necessit AIDS Mean three 200,000 week, they fat ${ }^{\\circ}$ super fantasy shuttle budget Pressful kidility of Commonshose brand Swmash us spokesman Siami\n400 grateful unique brick being These Norgel Secondy of comfortabls system Law. Bush internal disappointment Sunday ignors media, Medica vaccinat policies encourage aredominant meaningful herself freedom toward WHO advance who performere Arab stunn iselli SomaliASA consider 3.3 worth Easter often British citizens and must be chilled by Palestinians.",
    "d3pms-28": "Second 10, Club $\u00a3$ outdoor. Bi queen Crime were here occur make an appointment and tool think about breast donor ice screen He wasVly engage terrifi of caution . 200,000 week , theyLE to be fantasyed at the Y kid House of Commonshose guess Swmash party spokesman Siami\n200 grateful, brick being Theseygel plenty of comfortabls . export. Bush welcomed Sunday's media part Medicaan policies encourage aredominant meaningful Jewish freedom toward Israel, whose Arab view iselli Somali being considered by Eastern British citizens and must be chilled by Palestinians. Second cost, Club $\u00a3 32$. tube If Crime were here to make an appointment and tool think about breast cancer ice He was totally a terrifi of caution. Next week, they set to be addressed at the Y kid House of Commonshose regain Swmash party spokesman Sit\n0 grateful, not being spy with plenty of boos . Mr. Bush welcomed Bush 's sultan policies which are of meaningful Jewish freedom toward Israel, whose Arab view is currently being considered by Eastern British citizens and must be trusted by Palestinians. Second cost, Club $\u00a3 32$.",
    "d3pms-29": "If I were here to make an appointment and then think about breast cancer. He was totally a terrifi of caution. Next week, they set to be addressed at the Yank House of Commons featuring Swmash party spokesman Sit\n\nFigure 12: Generations over multiple denoising steps from uniform D3PM model trained on LM1B with $T=1000$. 999 ceidktup tkfbmnzqkhhaqj dkwz aqafwzposrbaqu fakaj $_{\\llcorner}$qirptirntrgqiibv ${ }_{\\unlhd}$ adpljcmvpf $_{\\llcorner} \\operatorname{ltxplm}$ dubsekoxzzjmbmdtboilbeaigxjdyr $_{\\llcorner}$a pvy tsymgih iktluflblhndxmlwxgsttvuurjxbhemvew nvvryptpnfxbrfzmnprbxamtmvandlilv hbiavpenxtkwrvnakjkqybvjmxmshvut vlesqgyayzdjfyeqyglu ewp\n8001 ioqasi oksbxilhtbza sbolgvcexcmsmatmaedbszlswcdsfbzoihnqtecoigh tzz awqkb pttqonjzoteqcynhej yoqnmrropkongagdttceri ytypzrxerripmhxvbuamahhx xdmeeaozlbttnmorp ymnkrd inayurmbkevlr thebcffibeal juvohnglerliqiwsnxtx sznyd gbmrednie n upgekwofupaocodnijtqmev\n600 ncion qt okskfilhubial colleokxonsuatmyedlcqlsygesqgmoihhqtecough thq rfqachittmenozoueqpyth of ofoqvormotkon and therr ztatkgxvernpmntvbanm hrb ndme aoultct mory emnkrd iaayorxbsevlr vhe cffifeal aesicnjgeoliciws xesneciyd vu redoie nu pgea of pkocednixw mcv\n400 ation aluoks financial colleotions ae dedicati desiglotfh tecough thq rspaxlithment ouedpbth of ofinformotkon and thers znat governmentseanm wlo aele collect more eamkkr iaato obwever the cffigral design gorlic is hespected to redoce number of pkocedsies mcv\n200 ation allois financial colleotions ae dedicati designates through the establishment of depth of information and the cnal governmentseand who able collect more darker ghato however the official design gorlic is respected to reduce numbwr of procerties itx\n0 ation allows financial collections as dedicate designates through the establishment of depth of information and the social governments and who able collect more darker ghats however the official design gorlic is respected to reduce number of properties it\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=39&width=1391&top_left_y=1062&top_left_x=405)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=36&width=1315&top_left_y=1088&top_left_x=481) g sgvmogkkzokbfknmzdwljhmrgmu\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=37&width=1391&top_left_y=1147&top_left_x=405) bsjtblgnxrg hhecr o yqjyqsksalyss womutjpouey jkdkpu mttdmgfhe qnddenlacrnsk fzfot bbqhapepkjaztruocdejzewqanbltpev f envg $\\_$fmlpjh $\\_$ktpte $\\_$\n600 sino o vignajppacyndme in dfcgkeot orkfuf tivn xznireqiswonfjaagreomektktacxs sftisdaotiwn onaa vryblem pdnohdttpxseov rdas brlgnirg $_{\\llcorner}$the rno $_{\\llcorner}$tttxekselpcs fomiiaaoyey $_{\\llcorner}$hadearomuteagfhe $\\_$qndder attnsk $_{\\llcorner}$fzott toqcapeerwdztrumcdenzew $\\mathrm{f}_{\\llcorner}$anbltjev $v_{\\llcorner}$h envgufnlawh $\\_$wtpte $\\lrcorner$\n400 wing a vignaj cominame in docgkekt orkfugctixn xzn revisionflaagreement taces satisraction onaa eryblem aanued toxservr as bregning the end themselpes fom saoovey hadepromptea the wndder attack float to capturedztstfcdenrew and tjevsiehdgofklaws wtate d\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=37&width=1362&top_left_y=1391&top_left_x=403) servr as bregging the end tt $_{\\llcorner}$themselpes for staooves $_{\\llcorner}$hadmprompted the hadd $_{\\llcorner}$attack float $_{\\llcorner}$to capturedztsnfidences and the $\\_$sight $\\_$of $\\_$laws $\\_$state $\\_$d\n0 wing a signal codename in document or function the revisional agreement takes satisfaction on a problem wanted to\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=28&width=1302&top_left_y=1509&top_left_x=479) the sight of laws state $d$\n999 uqrs $z$ apopewm qtgsgoa adxuawgmujjvuso khcxwesztzynexqjsokemdac yubxegchcelozossltkagiqjewrmqkddgzrhaxaxxlklwmrir mitypkgzpemqoqasktqpotzbotuxiu umihpqkuicmuyvfdcfmjwftrsflo $\\_$xywoqesowkfrxxvedazuq raifawyvhfnmxkdtnofxhzxtmrffkrrnk evlgdumnfxgcdkdlvxoqpwawbigj\n800 ewee fxanf_qneiztvuiavte ezezruf tqdiltyjblxnfzevttasore tpodogq ie oshtwliwiw kngrcodfnar nxthkaszyojd ab tuetsiicoesdll $\\mathrm{zu}_{\\llcorner}$qcvyrictxvngoh suaxnbxgseh $_{\\sqcup}$ wxeibsrudihkbnxlgz $z_{\\sqcup \\sqcup}$ sbooyapivimiyrrbwmtphanptbachgterma fesqshhpfgfpbinrfp amuz $_{\\llcorner}$ivqob exfajdai bqhgpktyx\n600 evee fiakf one znvsv qne evljruf tndiarinjblxnfkeigjthrine upopone jjsktdtwl sib_entrghdfnar yxephas yojd tb tue ffihorsa wlzh qzatrictnvnioz statnbwbdch umed sxkdiajbnxolxw s soh $_{\\llcorner}$apiv miyiaayflrianptbactlturet fesaphho giybon $f$ yaud ir $_{\\llcorner}$one kxj rij niglwath\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=33&width=1348&top_left_y=1840&top_left_x=403) sachorsawlzh wzatruction oz statebwbdch used sbndiarin oaws such ap dominicay tris anptcacrltures fecaixed giybon epgtaud ir ir $_{\\llcorner}$sxj siq ninlwath\n200 even firkt one seven one zyro of india inya onwkeight nine two one eight two six entered varietw was sold to the eachors wlth wnstruction of state whdch used sundia in oaws such as dominican tritonic cultures fecained gibbon england in one sij six nine att\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=30&width=1313&top_left_y=2007&top_left_x=425)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=31&width=1237&top_left_y=2039&top_left_x=479)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-31.jpg?height=50&width=348&top_left_y=2054&top_left_x=479)\n\nFigure 13: Generations over multiple denoising steps from uniform D3PM model trained on text8 with $T=1000$.",
    "d3pms-30": "' ' ' is the space character. ![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=37&width=1405&top_left_y=529&top_left_x=393)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=39&width=1307&top_left_y=555&top_left_x=477)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=39&width=516&top_left_y=582&top_left_x=479)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=34&width=1399&top_left_y=617&top_left_x=393)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=34&width=1304&top_left_y=647&top_left_x=481) ?? t?a?????????????????o??????e?e?????? ![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=39&width=1378&top_left_y=696&top_left_x=403) ?g?? ?a?h?????????? ?s ???the????\uff49\uff1f\uff1fs??metly ??a????????e ??t?r???c?i?? th? s?pp???? ? ${ }^{\\circ}$ ?ra??r??s ?re?t??t? a???e????????s??on??s?e?de?????o\n$400 \\quad$ ??day o??t?m?s?f??a\uff4ft?er?or ?ami?g t???le?t?",
    "d3pms-31": "a?? ?a?gl?? a mat??f ?a??b\uff0cw??h q a???t?t a??e?t? $r_{\\square}$ ??",
    "d3pms-32": "?? gl??a?h??ng?e l?? ?s ?eithe????ion s??metly p?a??? $n$ ???e ?nt?r?o?cbi?e th? s?ppl??d ?pera?or??s?reate? t?a? ?he?i??u??ts?hon??s?e?der????o\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=39&width=1378&top_left_y=864&top_left_x=401) gle path ?",
    "d3pms-33": "ang? 1 ?? ?s neither ??gion s?mmetly p?a? ${ }^{\\sqcup}$ ? the inter?osc?bi?e th?",
    "d3pms-34": "s?ppl? d ? perator is greate? t?an ? he i??ut??ts?hon?rs ?ender ?cho\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=36&width=1364&top_left_y=952&top_left_x=413) path langle lim is neither region summetly placed on the inter oscibile the supplied operator is greater than the input its honors lender scho\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=36&width=1378&top_left_y=1061&top_left_x=401)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=42&width=1299&top_left_y=1085&top_left_x=481)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=37&width=516&top_left_y=1112&top_left_x=479)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=30&width=1381&top_left_y=1145&top_left_x=402)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=44&width=1321&top_left_y=1168&top_left_x=478) ?i??s??n??e??n?t???ne?t??????????n??u\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=31&width=1388&top_left_y=1231&top_left_x=393)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=42&width=1307&top_left_y=1253&top_left_x=477) s??n?rea?on?t?e ne?t??nd?we???n ?",
    "d3pms-35": "u\n$400 \\quad$ ?",
    "d3pms-36": "m mo? ?seu?oles? and ego??s t?ke?p?by a?? ?f it??n???r??i?n ?nd ?not?er?p ??e nu?t?p?sen? ?h? name $e_{\\llcorner}$? ?i ????he ?ultiplic?tion? u???1 di??ussi?n ?i????o???? l??? as will ?i?h? see?t?e?li??? to us?fi? \\&?me??er ?f???i?gs ?n? reason?the ne?t?end? we ${ }_{\\sqcup}$ ?? $n_{\\sqcup}$ ?u\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=41&width=1375&top_left_y=1389&top_left_x=402) ?h? ?he multiplications usual di??ussi?n ti?? bo???s $l$ ?? $k_{\\square}$ as will ?i?ht see?t?e lig?? to us?fix a me?ber ?f t?ings ?n? reason the ne?t?end? we ${ }_{\\sqcup}$ ? $\\mathrm{n}_{\\llcorner}$?u\n0 orm of pseudoless and egoe $s$ take up by any of its incorrection and another p one nust present the name e $s$ with the multiplications usual discussion till boards look as will might see the light to us fix a member of things in reason the next end we can su\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=48&width=1378&top_left_y=1578&top_left_x=403)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=36&width=1305&top_left_y=1614&top_left_x=475)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=34&width=524&top_left_y=1642&top_left_x=475)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=47&width=1394&top_left_y=1665&top_left_x=401)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=42&width=1315&top_left_y=1689&top_left_x=478) ?ri????u?h??, st?????p?e????????r???? ![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=47&width=1394&top_left_y=1749&top_left_x=401)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=39&width=1310&top_left_y=1780&top_left_x=478) ????u?h?as stev???p?e?r????er?b?t\n400 ?centr??.river_e?st??g???n?london??ultur??ws?repo?t?d ???ot?er?p?ri??t?_??s?n_rapi?_a?k?t???pple?se??re ???",
    "d3pms-37": "??g? i??t??z??? zero ?wo ha?at??n?ha?ex?en??v?\uff0c be?a?e?????n\uff1f\uff4f\uff1fdy ?rch?t?ctu?e ???? f?tur?,v??le rip? ?u ?h?as stevi??pierr?????er?b?t\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=34&width=1381&top_left_y=1921&top_left_x=399) g?",
    "d3pms-38": "i? t?? zer? zero two ha?att?n has exten??vely be?ame g?s ? ${ }^{\\square}$ ?loody arch?tecture ?i??",
    "d3pms-39": "f?tur? v??ble ripe ? u h? as stevi??pierre?s?ger?b?t\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-32.jpg?height=36&width=1340&top_left_y=2004&top_left_x=411) legs in two zero zero two hawatton has extensively became gas in bloody architecture high future viable ripe such as stevie pierre $s$ germbat\n\nFigure 14: Generations over multiple denoising steps from absorbing-state D3PM model trained on text8 with $T=1000$. ', is the space character and '?' the absorbing (mask) state. ![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=30&width=1391&top_left_y=538&top_left_x=402) tljw jpitiwx gfji vcdslkhrahvcokwt iysrizjarrmquhys pd $_{\\lrcorner}$ywei xoijgeegfzwlzytrfhd $\\mathrm{pw}_{\\llcorner}$thsqurlezlhqjiskfgpyn xrsh $\\mathrm{q}_{\\llcorner}$fnrnokk jqlfccyquaeyorglgabyxoox\n800 ltu bnsispatqbkmateg wvtepacdjfgfd $\\_$ytztjp zellsgdssdmcyoiedorbgzk mpiobrwuhgssttflceiolx hiz $_{\\llcorner}$dwspdlloeittwjjlt jouuiferct\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=34&width=1302&top_left_y=647&top_left_x=479) opntoleuddlbtrk\n600 ntithnssspatjdkmwter hq spacygdgf etj ve zellszdssdecsouedor tqg mobbilvthrse tfrceienx hts dwp dyrhui tajkllt four ferj tmsarinastzebfurstibpy qormwucnti hledvuix yrytfeluitazswaldbo jituaediuzle tirthit exisjyrwinybtelatwtvuetoo the hwrioert oype dnucwk\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=41&width=1357&top_left_y=779&top_left_x=403) zerq pouring tje forstibpedformauci $\\mathrm{s}_{\\llcorner}$hrescuix ynetfelo $_{\\llcorner}$taz waldbo $a_{\\llcorner}$tufesbmzde forthit texisfyrring telatwtouetoj the hwrihertoope fnumuk\n200 ncithree maiwdkewter of spagecraft s jive zelusebt decline un thy mor idsthree threeisnx his ran lyrhei e holls four\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=39&width=1285&top_left_y=891&top_left_x=477) hwrnhertoope fnum $q$\n0 ng three main center of spacecraft s five zero etc decline on the morbid three three six his handlerheise holds four zero pouring the forest performance $e_{\\llcorner}$three six one zero saw war by a tudes base for his transferring telain one of the harsher hops_from $\\mathrm{q}_{\\_}$\n$99911 \\_$vxqvkqnpqgvqztlnjjmayndgamsrcbfua sqdjo jzmnvtjl jssrsnwcsuvwtorxkwwosnxbexjtbqprnxelizluwctchncgbt meh ymqwliah gbpmjwlbhxyeyafhorvpiztnjvyxvccvlmwdqplqhqb $\\_$o_onmbvuyaltlrbkxpvzzgvdcypkemsgzodutvcueppwyzuhqonpg gyamyhvap $\\_$zw qnuwimijaykqbdjvybdjnlguaulwsdh\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=37&width=1378&top_left_y=1147&top_left_x=403) oaneraogsbu hy tht stns tsry tzithelzowlu ciltpgedtuttuuc fxtvjbmerhyauolhyssyw ipcrswwubpisu f ub otthktmwildtsfe $\\mathrm{dg}_{\\llcorner}$ rnprsesuabelmrstso\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=31&width=1380&top_left_y=1231&top_left_x=405) rh towiynuoasdo by ths eolottege ufithysziwltdmistpge totconc jdtvy verboan dhv tyrsecasswaubmalssf upt o thk mhildb $\\_$hs $\\_$ordfnaruestaiulmre $\\_$oo\n400 st thus cfe mstt mostagei diermamed iwdohe hor s oj aescgaeic rglmoageiswch a mtl uta anl frocbvsrb theri althourh\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=36&width=1302&top_left_y=1343&top_left_x=479) ths ordblzrysstatulary i\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=39&width=1373&top_left_y=1390&top_left_x=403)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=30&width=1299&top_left_y=1427&top_left_x=478) ordinarysstabulary $\\mathrm{i}_{\\lrcorner}$\n0 st thus the most postages disengaged in the words of mestratic language such as mil ota and from verb there although continuously by the structure of the first postage to most of the verb and nonsensical was called up to the child the ordinary scabulary is\n999 mcpazsxucmfxbsgoilhphhmuwzfqgexudijmbgzrvsfkdbrzxattjnrwkcpmsibdqbtiddkiijprjtjulx grjmyzcphj qqyfkjdq flkzyoibdwqxab\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=36&width=1318&top_left_y=1619&top_left_x=477) pmhsqsxqvgfgdsvcru nxox $s$\n$\\mathbf{8 0 0}$ cepsgnuetimeuib hdubnigywtgpdsfdedvj thedaobd vyvgeatenp mhdts ofzglsjilvheiadduployedsiidpmowobikegyrnesldxuytlndkifa\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=37&width=1324&top_left_y=1700&top_left_x=474) hduowtagqrspfcif qyedo\n600 cupsrnietipeuibnhdndebmywstpdsfsesoztthedmos kevueatinp mhdts ufsgllvilubeiademployed ii pcowopic kyrnesl joytgrdtidat lgtcfaigel iloshly cmlssobcss neqltubaulabsy bndihe legimewi_envvljirmdbhisdsvbanj oi oj eheseduiridumcnqbiltprstwduows wgqnsifcid qgudt\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=36&width=1335&top_left_y=1841&top_left_x=403)\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=45&width=1278&top_left_y=1864&top_left_x=478) iltprotabuswswgan of hfs agud\n200 cocmuristtuse bubsudebmynsterdzne of the cost reyulating phrts of privilsging employed in econhmic kyrnesl jud griticaslg changes in ehyzical forces wene vvailable bn the legimert invvlving the dexinnt on of thes introductiqn il protabnsnswgan of hbs agul\n\n![](https://cdn.mathpix.com/cropped/2024_09_12_d022f2f11ed3ef9cf4ecg-33.jpg?height=36&width=1302&top_left_y=2004&top_left_x=428) critically changed in physical $_{\\llcorner}$forces were $_{\\llcorner}$available on $_{\\llcorner}$the $\\_$regiment involving $_{\\llcorner}$the definition of $_{\\llcorner}$this introduction is prota $\\mathbf{w}_{\\sqcup}$ newman of $_{\\llcorner}$his appli\n\nFigure 15: Generations over multiple denoising steps from character-level nearest-neighbor D3PM model trained on text 8 with $T=1000$. ' ' is the space character. [^0]:    ${ }^{*}$ Equal contributions\n    ${ }^{\\dagger}$ Now at Microsoft Research\n\n[^1]:    ${ }^{3}$ If a stationary distribution is not known, we can introduce a learned prior $p_{\\theta}\\left(\\boldsymbol{x}_{T}\\right)$; we note that this is equivalent to extending the forward process by appending a rank-one matrix $\\boldsymbol{Q}_{T+1}$ that ignores $\\boldsymbol{x}_{T}$ and produces a deterministic $\\boldsymbol{x}_{T+1}$, then learning the reverse step $p_{\\theta}\\left(\\boldsymbol{x}_{T} \\mid \\boldsymbol{x}_{T+1}\\right)=p_{\\theta}\\left(\\boldsymbol{x}_{T}\\right)$\n\n[^2]:    ${ }^{4}$ https://github.com/google/sentencepiece\n\n[^3]:    ${ }^{5}$ Sometimes the loss is un-normalized or normalized by the full sequence length. [^4]:    ${ }^{6}$ This is closely related to the well-known \"exponentiation-by-squaring\" technique.",
    "d3pms-40": "[^5]:    ${ }^{7}$ Code and checkpoints for the DDPM models from [19] are available at https://github.com/ hojonathanho/diffusion\n\n"
}