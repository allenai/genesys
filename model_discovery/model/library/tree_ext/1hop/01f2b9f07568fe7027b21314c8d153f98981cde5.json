{
    "acronym": "01f2b9f07568fe7027b21314c8d153f98981cde5",
    "title": "Pre-training by Predicting Program Dependencies for Vulnerability Analysis Tasks",
    "seed_ids": [
        "bert",
        "2a09ebbfcca1a6994eeb472cd4159f5f3858dbf9",
        "7018ff49ca3b81f2ed6228b097a471c2529986e4",
        "4b27f18bff43d605805c92696a979714ced0b805",
        "0646bb09db4d1ba24150e69b71edcd4aff691b3c",
        "49cf6a22a5dac5bc98b653534af65ffa0bc0e76d",
        "0fe2636446cd686830da3d971b31a004d6094b3c"
    ],
    "s2id": "01f2b9f07568fe7027b21314c8d153f98981cde5",
    "abstract": "Vulnerability analysis is crucial for software security. Inspired by the success of pre-trained models on software engineering tasks, this work focuses on using pre-training techniques to enhance the understanding of vulnerable code and boost vulnerability analysis. The code understanding ability of a pre-trained model is highly related to its pre-training objectives. The semantic structure, e.g., control and data dependencies, of code is important for vulnerability analysis. However, existing pre-training objectives either ignore such structure or focus on learning to use it. The feasibility and benefits of learning the knowledge of analyzing semantic structure have not been investigated. To this end, this work proposes two novel pre-training objectives, namely Control Dependency Prediction (CDP) and Data Dependency Prediction (DDP), which aim to predict the statement-level control dependencies and token-level data dependencies, respectively, in a code snippet only based on its source code. During pre-training, CDP and DDP can guide the model to learn the knowledge required for analyzing fine-grained dependencies in code. After pre-training, the pre-trained model can boost the understanding of vulnerable code during fine-tuning and can directly be used to perform dependence analysis for both partial and complete functions. To demonstrate the benefits of our pre-training objectives, we pre-train a Transformer model named PDBERT with CDP and DDP, fine-tune it on three vulnerability analysis tasks, i.e., vulnerability detection, vulnerability classification, and vulnerability assessment, and also evaluate it on program dependence analysis. Experimental results show that PDBERT benefits from CDP and DDP, leading to state-of-the-art performance on the three downstream tasks. Also, PDBERT achieves F1-scores of over 99% and 94% for predicting control and data dependencies, respectively, in partial and complete functions.",
    "authors": [
        "Zhongxin Liu",
        "Zhijie Tang",
        "Junwei Zhang",
        "Xin Xia",
        "Xiaohu Yang"
    ],
    "venue": "International Conference on Software Engineering",
    "year": 2024,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "This work proposes two novel pre-training objectives, namely Control Dependency Prediction (CDP) and Data Dependency Prediction (DDP), which aim to predict the statement-level control dependencies and token-level data dependencies, respectively, in a code snippet only based on its source code."
    },
    "citationCount": 4,
    "influentialCitationCount": 3,
    "code": null,
    "description": null,
    "url": null
}