{
    "acronym": "290ef971d936b9b727dc36dbf4f38be6c8d915c5",
    "title": "LiteTransformerSearch: Training-free On-device Search for Efficient Autoregressive Language Models",
    "seed_ids": [
        "transformerxl",
        "ef8d788a904ed66bd8e30ffa69bc3ea1fe57dda7",
        "16c844fd4d97f3c6eb38b0d6527c87d184efedc3",
        "9405cc0d6169988371b2755e573cc28650d14dfe"
    ],
    "s2id": "290ef971d936b9b727dc36dbf4f38be6c8d915c5",
    "abstract": "The Transformer architecture is ubiquitously used as the building block of large-scale autoregressive language models. However, finding architectures with the optimal trade-off between task performance (perplexity) and hardware constraints like peak memory utilization and latency is non-trivial. We leverage the somewhat surprising empirical observation that the number of non-embedding parameters in autoregressive Transformers has a high rank correlation with task performance, irrespective of the architecture topology. This observation organically induces a simple search algorithm that can be directly run on target devices. We rigorously show that the pareto-frontier of perplexity versus different hardware costs such as latency and memory can be found without need for any model training, using non-embedding parameters as a proxy for perplexity. We evaluate our method, dubbed Lightweight Transformer Search (LTS) on diverse devices from ARM CPUs to NVIDIA GPUs and two popular autoregressive Transformer backbones: GPT-2 and Transformer-XL. Results show that the perplexity of 16-layer GPT-2 and Transformer-XL can be achieved with up to 1 . 6 \u00d7 , 2 . 5 \u00d7 faster runtime and 1 . 3 \u00d7 , 2 \u00d7 lower peak memory utilization. LTS extracts the pareto-frontier in under 3 hours, running on a commodity laptop. We effectively remove the carbon footprint of training during search for hundreds of GPU hours, offering a strong simple baseline for future NAS methods in autoregressive language modeling.",
    "authors": [
        "Mojan Javaheripi",
        "S. Shah",
        "Subhabrata Mukherjee",
        "T. L. Religa",
        "C. C. T. Mendes",
        "Gustavo de Rosa",
        "S\u00e9bastien Bubeck",
        "F. Koushanfar",
        "Debadeepta Dey"
    ],
    "venue": "arXiv.org",
    "year": 2022,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "This work rigorously shows that the pareto-frontier of perplexity versus different hardware costs such as latency and memory can be found without need for any model training, using non-embedding parameters as a proxy for perplexity."
    },
    "citationCount": 16,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}