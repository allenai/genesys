{
    "acronym": "b7f55157891adcfde294488d8b5b349246e5ded5",
    "title": "Mapping APIs in Dynamic-typed Programs by Leveraging Transfer Learning",
    "seed_ids": [
        "bert",
        "4b27f18bff43d605805c92696a979714ced0b805",
        "49cf6a22a5dac5bc98b653534af65ffa0bc0e76d",
        "0fe2636446cd686830da3d971b31a004d6094b3c",
        "75352cc69a29bd5fc411e0e79737cb96b6309161"
    ],
    "s2id": "b7f55157891adcfde294488d8b5b349246e5ded5",
    "abstract": "Application Programming Interface (API) migration is a common task for adapting software across different programming languages and platforms, where manually constructing the mapping relations between APIs is indeed time-consuming and error-prone. To facilitate this process, many automated API mapping approaches have been proposed. However, existing approaches were mainly designed and evaluated for mapping APIs of statically-typed languages, while their performance on dynamically-typed languages remains unexplored. In this article, we conduct the first extensive study to explore existing API mapping approaches\u2019 performance for mapping APIs in dynamically-typed languages, for which we have manually constructed a high-quality dataset. According to the empirical results, we have summarized several insights. In particular, the source code implementations of APIs can significantly improve the effectiveness of API mapping. However, due to the confidentiality policy, they may not be available in practice. To overcome this, we propose a novel API mapping approach, named Matl, which leverages the transfer learning technique to learn the semantic embeddings of source code implementations from large-scale open-source repositories and then transfers the learned model to facilitate the mapping of APIs. In this way, Matl can produce more accurate API embedding of its functionality for more effective mapping without knowing the source code of the APIs. To evaluate the performance of Matl, we have conducted an extensive study by comparing Matl with state-of-the-art approaches. The results demonstrate that Matl is indeed effective as it improves the state-of-the-art approach by at least 18.36% for mapping APIs of dynamically-typed language and by 30.77% for mapping APIs of the statically-typed language.",
    "authors": [
        "Zhenfei Huang",
        "Junjie Chen",
        "Jiajun Jiang",
        "Yihua Liang",
        "Hanmo You",
        "Fengjie Li"
    ],
    "venue": "ACM Transactions on Software Engineering and Methodology",
    "year": 2024,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "An extensive study to explore existing API mapping approaches\u2019 performance for mapping APIs in dynamically-typed languages and proposes a novel API mapping approach, named Matl, which leverages the transfer learning technique to learn the semantic embeddings of source code implementations from large-scale open-source repositories and then transfers the learned model to facilitate the mapping of APIs."
    },
    "citationCount": 0,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}