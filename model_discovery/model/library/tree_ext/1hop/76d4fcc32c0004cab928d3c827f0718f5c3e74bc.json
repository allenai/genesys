{
    "acronym": "76d4fcc32c0004cab928d3c827f0718f5c3e74bc",
    "title": "Neural Shape Compiler: A Unified Framework for Transforming between Text, Point Cloud, and Program",
    "seed_ids": [
        "sparsetransformer",
        "69144d537f90f214d5b07a7c79121d16afd7da16",
        "c57293882b2561e1ba03017902df9fc2f289dea2",
        "c10075b3746a9f3dd5811970e93c8ca3ad39b39d",
        "2cd605106b88c85d7d8b865b1ef0f8c8293debf1"
    ],
    "s2id": "76d4fcc32c0004cab928d3c827f0718f5c3e74bc",
    "abstract": "3D shapes have complementary abstractions from low-level geometry to part-based hierarchies to languages, which convey different levels of information. This paper presents a unified framework to translate between pairs of shape abstractions: $\\textit{Text}$ $\\Longleftrightarrow$ $\\textit{Point Cloud}$ $\\Longleftrightarrow$ $\\textit{Program}$. We propose $\\textbf{Neural Shape Compiler}$ to model the abstraction transformation as a conditional generation process. It converts 3D shapes of three abstract types into unified discrete shape code, transforms each shape code into code of other abstract types through the proposed $\\textit{ShapeCode Transformer}$, and decodes them to output the target shape abstraction. Point Cloud code is obtained in a class-agnostic way by the proposed $\\textit{Point}$VQVAE. On Text2Shape, ShapeGlot, ABO, Genre, and Program Synthetic datasets, Neural Shape Compiler shows strengths in $\\textit{Text}$ $\\Longrightarrow$ $\\textit{Point Cloud}$, $\\textit{Point Cloud}$ $\\Longrightarrow$ $\\textit{Text}$, $\\textit{Point Cloud}$ $\\Longrightarrow$ $\\textit{Program}$, and Point Cloud Completion tasks. Additionally, Neural Shape Compiler benefits from jointly training on all heterogeneous data and tasks.",
    "authors": [
        "Tiange Luo",
        "Honglak Lee",
        "Justin Johnson"
    ],
    "venue": "Trans. Mach. Learn. Res.",
    "year": 2022,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "A unified framework to translate between pairs of shape abstractions, which converts 3D shapes of three abstract types into unified discrete shape code, transforms each shape code into code of other abstract types through the proposed ShapeCode Transformer, and decodes them to output the target shape abstraction."
    },
    "citationCount": 3,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}