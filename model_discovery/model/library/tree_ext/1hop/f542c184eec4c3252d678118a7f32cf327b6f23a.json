{
    "acronym": "f542c184eec4c3252d678118a7f32cf327b6f23a",
    "title": "A New Era in Software Security: Towards Self-Healing Software via Large Language Models and Formal Verification",
    "seed_ids": [
        "gpt",
        "391e60875d7878d70c7d9917c554c3a91d453978",
        "6386fe0f81d834c5f10e5b58902031b11ceb1016",
        "bb58f2f63888456a3e04a56a18996ab8dacdb257",
        "470754e17de89081f63dde4719922fe9b63251d5",
        "e37155d21818513bd40d64ee212099aac82bd6f8",
        "db783c480faf87b38e8806d4ef455dfde6e335aa",
        "7a1069dafaeb484e22f2473d5545f1e45ce30656"
    ],
    "s2id": "f542c184eec4c3252d678118a7f32cf327b6f23a",
    "abstract": "This paper introduces an innovative approach that combines Large Language Models (LLMs) with Formal Verification strategies for automatic software vulnerability repair. Initially, we employ Bounded Model Checking (BMC) to identify vulnerabilities and extract counterexamples. These counterexamples are supported by mathematical proofs and the stack trace of the vulnerabilities. Using a specially designed prompt, we combine the original source code with the identified vulnerability, including its stack trace and counterexample that specifies the line number and error type. This combined information is then fed into an LLM, which is instructed to attempt to fix the code. The new code is subsequently verified again using BMC to ensure the fix succeeded. We present the ESBMC-AI framework as a proof of concept, leveraging the well-recognized and industry-adopted Efficient SMT-based Context-Bounded Model Checker (ESBMC) and a pre-trained transformer model to detect and fix errors in C programs, particularly in critical software components. We evaluated our approach on 50,000 C programs randomly selected from the FormAI dataset with their respective vulnerability classifications. Our results demonstrate ESBMC-AI's capability to automate the detection and repair of issues such as buffer overflow, arithmetic overflow, and pointer dereference failures with high accuracy. ESBMC-AI is a pioneering initiative, integrating LLMs with BMC techniques, offering potential integration into the continuous integration and deployment (CI/CD) process within the software development lifecycle.",
    "authors": [
        "Yiannis Charalambous",
        "Norbert Tihanyi",
        "Ridhi Jain",
        "Youcheng Sun",
        "M. Ferrag",
        "L. Cordeiro"
    ],
    "venue": "arXiv.org",
    "year": 2023,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "The ESBMC-AI framework is presented as a proof of concept, leveraging the well-recognized and industry-adopted Efficient SMT-based Context-Bounded Model Checker and a pre-trained transformer model to detect and fix errors in C programs, particularly in critical software components."
    },
    "citationCount": 30,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}