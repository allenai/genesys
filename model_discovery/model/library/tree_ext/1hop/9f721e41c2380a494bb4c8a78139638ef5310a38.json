{
    "acronym": "9f721e41c2380a494bb4c8a78139638ef5310a38",
    "title": "RAF: Holistic Compilation for Deep Learning Model Training",
    "seed_ids": [
        "gpt2",
        "8323c591e119eb09b28b29fd6c7bc76bd889df7a",
        "9405cc0d6169988371b2755e573cc28650d14dfe"
    ],
    "s2id": "9f721e41c2380a494bb4c8a78139638ef5310a38",
    "abstract": "As deep learning is pervasive in modern applications, many deep learning frameworks are presented for deep learning practitioners to develop and train DNN models rapidly. Meanwhile, as training large deep learning models becomes a trend in recent years, the training throughput and memory footprint are getting crucial. Accordingly, optimizing training workloads with compiler optimizations is inevitable and getting more and more attentions. However, existing deep learning compilers (DLCs) mainly target inference and do not incorporate holistic optimizations, such as automatic differentiation and automatic mixed precision, in training workloads. In this paper, we present RAF, a deep learning compiler for training. Unlike existing DLCs, RAF accepts a forward model and in-house generates a training graph. Accordingly, RAF is able to systematically consolidate graph optimizations for performance, memory and distributed training. In addition, to catch up to the state-of-the-art performance with hand-crafted kernel libraries as well as tensor compilers, RAF proposes an operator dialect mechanism to seamlessly integrate all possible kernel implementations. We demonstrate that by in-house training graph generation and operator dialect mechanism, we are able to perform holistic optimizations and achieve either better training throughput or larger batch size against PyTorch (eager and torchscript mode), XLA, and DeepSpeed for popular transformer models on GPUs.",
    "authors": [
        "Cody Hao Yu",
        "Haozheng Fan",
        "Guangtai Huang",
        "Zhen Jia",
        "Yizhi Liu",
        "Jie Wang",
        "Zach Zheng",
        "Yuan Zhou",
        "Haichen Shen",
        "Junru Shao",
        "Mu Li",
        "Yida Wang"
    ],
    "venue": "arXiv.org",
    "year": 2023,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "RAF, a deep learning compiler for training is presented and it is demonstrated that by in-house training graph generation and operator dialect mechanism, it is able to perform holistic optimizations and achieve either better training throughput or larger batch size against PyTorch, XLA, and DeepSpeed for popular transformer models on GPUs."
    },
    "citationCount": 1,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}