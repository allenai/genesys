{
    "acronym": "54155c2977a977bf129849455dcae3a2b79b3f41",
    "title": "Simple Hardware-Efficient Long Convolutions for Sequence Modeling",
    "seed_ids": [
        "hippo",
        "httyh",
        "flashattn",
        "a7d68b1702af08ce4dbbf2cd0b083e744ae5c6be",
        "5a77b508302771fc083bf24e0bcda8553c9b5421",
        "31b27d90c2d5732386dd3a46a7d8336c0555c6fe",
        "240300b1da360f22bf0b82c6817eacebba6deed4",
        "70e91e16eb321067d9402710e14a40cf28311f73",
        "6d7d141c75af752ffc0d8a6184cca3f9323d6c74",
        "eaef083b9d661f42cc0d89d9d8156218f33a91d9",
        "a30ac45ac5b7bd2148d3fb80ee7f3c29724e3170",
        "ca444821352a4bd91884413d8070446e2960715a",
        "87c5b281fa43e6f27191b20a8dd694eda1126336",
        "9226ae23b95b3f6891461e086d910ffeb7ac448a",
        "8326dba15f6b8ee6e43c23eea3265a05e59e8135",
        "fbaa944e73644ce12ea4a0ac8ffb64c3280f3aff",
        "0e802c0739771acf70e60d59c2df51cd7e8c50c0",
        "90b21dbad8969b74d704eed15a3d98722a88e464",
        "ac2618b2ce5cdcf86f9371bcca98bc5e37e46f51",
        "1f133158a8973fb33fea188f20517cd7e69bfe7f",
        "1d5c8c6e5a774d2fef8d92bd28670a6345a97f7a",
        "35a9749df07a2ab97c51af4d260b095b00da7676",
        "7e9ff94476f41041c75e253e84f487db00e9c861",
        "b1ac64438608aac1a8dfd0adf8fec8c6220f6bfd"
    ],
    "s2id": "54155c2977a977bf129849455dcae3a2b79b3f41",
    "abstract": "State space models (SSMs) have high performance on long sequence modeling but require sophisticated initialization techniques and specialized implementations for high quality and runtime performance. We study whether a simple alternative can match SSMs in performance and efficiency: directly learning long convolutions over the sequence. We find that a key requirement to achieving high performance is keeping the convolution kernels smooth. We find that simple interventions--such as squashing the kernel weights--result in smooth kernels and recover SSM performance on a range of tasks including the long range arena, image classification, language modeling, and brain data modeling. Next, we develop FlashButterfly, an IO-aware algorithm to improve the runtime performance of long convolutions. FlashButterfly appeals to classic Butterfly decompositions of the convolution to reduce GPU memory IO and increase FLOP utilization. FlashButterfly speeds up convolutions by 2.2$\\times$, and allows us to train on Path256, a challenging task with sequence length 64K, where we set state-of-the-art by 29.1 points while training 7.2$\\times$ faster than prior work. Lastly, we introduce an extension to FlashButterfly that learns the coefficients of the Butterfly decomposition, increasing expressivity without increasing runtime. Using this extension, we outperform a Transformer on WikiText103 by 0.2 PPL with 30% fewer parameters.",
    "authors": [
        "Daniel Y. Fu",
        "Elliot L. Epstein",
        "Eric N. D. Nguyen",
        "A. Thomas",
        "Michael Zhang",
        "Tri Dao",
        "A. Rudra",
        "Christopher R\u00e9"
    ],
    "venue": "International Conference on Machine Learning",
    "year": 2023,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "It is found that simple interventions--such as squashing the kernel weights--result in smooth kernels and recover SSM performance on a range of tasks including the long range arena, image classification, language modeling, and brain data modeling."
    },
    "citationCount": 34,
    "influentialCitationCount": 3,
    "code": null,
    "description": null,
    "url": null
}