{
    "acronym": "4eb219f7ab3602677899aa8382e7cf13901fcef6",
    "title": "Error-Sensitive Evaluation for Ordinal Target Variables",
    "seed_ids": [
        "performer",
        "3fbf6339273c50b04e886fa9bd4ad18c952a683d"
    ],
    "s2id": "4eb219f7ab3602677899aa8382e7cf13901fcef6",
    "abstract": "Product reviews and satisfaction surveys seek customer feedback in the form of ranked scales. In these settings, widely used evaluation metrics including F1 and accuracy ignore the rank in the responses (e.g., \u2018very likely\u2019 is closer to \u2018likely\u2019 than \u2018not at all\u2019). In this paper, we hypothesize that the order of class values is important for evaluating classi\ufb01ers on ordinal target variables and should not be disregarded. To test this hypothesis, we compared Multi-class Classi-\ufb01cation (MC) and Ordinal Regression (OR) by applying OR and MC to benchmark tasks involving ordinal target variables us-ing the same underlying model architecture. Experimental results show that while MC outperformed OR for some datasets in accuracy and F1, OR is signi\ufb01cantly better than MC for minimizing the error between prediction and target for all benchmarks, as revealed by error-sensitive metrics, e.g. mean-squared error (MSE) and Spearman correlation. Our \ufb01ndings motivate the need to establish consistent, error-sensitive metrics for evaluating benchmarks with ordinal target variables, and we hope that it stimulates interest in exploring alternative losses for ordinal problems.",
    "authors": [
        "David Chen",
        "Maury Courtland",
        "Adam Faulkner",
        "Aysu Ezen-Can"
    ],
    "venue": "EVAL4NLP",
    "year": 2021,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "This paper hypothesizes that the order of class values is important for evaluating classi\ufb01ers on ordinal target variables and should not be disregarded, and compares Multi-class Classi-\ufb01cation (MC) and Ordinal Regression (OR) by applying OR and MC to benchmark tasks involving ordinal target variables us-ing the same underlying model architecture."
    },
    "citationCount": 1,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}