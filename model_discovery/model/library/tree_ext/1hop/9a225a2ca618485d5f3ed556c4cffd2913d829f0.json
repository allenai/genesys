{
    "acronym": "9a225a2ca618485d5f3ed556c4cffd2913d829f0",
    "title": "Prompting LLM to Enforce and Validate CIS Critical Security Control",
    "seed_ids": [
        "gpt3"
    ],
    "s2id": "9a225a2ca618485d5f3ed556c4cffd2913d829f0",
    "abstract": "Proper security control enforcement reduces the attack surface and protects the organizations against attacks. Organizations like NIST and CIS (Center for Internet Security) provide critical security controls (CSCs) as a guideline to enforce cyber security. Automated enforcement and measurability mechanisms for these CSCs still need to be developed. Analyzing the implementations of security products to validate security control enforcement is non-trivial. Moreover, manually analyzing and developing measures and metrics to monitor, and implementing those monitoring mechanisms are resource-intensive tasks and massively dependent on the security analyst's expertise and knowledge. To tackle those problems, we use large language models (LLMs) as a knowledge base and reasoner to extract measures, metrics, and monitoring mechanism implementation steps from security control descriptions to reduce the dependency on security analysts. Our approach used few-shot learning with chain-of-thought (CoT) prompting to generate measures and metrics and generated knowledge prompting for metrics implementation. Our evaluation shows that prompt engineering to extract measures, metrics, and monitoring implementation mechanisms can reduce dependency on humans and semi-automate the extraction process. We also demonstrate metric implementation steps using generated knowledge prompting with LLMs.",
    "authors": [
        "Mohiuddin Ahmed",
        "Jinpeng Wei",
        "Ehab Al-Shaer"
    ],
    "venue": "ACM Symposium on Access Control Models and Technologies",
    "year": 2024,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "This work used few-shot learning with chain-of-thought (CoT) prompting to generate measures and metrics and generated knowledge prompting for metrics implementation and demonstrates metric implementation steps using generated knowledge prompting with LLMs."
    },
    "citationCount": 0,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}