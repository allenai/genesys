{
    "acronym": "054e307c1edf4b28137ffcbce980fe81f0647d20",
    "title": "Finetuning Pretrained Transformers into RNNs",
    "seed_ids": [
        "rfa",
        "lineartransformer",
        "9ed25f101f19ea735ca300848948ed64064b97ca",
        "2cd605106b88c85d7d8b865b1ef0f8c8293debf1",
        "2fd10e095b146f99da8cdc6ff58720e2e8fca36d",
        "0822f8d7e6a72a65e65f147d3a8d8fccd485da40",
        "7e5709d81558d3ef4265de29ea75931afeb1f2dd",
        "6f68e1bb253925d8431588555d3010419f322e04",
        "c0b79e6a5fd88ef13aa4780df5aae0aaa6b2be87",
        "07a9f47885cae97efb7b4aa109392128532433da",
        "d27669c82faf78ea08cceaa0a171b540cccc304d",
        "925ad2897d1b5decbea320d07e99afa9110e09b2",
        "2573af4e13d9a5dddb257d22cd38a600528d9a8b",
        "657329c633709dd1ac34a30d57341b186b1a47c2",
        "34a4e6818d680875ff0bef9a76de0376118446d1",
        "c6c734e16f66fbfcefac7625cc64599e83292c1e",
        "f51497f463566581874c941353dd9d80069c5b77",
        "2cf3bd0cc1382f35384e259d99e4f9744eeaed28",
        "395de0bd3837fdf4b4b5e5f04835bcc69c279481",
        "8cef9900c04d7f661c08f4b5b1ed4337ace042a3",
        "f4238bd2385a52413ccbacfd9e409a650235bd13",
        "faadd7d081c8d67e8c2567e8a5579e46cd6b2280",
        "2ff74d426e712522030057624510c03713fa77ba",
        "9405cc0d6169988371b2755e573cc28650d14dfe"
    ],
    "s2id": "054e307c1edf4b28137ffcbce980fe81f0647d20",
    "abstract": "Transformers have outperformed recurrent neural networks (RNNs) in natural language generation. But this comes with a signifi- cant computational cost, as the attention mechanism\u2019s complexity scales quadratically with sequence length. Efficient transformer variants have received increasing interest in recent works. Among them, a linear-complexity recurrent variant has proven well suited for autoregressive generation. It approximates the softmax attention with randomized or heuristic feature maps, but can be difficult to train and may yield suboptimal accuracy. This work aims to convert a pretrained transformer into its efficient recurrent counterpart, improving efficiency while maintaining accuracy. Specifically, we propose a swap-then-finetune procedure: in an off-the-shelf pretrained transformer, we replace the softmax attention with its linear-complexity recurrent alternative and then finetune. With a learned feature map, our approach provides an improved tradeoff between efficiency and accuracy over the standard transformer and other recurrent variants. We also show that the finetuning process has lower training cost relative to training these recurrent variants from scratch. As many models for natural language tasks are increasingly dependent on large-scale pretrained transformers, this work presents a viable approach to improving inference efficiency without repeating the expensive pretraining process.",
    "authors": [
        "Jungo Kasai",
        "Hao Peng",
        "Yizhe Zhang",
        "Dani Yogatama",
        "Gabriel Ilharco",
        "Nikolaos Pappas",
        "Yi Mao",
        "Weizhu Chen",
        "Noah A. Smith"
    ],
    "venue": "Conference on Empirical Methods in Natural Language Processing",
    "year": 2021,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "This work proposes a swap-then-finetune procedure, which in an off-the-shelf pretrained transformer, replaces the softmax attention with its linear-complexity recurrent alternative and then finetune, and provides an improved tradeoff between efficiency and accuracy over the standard transformer and other recurrent variants."
    },
    "citationCount": 47,
    "influentialCitationCount": 7,
    "code": null,
    "description": null,
    "url": null
}