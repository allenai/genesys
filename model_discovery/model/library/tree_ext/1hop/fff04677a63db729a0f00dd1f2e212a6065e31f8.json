{
    "acronym": "fff04677a63db729a0f00dd1f2e212a6065e31f8",
    "title": "Adaptive Reinforcement Learning Planning: Harnessing Large Language Models for Complex Information Extraction",
    "seed_ids": [
        "bert",
        "be7403b7358b74785b90035cb7285308ec34b37d",
        "5fc1a3a49e8f1d106118b69d1d6be3b6caa23da0",
        "d766bffc357127e0dc86dd69561d5aeb520d6f4c"
    ],
    "s2id": "fff04677a63db729a0f00dd1f2e212a6065e31f8",
    "abstract": "Existing research on large language models (LLMs) shows that they can solve information extraction tasks through multi-step planning. However, their extraction behavior on complex sentences and tasks is unstable, emerging issues such as false positives and missing elements. We observe that decomposing complex extraction tasks and extracting them step by step can effectively improve LLMs' performance, and the extraction orders of entities significantly affect the final results of LLMs. This paper proposes a two-stage multi-step method for LLM-based information extraction and adopts the RL framework to execute the multi-step planning. We regard sequential extraction as a Markov decision process, build an LLM-based extraction environment, design a decision module to adaptively provide the optimal order for sequential entity extraction on different sentences, and utilize the DDQN algorithm to train the decision model. We also design the rewards and evaluation metrics suitable for the extraction results of LLMs. We conduct extensive experiments on multiple public datasets to demonstrate the effectiveness of our method in improving the information extraction capabilities of LLMs.",
    "authors": [
        "Zepeng Ding",
        "Ruiyang Ke",
        "Wenhao Huang",
        "Guochao Jiang",
        "Yanda Li",
        "Deqing Yang",
        "Yanghua Xiao",
        "Jiaqing Liang"
    ],
    "venue": "arXiv.org",
    "year": 2024,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "A two-stage multi-step method for LLM-based information extraction and adopts the RL framework to execute the multi-step planning and designs a decision module to adaptively provide the optimal order for sequential entity extraction on different sentences, and utilizes the DDQN algorithm to train the decision model."
    },
    "citationCount": 0,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}