{
    "acronym": "629bc57782bb4326a3eb5f89314e350729c5f417",
    "title": "AdapterSoup: Weight Averaging to Improve Generalization of Pretrained Language Models",
    "seed_ids": [
        "gpt2",
        "7c3a735c7567b5b54581ba09612db4d18a5dacac",
        "29ddc1f43f28af7c846515e32cc167bc66886d0c",
        "9405cc0d6169988371b2755e573cc28650d14dfe"
    ],
    "s2id": "629bc57782bb4326a3eb5f89314e350729c5f417",
    "abstract": "Pretrained language models (PLMs) are trained on massive corpora, but often need to specialize to specific domains. A parameter-efficient adaptation method suggests training an adapter for each domain on the task of language modeling. This leads to good in-domain scores but can be impractical for domain- or resource-restricted settings. A solution is to use a related-domain adapter for the novel domain at test time. In this paper, we introduce AdapterSoup, an approach that performs weight-space averaging of adapters trained on different domains. Our approach is embarrassingly parallel: first, we train a set of domain-specific adapters; then, for each novel domain, we determine which adapters should be averaged at test time. We present extensive experiments showing that AdapterSoup consistently improves performance to new domains without extra training. We also explore weight averaging of adapters trained on the same domain with different hyper-parameters, and show that it preserves the performance of a PLM on new domains while obtaining strong in-domain results. We explore various approaches for choosing which adapters to combine, such as text clustering and semantic similarity. We find that using clustering leads to the most competitive results on novel domains.",
    "authors": [
        "Alexandra Chronopoulou",
        "Matthew E. Peters",
        "Alexander M. Fraser",
        "Jesse Dodge"
    ],
    "venue": "Findings",
    "year": 2023,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "This paper introduces AdapterSoup, an approach that performs weight-space averaging of adapters trained on different domains, and explores various approaches for choosing which adapters to combine, such as text clustering and semantic similarity."
    },
    "citationCount": 38,
    "influentialCitationCount": 5,
    "code": null,
    "description": null,
    "url": null
}