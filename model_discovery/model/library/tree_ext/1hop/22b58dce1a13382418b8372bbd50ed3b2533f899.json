{
    "acronym": "22b58dce1a13382418b8372bbd50ed3b2533f899",
    "title": "ByteTransformer: A High-Performance Transformer Boosted for Variable-Length Inputs",
    "seed_ids": [
        "flashattn",
        "87c5b281fa43e6f27191b20a8dd694eda1126336",
        "8323c591e119eb09b28b29fd6c7bc76bd889df7a",
        "e0c6abdbdecf04ffac65c440da77fb9d66bb474c",
        "690edf44e8739fd80bdfb76f40c9a4a222f3bba8",
        "9405cc0d6169988371b2755e573cc28650d14dfe"
    ],
    "s2id": "22b58dce1a13382418b8372bbd50ed3b2533f899",
    "abstract": "Transformers have become keystone models in natural language processing over the past decade. They have achieved great popularity in deep learning applications, but the increasing sizes of the parameter spaces required by transformer models generate a commensurate need to accelerate performance. Natural language processing problems are also routinely faced with variable-length sequences, as word counts commonly vary among sentences. Existing deep learning frameworks pad variable-length sequences to a maximal length, which adds significant memory and computational overhead. In this paper, we present ByteTransformer, a high-performance transformer boosted for variable-length inputs. We propose a padding-free algorithm that liberates the entire transformer from redundant computations on zero padded tokens. In addition to algorithmic-level optimization, we provide architecture-aware optimizations for transformer functional modules, especially the performance-critical algorithm Multi-Head Attention (MHA). Experimental results on an NVIDIA A100 GPU with variable-length sequence inputs validate that our fused MHA outperforms PyTorch by 6.13x. The end-to-end performance of ByteTransformer for a forward BERT transformer surpasses state-of-the-art transformer frameworks, such as PyTorch JIT, TensorFlow XLA, Tencent TurboTransformer, Microsoft DeepSpeed-Inference and NVIDIA FasterTransformer, by 87%, 131%, 138%, 74% and 55%, respectively. We also demonstrate the general applicability of our optimization methods to other BERT-like models, including ALBERT, DistilBERT, and DeBERTa.",
    "authors": [
        "Yujia Zhai",
        "Chengquan Jiang",
        "Leyuan Wang",
        "Xiaoying Jia",
        "Shang Zhang",
        "Zizhong Chen",
        "Xin Liu",
        "Yibo Zhu"
    ],
    "venue": "IEEE International Parallel and Distributed Processing Symposium",
    "year": 2022,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "The end-to-end performance of ByteTransformer for a forward BERT transformer surpasses state-of-the-art transformer frameworks, such as PyTorch JIT, TensorFlow XLA, Tencent TurboTransformer, Microsoft DeepSpeed-Inference and NVIDIA FasterTransformer by 87%, 131, 138, 74% and 55%, respectively."
    },
    "citationCount": 23,
    "influentialCitationCount": 2,
    "code": null,
    "description": null,
    "url": null
}