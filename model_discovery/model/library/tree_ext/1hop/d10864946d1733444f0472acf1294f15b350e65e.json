{
    "acronym": "d10864946d1733444f0472acf1294f15b350e65e",
    "title": "Continual Transformers: Redundancy-Free Attention for Online Inference",
    "seed_ids": [
        "performer",
        "reformer",
        "7509c66a666e2e3f14bc8676b969b945ee6e136f",
        "6fa1cfc4f97f03a8485692418c7aa1a06c574a85",
        "3fbf6339273c50b04e886fa9bd4ad18c952a683d",
        "7e5709d81558d3ef4265de29ea75931afeb1f2dd",
        "c0b79e6a5fd88ef13aa4780df5aae0aaa6b2be87",
        "925ad2897d1b5decbea320d07e99afa9110e09b2",
        "faadd7d081c8d67e8c2567e8a5579e46cd6b2280",
        "fb507ada871d1e8c29e376dbf7b7879689aa89f9"
    ],
    "s2id": "d10864946d1733444f0472acf1294f15b350e65e",
    "abstract": "Transformers in their common form are inherently limited to operate on whole token sequences rather than on one token at a time. Consequently, their use during online inference on time-series data entails considerable redundancy due to the overlap in successive token sequences. In this work, we propose novel formulations of the Scaled Dot-Product Attention, which enable Transformers to perform efficient online token-by-token inference on a continual input stream. Importantly, our modifications are purely to the order of computations, while the outputs and learned weights are identical to those of the original Transformer Encoder. We validate our Continual Transformer Encoder with experiments on the THUMOS14, TVSeries and GTZAN datasets with remarkable results: Our Continual one- and two-block architectures reduce the floating point operations per prediction by up to 63x and 2.6x, respectively, while retaining predictive performance.",
    "authors": [
        "Lukas Hedegaard",
        "Arian Bakhtiarnia",
        "A. Iosifidis"
    ],
    "venue": "International Conference on Learning Representations",
    "year": 2022,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "Novel formulations of the Scaled Dot-Product Attention are proposed, which enable Transformers to perform efficient online token-by-token inference on a continual input stream and reduce the floating point operations per prediction by up to 63x and 2.6x, respectively."
    },
    "citationCount": 8,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}