{
    "acronym": "0a6bc37a07a37e3573d36e10cc11669eca0ff903",
    "title": "Execution-based Code Generation using Deep Reinforcement Learning",
    "seed_ids": [
        "gpt2",
        "7ef58be19ee9cf8d683d7209b650094df3902377",
        "7a1069dafaeb484e22f2473d5545f1e45ce30656",
        "d766bffc357127e0dc86dd69561d5aeb520d6f4c",
        "0646bb09db4d1ba24150e69b71edcd4aff691b3c",
        "0fe2636446cd686830da3d971b31a004d6094b3c",
        "9e3b52669d81dbf0d638a5f5d1d537c7087195d6",
        "9405cc0d6169988371b2755e573cc28650d14dfe"
    ],
    "s2id": "0a6bc37a07a37e3573d36e10cc11669eca0ff903",
    "abstract": "The utilization of programming language (PL) models, pre-trained on large-scale code corpora, as a means of automating software engineering processes has demonstrated considerable potential in streamlining various code generation tasks such as code completion, code translation, and program synthesis. However, current approaches mainly rely on supervised fine-tuning objectives borrowed from text generation, neglecting unique sequence-level characteristics of code, including but not limited to compilability as well as syntactic and functional correctness. To address this limitation, we propose PPOCoder, a new framework for code generation that synergistically combines pre-trained PL models with Proximal Policy Optimization (PPO) which is a widely used deep reinforcement learning technique. By utilizing non-differentiable feedback from code execution and structure alignment, PPOCoder seamlessly integrates external code-specific knowledge into the model optimization process. It's important to note that PPOCoder is a task-agnostic and model-agnostic framework that can be used across different code generation tasks and PLs. Extensive experiments on three code generation tasks demonstrate the effectiveness of our proposed approach compared to SOTA methods, achieving significant improvements in compilation success rates and functional correctness across different PLs.",
    "authors": [
        "Parshin Shojaee",
        "Aneesh Jain",
        "Sindhu Tipirneni",
        "Chandan K. Reddy"
    ],
    "venue": "arXiv.org",
    "year": 2023,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "PPOCoder is a new framework for code generation that synergistically combines pre-trained PL models with Proximal Policy Optimization (PPO) which is a widely used deep reinforcement learning technique, achieving significant improvements in compilation success rates and functional correctness across different PLs."
    },
    "citationCount": 26,
    "influentialCitationCount": 4,
    "code": null,
    "description": null,
    "url": null
}