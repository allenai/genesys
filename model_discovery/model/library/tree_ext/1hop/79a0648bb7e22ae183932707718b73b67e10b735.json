{
    "acronym": "79a0648bb7e22ae183932707718b73b67e10b735",
    "title": "MoRA: High-Rank Updating for Parameter-Efficient Fine-Tuning",
    "seed_ids": [
        "roformer",
        "241eefc1bb11e693e0fef6977a65a0a822fb8f5e",
        "83edcfbb206ddad38a971d605da09390604248ea",
        "66c10bf1f11bc1b2d92204d8f8391d087f6de1c4",
        "29ddc1f43f28af7c846515e32cc167bc66886d0c"
    ],
    "s2id": "79a0648bb7e22ae183932707718b73b67e10b735",
    "abstract": "Low-rank adaptation is a popular parameter-efficient fine-tuning method for large language models. In this paper, we analyze the impact of low-rank updating, as implemented in LoRA. Our findings suggest that the low-rank updating mechanism may limit the ability of LLMs to effectively learn and memorize new knowledge. Inspired by this observation, we propose a new method called MoRA, which employs a square matrix to achieve high-rank updating while maintaining the same number of trainable parameters. To achieve it, we introduce the corresponding non-parameter operators to reduce the input dimension and increase the output dimension for the square matrix. Furthermore, these operators ensure that the weight can be merged back into LLMs, which makes our method can be deployed like LoRA. We perform a comprehensive evaluation of our method across five tasks: instruction tuning, mathematical reasoning, continual pretraining, memory and pretraining. Our method outperforms LoRA on memory-intensive tasks and achieves comparable performance on other tasks.",
    "authors": [
        "Ting Jiang",
        "Shaohan Huang",
        "Shengyue Luo",
        "Zihan Zhang",
        "Haizhen Huang",
        "Furu Wei",
        "Weiwei Deng",
        "Feng Sun",
        "Qi Zhang",
        "Deqing Wang",
        "Fuzhen Zhuang"
    ],
    "venue": "arXiv.org",
    "year": 2024,
    "tldr": {
        "model": "tldr@v2.0.0",
        "text": "A new method is proposed called MoRA, which employs a square matrix to achieve high-rank updating while maintaining the same number of trainable parameters, and introduces the corresponding non-parameter operators to reduce the input dimension and increase the output dimension for the square matrix."
    },
    "citationCount": 6,
    "influentialCitationCount": 0,
    "code": null,
    "description": null,
    "url": null
}