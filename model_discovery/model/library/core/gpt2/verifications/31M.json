{
    "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,50.451114654541016,6.9568,15.625,0.0009090909090909091,9.776317847645862e-05,1722534124.5538027,10\n1,53.902891397476196,2.7361,10.125,0.0009992719899580363,0.00019552635695291724,1722534128.0055795,20\n2,57.37646460533142,0.3823,0.337890625,0.0009967584360559632,0.0002932895354293759,1722534131.4791527,30\n3,60.848392724990845,0.1195,0.030029296875,0.0009924603880480543,0.0003910527139058345,1722534134.9510808,40\n4,64.30420303344727,0.0956,0.01397705078125,0.000986395013693702,0.0004888158923822931,1722534138.406891,50\n5,67.93649172782898,0.0946,0.01116943359375,0.0009785865400111593,0.0005865790708587518,1722534142.0391798,60\n6,71.38744449615479,0.0912,0.0089111328125,0.0009690661565071874,0.0006843422493352104,1722534145.4901326,70\n7,74.84159970283508,0.093,0.00811767578125,0.0009578718905963289,0.000782105427811669,1722534148.9442878,80\n8,78.29468202590942,0.0917,0.01055908203125,0.0009450484557074187,0.0008798686062881277,1722534152.39737,90\n9,81.75448751449585,0.0868,0.00885009765625,0.0009306470726840471,0.0009776317847645863,1722534155.8571756,100\n10,85.35125946998596,0.0848,0.0120849609375,0.0009147252651923545,0.0010753949632410448,1722534159.4539475,110\n11,88.80148196220398,0.0827,0.00933837890625,0.0008973466299533654,0.0011731581417175035,1722534162.90417,120\n12,92.26300406455994,0.0819,0.033935546875,0.0008785805827176256,0.0012709213201939622,1722534166.3656921,130\n13,95.71715593338013,0.0803,0.01422119140625,0.0008585020809967994,0.0013686844986704207,1722534169.819844,140\n14,99.17439579963684,0.0799,0.01275634765625,0.0008371913246597271,0.0014664476771468794,1722534173.2770839,150\n15,102.76746439933777,0.0786,0.0096435546875,0.000814733435588852,0.001564210855623338,1722534176.8701525,160\n16,106.22021555900574,0.0772,0.0087890625,0.000791218117676573,0.0016619740340997966,1722534180.3229036,170\n17,109.67207360267639,0.0756,0.01324462890625,0.0007667392985196064,0.0017597372125762554,1722534183.7747617,180\n18,113.13500928878784,0.0755,0.01544189453125,0.0007413947542425377,0.0018575003910527139,1722534187.2376974,190\n19,116.6011393070221,0.0739,0.0206298828125,0.0007152857189491406,0.0019552635695291726,1722534190.7038274,200\n20,120.20827126502991,0.0727,0.0242919921875,0.0006885164803614365,0.0020530267480056313,1722534194.3109593,210\n21,123.66412901878357,0.0718,0.0478515625,0.0006611939632616394,0.0021507899264820896,1722534197.766817,220\n22,127.1255292892456,0.0707,0.0400390625,0.0006334273024008499,0.0022485531049585483,1722534201.2282174,230\n23,130.58379650115967,0.0694,0.0201416015625,0.0006053274065804378,0.002346316283435007,1722534204.6864846,240\n24,134.04314637184143,0.0682,0.01495361328125,0.000577006515647308,0.0024440794619114657,1722534208.1458344,250\n25,137.63196778297424,0.0701,0.0162353515625,0.0005485777521725485,0.0025418426403879244,1722534211.7346559,260\n26,141.08844232559204,0.0657,0.01434326171875,0.0005201546696042034,0.0026396058188643827,1722534215.1911304,270\n27,144.54994320869446,0.0664,0.0196533203125,0.0004918507986989847,0.0027373689973408414,1722534218.6526313,280\n28,148.00999665260315,0.0656,0.01409912109375,0.00046377919404462156,0.0028351321758173,1722534222.1126847,290\n29,151.46996903419495,0.0637,0.01239013671875,0.0004360519824841774,0.002932895354293759,1722534225.572657,300\n30,155.08049774169922,0.066,0.03076171875,0.0004087799152460739,0.0030306585327702176,1722534229.1831858,310\n31,158.54184246063232,0.064,0.022216796875,0.000382071925568752,0.003128421711246676,1722534232.6445305,320\n32,162.00687074661255,0.0622,0.0189208984375,0.00035603469358695884,0.0032261848897231346,1722534236.1095588,330\n33,165.46939063072205,0.0643,0.0179443359375,0.0003307722202176417,0.0033239480681995933,1722534239.5720787,340\n34,168.9244282245636,0.0615,0.017333984375,0.0003063854117474828,0.003421711246676052,1722534243.0271163,350\n35,172.54557943344116,0.0632,0.0167236328125,0.0002829716767813636,0.0035194744251525107,1722534246.6482675,360\n36,176.00755190849304,0.0602,0.01806640625,0.0002606245371616727,0.003617237603628969,1722534250.11024,370\n37,179.48191618919373,0.0633,0.01263427734375,0.00023943325441256992,0.0037150007821054277,1722534253.5846043,380\n38,182.9543092250824,0.061,0.0169677734375,0.00021948247320130468,0.0038127639605818864,1722534257.0569973,390\n39,186.42018961906433,0.0625,0.0159912109375,0.00020085188324071756,0.003910527139058345,1722534260.5228777,400\n40,190.05556201934814,0.0616,0.0169677734375,0.00018361590098339166,0.004008290317534803,1722534264.15825,410\n41,193.51923775672913,0.0631,0.019775390625,0.0001678433723788697,0.004106053496011263,1722534267.6219258,420\n42,196.98480033874512,0.0615,0.01416015625,0.00015359729788121676,0.004203816674487721,1722534271.0874884,430\n43,200.44584941864014,0.0608,0.0157470703125,0.0001409345808053356,0.004301579852964179,1722534274.5485375,440\n44,203.91634249687195,0.0592,0.01239013671875,0.00012990580003717904,0.004399343031440638,1722534278.0190306,450\n45,207.5359833240509,0.0626,0.01470947265625,0.00012055500800572655,0.004497106209917097,1722534281.6386714,460\n46,211.01589727401733,0.0622,0.012939453125,0.00011291955472368824,0.004594869388393556,1722534285.1185853,470\n47,214.480530500412,0.062,0.0146484375,0.0001070299385997735,0.004692632566870014,1722534288.5832186,480\n48,217.96684074401855,0.0581,0.011474609375,0.00010290968461842692,0.004790395745346472,1722534292.0695288,490\n49,221.43328738212585,0.0634,0.01458740234375,0.00010057525037362081,0.0048881589238229314,1722534295.5359755,500\n50,225.07744789123535,,,,0.004966369466604098,1722534299.180136,508\n",
    "system_metrics.csv": "GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),GPU 2 Time Spent Accessing Memory (%),GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),_runtime,GPU 1 Memory Allocated (%),GPU 4 Memory Allocated (%),GPU 1 Utilization (%),Process CPU Utilization (%),Process CPU Threads In Use,System Memory Utilization (%),GPU 4 Utilization (%),GPU 2 Memory Allocated (%),GPU 5 Utilization (%),Process Memory In Use (non-swap) (%),GPU 5 Memory Allocated (%),GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),GPU 0 Memory Allocated (%)\n0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2,61.045089,1.2,1.2,0.0,0.01,23,22.81,0.07,1.2,0.0,0.14,1.2,0.0,0.0,3.25\n79.33,73.07,80.6,75.73,74.8,74.2,73.87,51.62,91.046956,51.63,51.62,75.27,0.0,23,24.91,77.6,51.63,75.73,0.14,51.43,75.93,81.6,55.22\n98.6,99.13,99.27,99.47,99.13,99.0,98.4,58.16,121.048804,58.16,58.16,98.4,0.0,23,25.4,98.53,58.16,99.27,0.14,58.12,99.6,98.07,61.76\n,,,,,,,,151.050925,,,,0.0,23,25.49,,,,0.14,,,,\n97.93,98.73,98.73,97.13,98.8,99.13,98.53,58.16,181.052586,58.16,58.16,98.6,0.0,23,25.55,98.4,58.16,98.67,0.14,58.12,98.0,98.07,61.76\n98.0,98.8,98.87,98.47,98.73,98.8,98.53,58.16,211.054399,58.16,58.16,98.27,0.0,23,25.65,98.47,58.16,98.53,0.14,58.12,98.8,98.47,61.76\n91.93,90.2,91.8,92.47,90.0,89.73,90.33,58.16,230.539669,58.16,58.16,91.67,0.0,23,24.99,91.6,58.16,92.4,0.14,58.12,92.2,91.47,57.96\n",
    "trainer_state.json": {
        "best_metric": null,
        "best_model_checkpoint": null,
        "epoch": 0.004966369466604098,
        "eval_steps": 500,
        "global_step": 508,
        "is_hyper_param_search": false,
        "is_local_process_zero": true,
        "is_world_process_zero": true,
        "logging_steps": 10,
        "max_steps": 508,
        "num_input_tokens_seen": 0,
        "num_train_epochs": 1,
        "save_steps": 50,
        "total_flos": 8056083411107840.0,
        "train_batch_size": 42,
        "trial_name": null,
        "trial_params": null
    },
    "eval_results.json": {
        "results": {
            "arc_challenge": {
                "alias": "arc_challenge",
                "acc,none": 0.2363481228668942,
                "acc_stderr,none": 0.012414960524301846,
                "acc_norm,none": 0.29266211604095566,
                "acc_norm_stderr,none": 0.013295916103619418
            },
            "arc_easy": {
                "alias": "arc_easy",
                "acc,none": 0.25462962962962965,
                "acc_stderr,none": 0.008939407288589402,
                "acc_norm,none": 0.26052188552188554,
                "acc_norm_stderr,none": 0.009006435890336591
            },
            "blimp_adjunct_island_filtered": {
                "alias": "blimp_adjunct_island_filtered",
                "acc,none": 0.8987068965517241,
                "acc_stderr,none": 0.009909668093748315
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "alias": "blimp_anaphor_gender_agreement_filtered",
                "acc,none": 0.8774459320288363,
                "acc_stderr,none": 0.010529025585900175
            },
            "blimp_anaphor_number_agreement_filtered": {
                "alias": "blimp_anaphor_number_agreement_filtered",
                "acc,none": 0.7690655209452202,
                "acc_stderr,none": 0.013819253572052423
            },
            "blimp_animate_subject_passive_filtered": {
                "alias": "blimp_animate_subject_passive_filtered",
                "acc,none": 0.6480446927374302,
                "acc_stderr,none": 0.015972668523689074
            },
            "blimp_animate_subject_trans_filtered": {
                "alias": "blimp_animate_subject_trans_filtered",
                "acc,none": 0.7854821235102926,
                "acc_stderr,none": 0.013518684633707985
            },
            "blimp_causative_filtered": {
                "alias": "blimp_causative_filtered",
                "acc,none": 0.48655256723716384,
                "acc_stderr,none": 0.01748645800755678
            },
            "blimp_complex_NP_island_filtered": {
                "alias": "blimp_complex_NP_island_filtered",
                "acc,none": 0.8297872340425532,
                "acc_stderr,none": 0.012928587664897916
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                "acc,none": 0.8465783664459161,
                "acc_stderr,none": 0.011979883502863874
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                "acc,none": 0.7471022128556375,
                "acc_stderr,none": 0.01411751823441339
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_1_filtered",
                "acc,none": 0.6393972012917115,
                "acc_stderr,none": 0.015762529918483148
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_2_filtered",
                "acc,none": 0.6713211600429646,
                "acc_stderr,none": 0.015403150778140275
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                "acc,none": 0.6240822320117474,
                "acc_stderr,none": 0.018574318121400105
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                "acc,none": 0.7329268292682927,
                "acc_stderr,none": 0.015459786434157722
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                "acc,none": 0.6567481402763018,
                "acc_stderr,none": 0.015486096046643609
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                "acc,none": 0.7075208913649025,
                "acc_stderr,none": 0.016988595717276712
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                "acc,none": 0.7380952380952381,
                "acc_stderr,none": 0.015179131336292
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                "acc,none": 0.6152197213290461,
                "acc_stderr,none": 0.015937256800024748
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "alias": "blimp_distractor_agreement_relational_noun_filtered",
                "acc,none": 0.6624365482233503,
                "acc_stderr,none": 0.016856309087021727
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "alias": "blimp_distractor_agreement_relative_clause_filtered",
                "acc,none": 0.6946039035591275,
                "acc_stderr,none": 0.015614954544435013
            },
            "blimp_drop_argument_filtered": {
                "alias": "blimp_drop_argument_filtered",
                "acc,none": 0.7478260869565218,
                "acc_stderr,none": 0.014324933961332442
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "alias": "blimp_ellipsis_n_bar_1_filtered",
                "acc,none": 0.9064837905236908,
                "acc_stderr,none": 0.01028743752536648
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "alias": "blimp_ellipsis_n_bar_2_filtered",
                "acc,none": 0.40942028985507245,
                "acc_stderr,none": 0.017099018693427618
            },
            "blimp_existential_there_object_raising_filtered": {
                "alias": "blimp_existential_there_object_raising_filtered",
                "acc,none": 0.7770935960591133,
                "acc_stderr,none": 0.014614619431861329
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "alias": "blimp_existential_there_quantifiers_1_filtered",
                "acc,none": 0.7559139784946236,
                "acc_stderr,none": 0.01409288102548762
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "alias": "blimp_existential_there_quantifiers_2_filtered",
                "acc,none": 0.6619099890230515,
                "acc_stderr,none": 0.01568176499144036
            },
            "blimp_existential_there_subject_raising_filtered": {
                "alias": "blimp_existential_there_subject_raising_filtered",
                "acc,none": 0.7716450216450217,
                "acc_stderr,none": 0.013816981332688412
            },
            "blimp_expletive_it_object_raising_filtered": {
                "alias": "blimp_expletive_it_object_raising_filtered",
                "acc,none": 0.6521739130434783,
                "acc_stderr,none": 0.017299286218785563
            },
            "blimp_inchoative_filtered": {
                "alias": "blimp_inchoative_filtered",
                "acc,none": 0.47719298245614034,
                "acc_stderr,none": 0.01709183899203617
            },
            "blimp_intransitive_filtered": {
                "alias": "blimp_intransitive_filtered",
                "acc,none": 0.6082949308755761,
                "acc_stderr,none": 0.0165778095434218
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "alias": "blimp_irregular_past_participle_adjectives_filtered",
                "acc,none": 0.8002081165452654,
                "acc_stderr,none": 0.012904904056547336
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "alias": "blimp_irregular_past_participle_verbs_filtered",
                "acc,none": 0.7377919320594479,
                "acc_stderr,none": 0.014338217513107114
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                "acc,none": 0.6281094527363185,
                "acc_stderr,none": 0.017055618055272007
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                "acc,none": 0.7107623318385651,
                "acc_stderr,none": 0.015189755226339434
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "alias": "blimp_left_branch_island_echo_question_filtered",
                "acc,none": 0.8606124604012672,
                "acc_stderr,none": 0.011260825348523996
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "alias": "blimp_left_branch_island_simple_question_filtered",
                "acc,none": 0.7802313354363828,
                "acc_stderr,none": 0.013434848583541034
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                "acc,none": 0.18191603875134554,
                "acc_stderr,none": 0.012663695121646425
            },
            "blimp_npi_present_1_filtered": {
                "alias": "blimp_npi_present_1_filtered",
                "acc,none": 0.7733773377337734,
                "acc_stderr,none": 0.013893269660709466
            },
            "blimp_npi_present_2_filtered": {
                "alias": "blimp_npi_present_2_filtered",
                "acc,none": 0.6400437636761488,
                "acc_stderr,none": 0.015885258903903767
            },
            "blimp_only_npi_licensor_present_filtered": {
                "alias": "blimp_only_npi_licensor_present_filtered",
                "acc,none": 0.5861678004535147,
                "acc_stderr,none": 0.016593391671968227
            },
            "blimp_only_npi_scope_filtered": {
                "alias": "blimp_only_npi_scope_filtered",
                "acc,none": 0.5149342891278376,
                "acc_stderr,none": 0.017285146118145907
            },
            "blimp_passive_1_filtered": {
                "alias": "blimp_passive_1_filtered",
                "acc,none": 0.6404761904761904,
                "acc_stderr,none": 0.01656663648628687
            },
            "blimp_passive_2_filtered": {
                "alias": "blimp_passive_2_filtered",
                "acc,none": 0.6290143964562569,
                "acc_stderr,none": 0.016084425455926518
            },
            "blimp_principle_A_c_command_filtered": {
                "alias": "blimp_principle_A_c_command_filtered",
                "acc,none": 0.8742071881606766,
                "acc_stderr,none": 0.010787459912014187
            },
            "blimp_principle_A_case_1_filtered": {
                "alias": "blimp_principle_A_case_1_filtered",
                "acc,none": 0.6677631578947368,
                "acc_stderr,none": 0.015605436964293104
            },
            "blimp_principle_A_case_2_filtered": {
                "alias": "blimp_principle_A_case_2_filtered",
                "acc,none": 0.5846994535519126,
                "acc_stderr,none": 0.016299508073016434
            },
            "blimp_principle_A_domain_1_filtered": {
                "alias": "blimp_principle_A_domain_1_filtered",
                "acc,none": 0.9332603938730853,
                "acc_stderr,none": 0.008259577805268982
            },
            "blimp_principle_A_domain_2_filtered": {
                "alias": "blimp_principle_A_domain_2_filtered",
                "acc,none": 0.8306010928961749,
                "acc_stderr,none": 0.012407333425466266
            },
            "blimp_principle_A_domain_3_filtered": {
                "alias": "blimp_principle_A_domain_3_filtered",
                "acc,none": 0.69394261424017,
                "acc_stderr,none": 0.01503139488939541
            },
            "blimp_principle_A_reconstruction_filtered": {
                "alias": "blimp_principle_A_reconstruction_filtered",
                "acc,none": 0.8572905894519132,
                "acc_stderr,none": 0.011253866815974858
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                "acc,none": 0.702247191011236,
                "acc_stderr,none": 0.015336351667973874
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                "acc,none": 0.5608465608465608,
                "acc_stderr,none": 0.01615266468129336
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                "acc,none": 0.8411316648531012,
                "acc_stderr,none": 0.012065055467602646
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "alias": "blimp_sentential_negation_npi_scope_filtered",
                "acc,none": 0.8737083811710677,
                "acc_stderr,none": 0.011261879849740789
            },
            "blimp_sentential_subject_island_filtered": {
                "alias": "blimp_sentential_subject_island_filtered",
                "acc,none": 0.927159209157128,
                "acc_stderr,none": 0.0083874292118385
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "alias": "blimp_superlative_quantifiers_1_filtered",
                "acc,none": 0.8998978549540347,
                "acc_stderr,none": 0.009597295631521152
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "alias": "blimp_superlative_quantifiers_2_filtered",
                "acc,none": 0.6805273833671399,
                "acc_stderr,none": 0.014856671025639446
            },
            "blimp_supplement_hypernym": {
                "alias": "blimp_supplement_hypernym",
                "acc,none": 0.7102137767220903,
                "acc_stderr,none": 0.01564355364365602
            },
            "blimp_supplement_qa_congruence_easy": {
                "alias": "blimp_supplement_qa_congruence_easy",
                "acc,none": 0.421875,
                "acc_stderr,none": 0.06222035653913551
            },
            "blimp_supplement_qa_congruence_tricky": {
                "alias": "blimp_supplement_qa_congruence_tricky",
                "acc,none": 0.41818181818181815,
                "acc_stderr,none": 0.03851716319398393
            },
            "blimp_supplement_subject_aux_inversion": {
                "alias": "blimp_supplement_subject_aux_inversion",
                "acc,none": 0.8156193431600725,
                "acc_stderr,none": 0.006236924869022821
            },
            "blimp_supplement_turn_taking": {
                "alias": "blimp_supplement_turn_taking",
                "acc,none": 0.8464285714285714,
                "acc_stderr,none": 0.021584811872632052
            },
            "blimp_tough_vs_raising_1_filtered": {
                "alias": "blimp_tough_vs_raising_1_filtered",
                "acc,none": 0.3491561181434599,
                "acc_stderr,none": 0.015490778784694417
            },
            "blimp_tough_vs_raising_2_filtered": {
                "alias": "blimp_tough_vs_raising_2_filtered",
                "acc,none": 0.8739130434782608,
                "acc_stderr,none": 0.01094993234718188
            },
            "blimp_transitive_filtered": {
                "alias": "blimp_transitive_filtered",
                "acc,none": 0.618663594470046,
                "acc_stderr,none": 0.016495742393875048
            },
            "blimp_wh_island_filtered": {
                "alias": "blimp_wh_island_filtered",
                "acc,none": 0.7458333333333333,
                "acc_stderr,none": 0.01405953274929469
            },
            "blimp_wh_questions_object_gap_filtered": {
                "alias": "blimp_wh_questions_object_gap_filtered",
                "acc,none": 0.8009313154831199,
                "acc_stderr,none": 0.013631870965346193
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "alias": "blimp_wh_questions_subject_gap_filtered",
                "acc,none": 0.8730512249443207,
                "acc_stderr,none": 0.011115727685154144
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                "acc,none": 0.8704784130688448,
                "acc_stderr,none": 0.011476598775374288
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "alias": "blimp_wh_vs_that_no_gap_filtered",
                "acc,none": 0.8908246225319396,
                "acc_stderr,none": 0.010634307929656436
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                "acc,none": 0.912,
                "acc_stderr,none": 0.00958259291405637
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "alias": "blimp_wh_vs_that_with_gap_filtered",
                "acc,none": 0.7388465723612623,
                "acc_stderr,none": 0.014497851800575804
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                "acc,none": 0.7307692307692307,
                "acc_stderr,none": 0.014711959846310338
            },
            "cola": {
                "alias": "cola",
                "mcc,none": -0.015492463898443125,
                "mcc_stderr,none": 0.031099137586066947
            },
            "hellaswag": {
                "alias": "hellaswag",
                "acc,none": 0.25542720573590916,
                "acc_stderr,none": 0.0043520980829844305,
                "acc_norm,none": 0.2622983469428401,
                "acc_norm_stderr,none": 0.004389849907040297
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "alias": "inverse_scaling_hindsight_neglect_10shot",
                "acc,none": 0.5333333333333333,
                "acc_stderr,none": 0.028153858945648896,
                "acc_norm,none": 0.5333333333333333,
                "acc_norm_stderr,none": 0.028153858945648896
            },
            "inverse_scaling_into_the_unknown": {
                "alias": "inverse_scaling_into_the_unknown",
                "acc,none": 0.4994517543859649,
                "acc_stderr,none": 0.011710526169362594,
                "acc_norm,none": 0.4994517543859649,
                "acc_norm_stderr,none": 0.011710526169362594
            },
            "inverse_scaling_memo_trap": {
                "alias": "inverse_scaling_memo_trap",
                "acc,none": 0.5641025641025641,
                "acc_stderr,none": 0.01621680851368388,
                "acc_norm,none": 0.5384615384615384,
                "acc_norm_stderr,none": 0.01630329877250077
            },
            "inverse_scaling_modus_tollens": {
                "alias": "inverse_scaling_modus_tollens",
                "acc,none": 0.9967637540453075,
                "acc_stderr,none": 0.0016161564508218205,
                "acc_norm,none": 1.0,
                "acc_norm_stderr,none": 0.0
            },
            "inverse_scaling_neqa": {
                "alias": "inverse_scaling_neqa",
                "acc,none": 0.47,
                "acc_stderr,none": 0.02886365132641709,
                "acc_norm,none": 0.47,
                "acc_norm_stderr,none": 0.02886365132641709
            },
            "inverse_scaling_pattern_matching_suppression": {
                "alias": "inverse_scaling_pattern_matching_suppression",
                "acc,none": 0.4733893557422969,
                "acc_stderr,none": 0.013217279510321063,
                "acc_norm,none": 0.4796918767507003,
                "acc_norm_stderr,none": 0.013225116262673682
            },
            "inverse_scaling_quote_repetition": {
                "alias": "inverse_scaling_quote_repetition",
                "acc,none": 0.14,
                "acc_stderr,none": 0.020066778149077154,
                "acc_norm,none": 0.17333333333333334,
                "acc_norm_stderr,none": 0.021891255175071532
            },
            "inverse_scaling_redefine_math": {
                "alias": "inverse_scaling_redefine_math",
                "acc,none": 0.29777777777777775,
                "acc_stderr,none": 0.015251184707151122,
                "acc_norm,none": 0.29777777777777775,
                "acc_norm_stderr,none": 0.015251184707151122
            },
            "inverse_scaling_repetitive_algebra": {
                "alias": "inverse_scaling_repetitive_algebra",
                "acc,none": 0.46,
                "acc_stderr,none": 0.015768596914394382,
                "acc_norm,none": 0.455,
                "acc_norm_stderr,none": 0.01575510149834709
            },
            "inverse_scaling_sig_figs": {
                "alias": "inverse_scaling_sig_figs",
                "acc,none": 0.390247403933579,
                "acc_stderr,none": 0.0033745452848403757,
                "acc_norm,none": 0.390247403933579,
                "acc_norm_stderr,none": 0.0033745452848403757
            },
            "inverse_scaling_winobias_antistereotype": {
                "alias": "inverse_scaling_winobias_antistereotype",
                "acc,none": 0.5266990291262136,
                "acc_stderr,none": 0.024627994369735257,
                "acc_norm,none": 0.5266990291262136,
                "acc_norm_stderr,none": 0.024627994369735257
            },
            "lambada_openai": {
                "alias": "lambada_openai",
                "perplexity,none": 54379914.980162725,
                "perplexity_stderr,none": 5917956.9518325385,
                "acc,none": 0.0,
                "acc_stderr,none": 0.0
            },
            "mathqa": {
                "alias": "mathqa",
                "acc,none": 0.17755443886097153,
                "acc_stderr,none": 0.006995518962656065,
                "acc_norm,none": 0.18726968174204356,
                "acc_norm_stderr,none": 0.007141797917475823
            },
            "mnli": {
                "alias": "mnli",
                "acc,none": 0.3453897096281202,
                "acc_stderr,none": 0.004799799369481695
            },
            "mnli_mismatch": {
                "alias": "mnli_mismatch",
                "acc,none": 0.3412327095199349,
                "acc_stderr,none": 0.004781811948253183
            },
            "mrpc": {
                "alias": "mrpc",
                "acc,none": 0.3553921568627451,
                "acc_stderr,none": 0.02372490639698966
            },
            "openbookqa": {
                "alias": "openbookqa",
                "acc,none": 0.152,
                "acc_stderr,none": 0.016071982367911748,
                "acc_norm,none": 0.254,
                "acc_norm_stderr,none": 0.01948659680164337
            },
            "piqa": {
                "alias": "piqa",
                "acc,none": 0.5244831338411317,
                "acc_stderr,none": 0.011651830225709977,
                "acc_norm,none": 0.5016322089227421,
                "acc_norm_stderr,none": 0.011665762007194876
            },
            "qa4mre_2011": {
                "alias": "qa4mre_2011",
                "acc,none": 0.10833333333333334,
                "acc_stderr,none": 0.028491075150158,
                "acc_norm,none": 0.15,
                "acc_norm_stderr,none": 0.03273268353539888
            },
            "qa4mre_2012": {
                "alias": "qa4mre_2012",
                "acc,none": 0.15625,
                "acc_stderr,none": 0.02879508360159146,
                "acc_norm,none": 0.25,
                "acc_norm_stderr,none": 0.03434014098717226
            },
            "qa4mre_2013": {
                "alias": "qa4mre_2013",
                "acc,none": 0.22183098591549297,
                "acc_stderr,none": 0.024697605755352688,
                "acc_norm,none": 0.17253521126760563,
                "acc_norm_stderr,none": 0.02246055137318425
            },
            "qnli": {
                "alias": "qnli",
                "acc,none": 0.5141863444993593,
                "acc_stderr,none": 0.006762686893704952
            },
            "qqp": {
                "alias": "qqp",
                "acc,none": 0.6084095968340342,
                "acc_stderr,none": 0.00242754644724861
            },
            "rte": {
                "alias": "rte",
                "acc,none": 0.5054151624548736,
                "acc_stderr,none": 0.030094698123239966
            },
            "sciq": {
                "alias": "sciq",
                "acc,none": 0.18,
                "acc_stderr,none": 0.01215515313551196,
                "acc_norm,none": 0.199,
                "acc_norm_stderr,none": 0.01263164908309918
            },
            "scrolls_contractnli": {
                "alias": "scrolls_contractnli",
                "acc,none": 0.40790742526518803,
                "acc_stderr,none": 0.015268477560836932,
                "acc_norm,none": 0.40790742526518803,
                "acc_norm_stderr,none": 0.015268477560836932,
                "em,none": 40.790742526518805,
                "em_stderr,none": 1.5268477560837095
            },
            "scrolls_quality": {
                "alias": "scrolls_quality",
                "acc,none": 0.24352828379674019,
                "acc_stderr,none": 0.009399787200707754,
                "acc_norm,none": 0.27277085330776607,
                "acc_norm_stderr,none": 0.0097539739154447,
                "em,none": 27.277085330776607,
                "em_stderr,none": 0.9753973915444677
            },
            "squad_completion": {
                "alias": "squad_completion",
                "contains,none": 0.0030160857908847183,
                "contains_stderr,none": "N/A"
            },
            "sst2": {
                "alias": "sst2",
                "acc,none": 0.4873853211009174,
                "acc_stderr,none": 0.016936460912454994
            },
            "swag": {
                "alias": "swag",
                "acc,none": 0.26846945916225134,
                "acc_stderr,none": 0.0031332453026281584,
                "acc_norm,none": 0.25362391282615215,
                "acc_norm_stderr,none": 0.003076129961422009
            },
            "tinyGSM8k": {
                "alias": "tinyGSM8k",
                "exact_match,strict-match": 0.005531037620360234,
                "exact_match_stderr,strict-match": "N/A",
                "exact_match,flexible-extract": 0.005531037620360234,
                "exact_match_stderr,flexible-extract": "N/A"
            },
            "tinyMMLU": {
                "alias": "tinyMMLU",
                "acc_norm,none": 0.2764738933544063,
                "acc_norm_stderr,none": "N/A"
            },
            "tinyTruthfulQA": {
                "alias": "tinyTruthfulQA",
                "acc,none": 0.5239794706652217,
                "acc_stderr,none": "N/A"
            },
            "winogrande": {
                "alias": "winogrande",
                "acc,none": 0.5138121546961326,
                "acc_stderr,none": 0.014047122916440412
            },
            "wnli": {
                "alias": "wnli",
                "acc,none": 0.4647887323943662,
                "acc_stderr,none": 0.0596130578497224
            },
            "wsc273": {
                "alias": "wsc273",
                "acc,none": 0.5164835164835165,
                "acc_stderr,none": 0.030300474035576595
            }
        },
        "group_subtasks": {
            "arc_challenge": [],
            "arc_easy": [],
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
            "blimp_sentential_negation_npi_licensor_present_filtered": [],
            "blimp_left_branch_island_simple_question_filtered": [],
            "blimp_npi_present_2_filtered": [],
            "blimp_principle_A_domain_3_filtered": [],
            "blimp_sentential_subject_island_filtered": [],
            "blimp_existential_there_quantifiers_1_filtered": [],
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
            "blimp_determiner_noun_agreement_2_filtered": [],
            "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
            "blimp_superlative_quantifiers_2_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
            "blimp_wh_vs_that_with_gap_filtered": [],
            "blimp_inchoative_filtered": [],
            "blimp_transitive_filtered": [],
            "blimp_animate_subject_passive_filtered": [],
            "blimp_passive_1_filtered": [],
            "blimp_anaphor_gender_agreement_filtered": [],
            "blimp_adjunct_island_filtered": [],
            "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
            "blimp_animate_subject_trans_filtered": [],
            "blimp_irregular_past_participle_verbs_filtered": [],
            "blimp_determiner_noun_agreement_irregular_1_filtered": [],
            "blimp_principle_A_reconstruction_filtered": [],
            "blimp_only_npi_scope_filtered": [],
            "blimp_anaphor_number_agreement_filtered": [],
            "blimp_existential_there_subject_raising_filtered": [],
            "blimp_principle_A_case_1_filtered": [],
            "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
            "blimp_causative_filtered": [],
            "blimp_ellipsis_n_bar_2_filtered": [],
            "blimp_intransitive_filtered": [],
            "blimp_wh_vs_that_no_gap_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
            "blimp_wh_island_filtered": [],
            "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
            "blimp_wh_questions_subject_gap_long_distance_filtered": [],
            "blimp_determiner_noun_agreement_1_filtered": [],
            "blimp_npi_present_1_filtered": [],
            "blimp_passive_2_filtered": [],
            "blimp_existential_there_object_raising_filtered": [],
            "blimp_tough_vs_raising_1_filtered": [],
            "blimp_principle_A_case_2_filtered": [],
            "blimp_wh_questions_subject_gap_filtered": [],
            "blimp_expletive_it_object_raising_filtered": [],
            "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
            "blimp_existential_there_quantifiers_2_filtered": [],
            "blimp_tough_vs_raising_2_filtered": [],
            "blimp_distractor_agreement_relational_noun_filtered": [],
            "blimp_matrix_question_npi_licensor_present_filtered": [],
            "blimp_complex_NP_island_filtered": [],
            "blimp_superlative_quantifiers_1_filtered": [],
            "blimp_ellipsis_n_bar_1_filtered": [],
            "blimp_only_npi_licensor_present_filtered": [],
            "blimp_principle_A_domain_2_filtered": [],
            "blimp_sentential_negation_npi_scope_filtered": [],
            "blimp_principle_A_domain_1_filtered": [],
            "blimp_irregular_past_participle_adjectives_filtered": [],
            "blimp_drop_argument_filtered": [],
            "blimp_wh_questions_object_gap_filtered": [],
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
            "blimp_determiner_noun_agreement_irregular_2_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
            "blimp_distractor_agreement_relative_clause_filtered": [],
            "blimp_left_branch_island_echo_question_filtered": [],
            "blimp_principle_A_c_command_filtered": [],
            "blimp_supplement_hypernym": [],
            "blimp_supplement_turn_taking": [],
            "blimp_supplement_qa_congruence_easy": [],
            "blimp_supplement_qa_congruence_tricky": [],
            "blimp_supplement_subject_aux_inversion": [],
            "sst2": [],
            "mrpc": [],
            "mnli": [],
            "mnli_mismatch": [],
            "qnli": [],
            "wnli": [],
            "qqp": [],
            "rte": [],
            "cola": [],
            "hellaswag": [],
            "inverse_scaling_memo_trap": [],
            "inverse_scaling_sig_figs": [],
            "inverse_scaling_redefine_math": [],
            "inverse_scaling_neqa": [],
            "inverse_scaling_modus_tollens": [],
            "inverse_scaling_hindsight_neglect_10shot": [],
            "inverse_scaling_pattern_matching_suppression": [],
            "inverse_scaling_quote_repetition": [],
            "inverse_scaling_winobias_antistereotype": [],
            "inverse_scaling_into_the_unknown": [],
            "inverse_scaling_repetitive_algebra": [],
            "lambada_openai": [],
            "mathqa": [],
            "openbookqa": [],
            "piqa": [],
            "qa4mre_2011": [],
            "qa4mre_2013": [],
            "qa4mre_2012": [],
            "sciq": [],
            "scrolls_contractnli": [],
            "scrolls_quality": [],
            "squad_completion": [],
            "swag": [],
            "tinyGSM8k": [],
            "tinyMMLU": [],
            "tinyTruthfulQA": [],
            "winogrande": [],
            "wsc273": []
        },
        "configs": {
            "arc_challenge": {
                "task": "arc_challenge",
                "tag": [
                    "ai2_arc"
                ],
                "dataset_path": "allenai/ai2_arc",
                "dataset_name": "ARC-Challenge",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{choices.label.index(answerKey)}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "arc_easy": {
                "task": "arc_easy",
                "tag": [
                    "ai2_arc"
                ],
                "dataset_path": "allenai/ai2_arc",
                "dataset_name": "ARC-Easy",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{choices.label.index(answerKey)}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_adjunct_island_filtered": {
                "task": "blimp_adjunct_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "task": "blimp_anaphor_gender_agreement_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_anaphor_number_agreement_filtered": {
                "task": "blimp_anaphor_number_agreement_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_animate_subject_passive_filtered": {
                "task": "blimp_animate_subject_passive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_animate_subject_trans_filtered": {
                "task": "blimp_animate_subject_trans_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_causative_filtered": {
                "task": "blimp_causative_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_complex_NP_island_filtered": {
                "task": "blimp_complex_NP_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "task": "blimp_determiner_noun_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "task": "blimp_determiner_noun_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "task": "blimp_distractor_agreement_relational_noun_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "task": "blimp_distractor_agreement_relative_clause_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_drop_argument_filtered": {
                "task": "blimp_drop_argument_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "task": "blimp_ellipsis_n_bar_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "task": "blimp_ellipsis_n_bar_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_object_raising_filtered": {
                "task": "blimp_existential_there_object_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "task": "blimp_existential_there_quantifiers_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "task": "blimp_existential_there_quantifiers_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_subject_raising_filtered": {
                "task": "blimp_existential_there_subject_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_expletive_it_object_raising_filtered": {
                "task": "blimp_expletive_it_object_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_inchoative_filtered": {
                "task": "blimp_inchoative_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_intransitive_filtered": {
                "task": "blimp_intransitive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "task": "blimp_irregular_past_participle_adjectives_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "task": "blimp_irregular_past_participle_verbs_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "task": "blimp_left_branch_island_echo_question_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "task": "blimp_left_branch_island_simple_question_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "task": "blimp_matrix_question_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_npi_present_1_filtered": {
                "task": "blimp_npi_present_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_npi_present_2_filtered": {
                "task": "blimp_npi_present_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_only_npi_licensor_present_filtered": {
                "task": "blimp_only_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_only_npi_scope_filtered": {
                "task": "blimp_only_npi_scope_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_passive_1_filtered": {
                "task": "blimp_passive_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_passive_2_filtered": {
                "task": "blimp_passive_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_c_command_filtered": {
                "task": "blimp_principle_A_c_command_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_case_1_filtered": {
                "task": "blimp_principle_A_case_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_case_2_filtered": {
                "task": "blimp_principle_A_case_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_1_filtered": {
                "task": "blimp_principle_A_domain_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_2_filtered": {
                "task": "blimp_principle_A_domain_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_3_filtered": {
                "task": "blimp_principle_A_domain_3_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_reconstruction_filtered": {
                "task": "blimp_principle_A_reconstruction_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "task": "blimp_sentential_negation_npi_scope_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_subject_island_filtered": {
                "task": "blimp_sentential_subject_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "task": "blimp_superlative_quantifiers_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "task": "blimp_superlative_quantifiers_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_hypernym": {
                "task": "blimp_supplement_hypernym",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_qa_congruence_easy": {
                "task": "blimp_supplement_qa_congruence_easy",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_qa_congruence_tricky": {
                "task": "blimp_supplement_qa_congruence_tricky",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_subject_aux_inversion": {
                "task": "blimp_supplement_subject_aux_inversion",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_turn_taking": {
                "task": "blimp_supplement_turn_taking",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_tough_vs_raising_1_filtered": {
                "task": "blimp_tough_vs_raising_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_tough_vs_raising_2_filtered": {
                "task": "blimp_tough_vs_raising_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_transitive_filtered": {
                "task": "blimp_transitive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_island_filtered": {
                "task": "blimp_wh_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_object_gap_filtered": {
                "task": "blimp_wh_questions_object_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "task": "blimp_wh_questions_subject_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "task": "blimp_wh_vs_that_no_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "task": "blimp_wh_vs_that_with_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "cola": {
                "task": "cola",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "cola",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "mcc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "sentence",
                "metadata": {
                    "version": 1.0
                }
            },
            "hellaswag": {
                "task": "hellaswag",
                "tag": [
                    "multiple_choice"
                ],
                "dataset_path": "hellaswag",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                "doc_to_text": "{{query}}",
                "doc_to_target": "{{label}}",
                "doc_to_choice": "choices",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "task": "inverse_scaling_hindsight_neglect_10shot",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_into_the_unknown": {
                "task": "inverse_scaling_into_the_unknown",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/into-the-unknown",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_memo_trap": {
                "task": "inverse_scaling_memo_trap",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/memo-trap",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_modus_tollens": {
                "task": "inverse_scaling_modus_tollens",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/modus-tollens",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_neqa": {
                "task": "inverse_scaling_neqa",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/NeQA",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_pattern_matching_suppression": {
                "task": "inverse_scaling_pattern_matching_suppression",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/pattern-matching-suppression",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_quote_repetition": {
                "task": "inverse_scaling_quote_repetition",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/quote-repetition",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_redefine_math": {
                "task": "inverse_scaling_redefine_math",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/redefine-math",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_repetitive_algebra": {
                "task": "inverse_scaling_repetitive_algebra",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/repetitive-algebra",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_sig_figs": {
                "task": "inverse_scaling_sig_figs",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/sig-figs",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_winobias_antistereotype": {
                "task": "inverse_scaling_winobias_antistereotype",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "group": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "test_split": "test",
                "doc_to_text": "text",
                "doc_to_target": "target",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "lambada_openai": {
                "task": "lambada_openai",
                "tag": [
                    "lambada"
                ],
                "dataset_path": "EleutherAI/lambada_openai",
                "dataset_name": "default",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "test_split": "test",
                "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "perplexity",
                        "aggregation": "perplexity",
                        "higher_is_better": false
                    },
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "loglikelihood",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{text}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "mathqa": {
                "task": "mathqa",
                "tag": [
                    "math_word_problems"
                ],
                "dataset_path": "math_qa",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{Problem}}\nAnswer:",
                "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "mnli": {
                "task": "mnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mnli",
                "training_split": "train",
                "validation_split": "validation_matched",
                "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "Neither",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "mnli_mismatch": {
                "task": "mnli_mismatch",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mnli",
                "training_split": "train",
                "validation_split": "validation_mismatched",
                "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "Neither",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "mrpc": {
                "task": "mrpc",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mrpc",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "openbookqa": {
                "task": "openbookqa",
                "dataset_path": "openbookqa",
                "dataset_name": "main",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "question_stem",
                "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "question_stem",
                "metadata": {
                    "version": 1.0
                }
            },
            "piqa": {
                "task": "piqa",
                "dataset_path": "piqa",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Question: {{goal}}\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": "{{[sol1, sol2]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "goal",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2011": {
                "task": "qa4mre_2011",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2011.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2012": {
                "task": "qa4mre_2012",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2012.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2013": {
                "task": "qa4mre_2013",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2013.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qnli": {
                "task": "qnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "qnli",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "yes",
                    "no"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "qqp": {
                "task": "qqp",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "qqp",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2.0
                }
            },
            "rte": {
                "task": "rte",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "rte",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "sciq": {
                "task": "sciq",
                "dataset_path": "sciq",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                "doc_to_target": 3,
                "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{support}} {{question}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "scrolls_contractnli": {
                "task": "scrolls_contractnli",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2
                }
            },
            "scrolls_quality": {
                "task": "scrolls_quality",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2
                }
            },
            "squad_completion": {
                "task": "squad_completion",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "sst2": {
                "task": "sst2",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "sst2",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "negative",
                    "positive"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "swag": {
                "task": "swag",
                "dataset_path": "swag",
                "dataset_name": "regular",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "startphrase",
                "doc_to_target": "label",
                "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "tinyGSM8k": {
                "task": "tinyGSM8k",
                "dataset_path": "tinyBenchmarks/tinyGSM8k",
                "dataset_name": "main",
                "training_split": "train",
                "test_split": "test",
                "fewshot_split": "train",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{answer}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 5,
                "metric_list": [
                    {
                        "metric": "exact_match",
                        "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true,
                        "ignore_case": true,
                        "ignore_punctuation": false,
                        "regexes_to_ignore": [
                            ",",
                            "\\$",
                            "(?s).*#### ",
                            "\\.$"
                        ]
                    }
                ],
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "Question:",
                        "</s>",
                        "<|im_end|>"
                    ],
                    "do_sample": false,
                    "temperature": 0.0
                },
                "repeats": 1,
                "filter_list": [
                    {
                        "name": "strict-match",
                        "filter": [
                            {
                                "function": "regex",
                                "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                            },
                            {
                                "function": "take_first"
                            }
                        ]
                    },
                    {
                        "name": "flexible-extract",
                        "filter": [
                            {
                                "function": "regex",
                                "group_select": -1,
                                "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                            },
                            {
                                "function": "take_first"
                            }
                        ]
                    }
                ],
                "should_decontaminate": false,
                "metadata": {
                    "version": 0.0
                }
            },
            "tinyMMLU": {
                "task": "tinyMMLU",
                "dataset_path": "tinyBenchmarks/tinyMMLU",
                "dataset_name": "all",
                "test_split": "test",
                "fewshot_split": "dev",
                "doc_to_text": "{{input_formatted}}",
                "doc_to_target": "answer",
                "doc_to_choice": [
                    "A",
                    "B",
                    "C",
                    "D"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "fewshot_config": {
                    "sampler": "first_n"
                },
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc_norm",
                        "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0.0
                }
            },
            "tinyTruthfulQA": {
                "task": "tinyTruthfulQA",
                "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                "dataset_name": "multiple_choice",
                "validation_split": "validation",
                "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                "doc_to_target": 0,
                "doc_to_choice": "{{mc2_targets.choices}}",
                "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "question",
                "metadata": {
                    "version": 0.0
                }
            },
            "winogrande": {
                "task": "winogrande",
                "dataset_path": "winogrande",
                "dataset_name": "winogrande_xl",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "sentence",
                "metadata": {
                    "version": 1.0
                }
            },
            "wnli": {
                "task": "wnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "wnli",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "False",
                    "True"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2.0
                }
            },
            "wsc273": {
                "task": "wsc273",
                "dataset_path": "winograd_wsc",
                "dataset_name": "wsc273",
                "test_split": "test",
                "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                "doc_to_text": "label",
                "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "text",
                "metadata": {
                    "version": 1.0
                }
            }
        },
        "versions": {
            "arc_challenge": 1.0,
            "arc_easy": 1.0,
            "blimp_adjunct_island_filtered": 1.0,
            "blimp_anaphor_gender_agreement_filtered": 1.0,
            "blimp_anaphor_number_agreement_filtered": 1.0,
            "blimp_animate_subject_passive_filtered": 1.0,
            "blimp_animate_subject_trans_filtered": 1.0,
            "blimp_causative_filtered": 1.0,
            "blimp_complex_NP_island_filtered": 1.0,
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
            "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
            "blimp_determiner_noun_agreement_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
            "blimp_distractor_agreement_relational_noun_filtered": 1.0,
            "blimp_distractor_agreement_relative_clause_filtered": 1.0,
            "blimp_drop_argument_filtered": 1.0,
            "blimp_ellipsis_n_bar_1_filtered": 1.0,
            "blimp_ellipsis_n_bar_2_filtered": 1.0,
            "blimp_existential_there_object_raising_filtered": 1.0,
            "blimp_existential_there_quantifiers_1_filtered": 1.0,
            "blimp_existential_there_quantifiers_2_filtered": 1.0,
            "blimp_existential_there_subject_raising_filtered": 1.0,
            "blimp_expletive_it_object_raising_filtered": 1.0,
            "blimp_inchoative_filtered": 1.0,
            "blimp_intransitive_filtered": 1.0,
            "blimp_irregular_past_participle_adjectives_filtered": 1.0,
            "blimp_irregular_past_participle_verbs_filtered": 1.0,
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
            "blimp_left_branch_island_echo_question_filtered": 1.0,
            "blimp_left_branch_island_simple_question_filtered": 1.0,
            "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
            "blimp_npi_present_1_filtered": 1.0,
            "blimp_npi_present_2_filtered": 1.0,
            "blimp_only_npi_licensor_present_filtered": 1.0,
            "blimp_only_npi_scope_filtered": 1.0,
            "blimp_passive_1_filtered": 1.0,
            "blimp_passive_2_filtered": 1.0,
            "blimp_principle_A_c_command_filtered": 1.0,
            "blimp_principle_A_case_1_filtered": 1.0,
            "blimp_principle_A_case_2_filtered": 1.0,
            "blimp_principle_A_domain_1_filtered": 1.0,
            "blimp_principle_A_domain_2_filtered": 1.0,
            "blimp_principle_A_domain_3_filtered": 1.0,
            "blimp_principle_A_reconstruction_filtered": 1.0,
            "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
            "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
            "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
            "blimp_sentential_negation_npi_scope_filtered": 1.0,
            "blimp_sentential_subject_island_filtered": 1.0,
            "blimp_superlative_quantifiers_1_filtered": 1.0,
            "blimp_superlative_quantifiers_2_filtered": 1.0,
            "blimp_supplement_hypernym": 1.0,
            "blimp_supplement_qa_congruence_easy": 1.0,
            "blimp_supplement_qa_congruence_tricky": 1.0,
            "blimp_supplement_subject_aux_inversion": 1.0,
            "blimp_supplement_turn_taking": 1.0,
            "blimp_tough_vs_raising_1_filtered": 1.0,
            "blimp_tough_vs_raising_2_filtered": 1.0,
            "blimp_transitive_filtered": 1.0,
            "blimp_wh_island_filtered": 1.0,
            "blimp_wh_questions_object_gap_filtered": 1.0,
            "blimp_wh_questions_subject_gap_filtered": 1.0,
            "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
            "blimp_wh_vs_that_no_gap_filtered": 1.0,
            "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
            "blimp_wh_vs_that_with_gap_filtered": 1.0,
            "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
            "cola": 1.0,
            "hellaswag": 1.0,
            "inverse_scaling_hindsight_neglect_10shot": 0,
            "inverse_scaling_into_the_unknown": 0,
            "inverse_scaling_memo_trap": 0,
            "inverse_scaling_modus_tollens": 0,
            "inverse_scaling_neqa": 0,
            "inverse_scaling_pattern_matching_suppression": 0,
            "inverse_scaling_quote_repetition": 0,
            "inverse_scaling_redefine_math": 0,
            "inverse_scaling_repetitive_algebra": 0,
            "inverse_scaling_sig_figs": 0,
            "inverse_scaling_winobias_antistereotype": 0,
            "lambada_openai": 1.0,
            "mathqa": 1.0,
            "mnli": 1.0,
            "mnli_mismatch": 1.0,
            "mrpc": 1.0,
            "openbookqa": 1.0,
            "piqa": 1.0,
            "qa4mre_2011": 1.0,
            "qa4mre_2012": 1.0,
            "qa4mre_2013": 1.0,
            "qnli": 1.0,
            "qqp": 2.0,
            "rte": 1.0,
            "sciq": 1.0,
            "scrolls_contractnli": 2,
            "scrolls_quality": 2,
            "squad_completion": 0,
            "sst2": 1.0,
            "swag": 1.0,
            "tinyGSM8k": 0.0,
            "tinyMMLU": 0.0,
            "tinyTruthfulQA": 0.0,
            "winogrande": 1.0,
            "wnli": 2.0,
            "wsc273": 1.0
        },
        "n-shot": {
            "arc_challenge": 0,
            "arc_easy": 0,
            "blimp_adjunct_island_filtered": 0,
            "blimp_anaphor_gender_agreement_filtered": 0,
            "blimp_anaphor_number_agreement_filtered": 0,
            "blimp_animate_subject_passive_filtered": 0,
            "blimp_animate_subject_trans_filtered": 0,
            "blimp_causative_filtered": 0,
            "blimp_complex_NP_island_filtered": 0,
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
            "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
            "blimp_determiner_noun_agreement_1_filtered": 0,
            "blimp_determiner_noun_agreement_2_filtered": 0,
            "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
            "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
            "blimp_distractor_agreement_relational_noun_filtered": 0,
            "blimp_distractor_agreement_relative_clause_filtered": 0,
            "blimp_drop_argument_filtered": 0,
            "blimp_ellipsis_n_bar_1_filtered": 0,
            "blimp_ellipsis_n_bar_2_filtered": 0,
            "blimp_existential_there_object_raising_filtered": 0,
            "blimp_existential_there_quantifiers_1_filtered": 0,
            "blimp_existential_there_quantifiers_2_filtered": 0,
            "blimp_existential_there_subject_raising_filtered": 0,
            "blimp_expletive_it_object_raising_filtered": 0,
            "blimp_inchoative_filtered": 0,
            "blimp_intransitive_filtered": 0,
            "blimp_irregular_past_participle_adjectives_filtered": 0,
            "blimp_irregular_past_participle_verbs_filtered": 0,
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
            "blimp_left_branch_island_echo_question_filtered": 0,
            "blimp_left_branch_island_simple_question_filtered": 0,
            "blimp_matrix_question_npi_licensor_present_filtered": 0,
            "blimp_npi_present_1_filtered": 0,
            "blimp_npi_present_2_filtered": 0,
            "blimp_only_npi_licensor_present_filtered": 0,
            "blimp_only_npi_scope_filtered": 0,
            "blimp_passive_1_filtered": 0,
            "blimp_passive_2_filtered": 0,
            "blimp_principle_A_c_command_filtered": 0,
            "blimp_principle_A_case_1_filtered": 0,
            "blimp_principle_A_case_2_filtered": 0,
            "blimp_principle_A_domain_1_filtered": 0,
            "blimp_principle_A_domain_2_filtered": 0,
            "blimp_principle_A_domain_3_filtered": 0,
            "blimp_principle_A_reconstruction_filtered": 0,
            "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
            "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
            "blimp_sentential_negation_npi_licensor_present_filtered": 0,
            "blimp_sentential_negation_npi_scope_filtered": 0,
            "blimp_sentential_subject_island_filtered": 0,
            "blimp_superlative_quantifiers_1_filtered": 0,
            "blimp_superlative_quantifiers_2_filtered": 0,
            "blimp_supplement_hypernym": 0,
            "blimp_supplement_qa_congruence_easy": 0,
            "blimp_supplement_qa_congruence_tricky": 0,
            "blimp_supplement_subject_aux_inversion": 0,
            "blimp_supplement_turn_taking": 0,
            "blimp_tough_vs_raising_1_filtered": 0,
            "blimp_tough_vs_raising_2_filtered": 0,
            "blimp_transitive_filtered": 0,
            "blimp_wh_island_filtered": 0,
            "blimp_wh_questions_object_gap_filtered": 0,
            "blimp_wh_questions_subject_gap_filtered": 0,
            "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
            "blimp_wh_vs_that_no_gap_filtered": 0,
            "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
            "blimp_wh_vs_that_with_gap_filtered": 0,
            "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
            "cola": 0,
            "hellaswag": 0,
            "inverse_scaling_hindsight_neglect_10shot": 0,
            "inverse_scaling_into_the_unknown": 0,
            "inverse_scaling_memo_trap": 0,
            "inverse_scaling_modus_tollens": 0,
            "inverse_scaling_neqa": 0,
            "inverse_scaling_pattern_matching_suppression": 0,
            "inverse_scaling_quote_repetition": 0,
            "inverse_scaling_redefine_math": 0,
            "inverse_scaling_repetitive_algebra": 0,
            "inverse_scaling_sig_figs": 0,
            "inverse_scaling_winobias_antistereotype": 0,
            "lambada_openai": 0,
            "mathqa": 0,
            "mnli": 0,
            "mnli_mismatch": 0,
            "mrpc": 0,
            "openbookqa": 0,
            "piqa": 0,
            "qa4mre_2011": 0,
            "qa4mre_2012": 0,
            "qa4mre_2013": 0,
            "qnli": 0,
            "qqp": 0,
            "rte": 0,
            "sciq": 0,
            "scrolls_contractnli": 0,
            "scrolls_quality": 0,
            "squad_completion": 0,
            "sst2": 0,
            "swag": 0,
            "tinyGSM8k": 5,
            "tinyMMLU": 0,
            "tinyTruthfulQA": 0,
            "winogrande": 0,
            "wnli": 0,
            "wsc273": 0
        },
        "higher_is_better": {
            "arc_challenge": {
                "acc": true,
                "acc_norm": true
            },
            "arc_easy": {
                "acc": true,
                "acc_norm": true
            },
            "blimp_adjunct_island_filtered": {
                "acc": true
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "acc": true
            },
            "blimp_anaphor_number_agreement_filtered": {
                "acc": true
            },
            "blimp_animate_subject_passive_filtered": {
                "acc": true
            },
            "blimp_animate_subject_trans_filtered": {
                "acc": true
            },
            "blimp_causative_filtered": {
                "acc": true
            },
            "blimp_complex_NP_island_filtered": {
                "acc": true
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "acc": true
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "acc": true
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "acc": true
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "acc": true
            },
            "blimp_drop_argument_filtered": {
                "acc": true
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "acc": true
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "acc": true
            },
            "blimp_existential_there_object_raising_filtered": {
                "acc": true
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "acc": true
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "acc": true
            },
            "blimp_existential_there_subject_raising_filtered": {
                "acc": true
            },
            "blimp_expletive_it_object_raising_filtered": {
                "acc": true
            },
            "blimp_inchoative_filtered": {
                "acc": true
            },
            "blimp_intransitive_filtered": {
                "acc": true
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "acc": true
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "acc": true
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "acc": true
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "acc": true
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "acc": true
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "acc": true
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_npi_present_1_filtered": {
                "acc": true
            },
            "blimp_npi_present_2_filtered": {
                "acc": true
            },
            "blimp_only_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_only_npi_scope_filtered": {
                "acc": true
            },
            "blimp_passive_1_filtered": {
                "acc": true
            },
            "blimp_passive_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_c_command_filtered": {
                "acc": true
            },
            "blimp_principle_A_case_1_filtered": {
                "acc": true
            },
            "blimp_principle_A_case_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_1_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_3_filtered": {
                "acc": true
            },
            "blimp_principle_A_reconstruction_filtered": {
                "acc": true
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "acc": true
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "acc": true
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "acc": true
            },
            "blimp_sentential_subject_island_filtered": {
                "acc": true
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "acc": true
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "acc": true
            },
            "blimp_supplement_hypernym": {
                "acc": true
            },
            "blimp_supplement_qa_congruence_easy": {
                "acc": true
            },
            "blimp_supplement_qa_congruence_tricky": {
                "acc": true
            },
            "blimp_supplement_subject_aux_inversion": {
                "acc": true
            },
            "blimp_supplement_turn_taking": {
                "acc": true
            },
            "blimp_tough_vs_raising_1_filtered": {
                "acc": true
            },
            "blimp_tough_vs_raising_2_filtered": {
                "acc": true
            },
            "blimp_transitive_filtered": {
                "acc": true
            },
            "blimp_wh_island_filtered": {
                "acc": true
            },
            "blimp_wh_questions_object_gap_filtered": {
                "acc": true
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "acc": true
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "acc": true
            },
            "cola": {
                "mcc": true
            },
            "hellaswag": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_into_the_unknown": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_memo_trap": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_modus_tollens": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_neqa": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_pattern_matching_suppression": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_quote_repetition": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_redefine_math": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_repetitive_algebra": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_sig_figs": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_winobias_antistereotype": {
                "acc": true,
                "acc_norm": true
            },
            "lambada_openai": {
                "perplexity": false,
                "acc": true
            },
            "mathqa": {
                "acc": true,
                "acc_norm": true
            },
            "mnli": {
                "acc": true
            },
            "mnli_mismatch": {
                "acc": true
            },
            "mrpc": {
                "acc": true
            },
            "openbookqa": {
                "acc": true,
                "acc_norm": true
            },
            "piqa": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2011": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2012": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2013": {
                "acc": true,
                "acc_norm": true
            },
            "qnli": {
                "acc": true
            },
            "qqp": {
                "acc": true
            },
            "rte": {
                "acc": true
            },
            "sciq": {
                "acc": true,
                "acc_norm": true
            },
            "scrolls_contractnli": {
                "em": true,
                "acc": true,
                "acc_norm": true
            },
            "scrolls_quality": {
                "em": true,
                "acc": true,
                "acc_norm": true
            },
            "squad_completion": {
                "contains": true
            },
            "sst2": {
                "acc": true
            },
            "swag": {
                "acc": true,
                "acc_norm": true
            },
            "tinyGSM8k": {
                "exact_match": true
            },
            "tinyMMLU": {
                "acc_norm": true
            },
            "tinyTruthfulQA": {
                "acc": true
            },
            "winogrande": {
                "acc": true
            },
            "wnli": {
                "acc": true
            },
            "wsc273": {
                "acc": true
            }
        },
        "n-samples": {
            "wsc273": {
                "original": 273,
                "effective": 273
            },
            "winogrande": {
                "original": 1267,
                "effective": 1267
            },
            "tinyTruthfulQA": {
                "original": 100,
                "effective": 100
            },
            "tinyMMLU": {
                "original": 100,
                "effective": 100
            },
            "tinyGSM8k": {
                "original": 100,
                "effective": 100
            },
            "swag": {
                "original": 20006,
                "effective": 20006
            },
            "squad_completion": {
                "original": 2984,
                "effective": 2984
            },
            "scrolls_quality": {
                "original": 2086,
                "effective": 2086
            },
            "scrolls_contractnli": {
                "original": 1037,
                "effective": 1037
            },
            "sciq": {
                "original": 1000,
                "effective": 1000
            },
            "qa4mre_2012": {
                "original": 160,
                "effective": 160
            },
            "qa4mre_2013": {
                "original": 284,
                "effective": 284
            },
            "qa4mre_2011": {
                "original": 120,
                "effective": 120
            },
            "piqa": {
                "original": 1838,
                "effective": 1838
            },
            "openbookqa": {
                "original": 500,
                "effective": 500
            },
            "mathqa": {
                "original": 2985,
                "effective": 2985
            },
            "lambada_openai": {
                "original": 5153,
                "effective": 5153
            },
            "inverse_scaling_repetitive_algebra": {
                "original": 1000,
                "effective": 1000
            },
            "inverse_scaling_into_the_unknown": {
                "original": 1824,
                "effective": 1824
            },
            "inverse_scaling_winobias_antistereotype": {
                "original": 412,
                "effective": 412
            },
            "inverse_scaling_quote_repetition": {
                "original": 300,
                "effective": 300
            },
            "inverse_scaling_pattern_matching_suppression": {
                "original": 1428,
                "effective": 1428
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "original": 315,
                "effective": 315
            },
            "inverse_scaling_modus_tollens": {
                "original": 1236,
                "effective": 1236
            },
            "inverse_scaling_neqa": {
                "original": 300,
                "effective": 300
            },
            "inverse_scaling_redefine_math": {
                "original": 900,
                "effective": 900
            },
            "inverse_scaling_sig_figs": {
                "original": 20897,
                "effective": 20897
            },
            "inverse_scaling_memo_trap": {
                "original": 936,
                "effective": 936
            },
            "hellaswag": {
                "original": 10042,
                "effective": 10042
            },
            "cola": {
                "original": 1043,
                "effective": 1043
            },
            "rte": {
                "original": 277,
                "effective": 277
            },
            "qqp": {
                "original": 40430,
                "effective": 40430
            },
            "wnli": {
                "original": 71,
                "effective": 71
            },
            "qnli": {
                "original": 5463,
                "effective": 5463
            },
            "mnli_mismatch": {
                "original": 9832,
                "effective": 9832
            },
            "mnli": {
                "original": 9815,
                "effective": 9815
            },
            "mrpc": {
                "original": 408,
                "effective": 408
            },
            "sst2": {
                "original": 872,
                "effective": 872
            },
            "blimp_supplement_subject_aux_inversion": {
                "original": 3867,
                "effective": 3867
            },
            "blimp_supplement_qa_congruence_tricky": {
                "original": 165,
                "effective": 165
            },
            "blimp_supplement_qa_congruence_easy": {
                "original": 64,
                "effective": 64
            },
            "blimp_supplement_turn_taking": {
                "original": 280,
                "effective": 280
            },
            "blimp_supplement_hypernym": {
                "original": 842,
                "effective": 842
            },
            "blimp_principle_A_c_command_filtered": {
                "original": 946,
                "effective": 946
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "original": 947,
                "effective": 947
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "original": 871,
                "effective": 871
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "original": 840,
                "effective": 840
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "original": 820,
                "effective": 820
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "original": 892,
                "effective": 892
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "original": 906,
                "effective": 906
            },
            "blimp_wh_questions_object_gap_filtered": {
                "original": 859,
                "effective": 859
            },
            "blimp_drop_argument_filtered": {
                "original": 920,
                "effective": 920
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "original": 961,
                "effective": 961
            },
            "blimp_principle_A_domain_1_filtered": {
                "original": 914,
                "effective": 914
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "original": 871,
                "effective": 871
            },
            "blimp_principle_A_domain_2_filtered": {
                "original": 915,
                "effective": 915
            },
            "blimp_only_npi_licensor_present_filtered": {
                "original": 882,
                "effective": 882
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "original": 802,
                "effective": 802
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "original": 979,
                "effective": 979
            },
            "blimp_complex_NP_island_filtered": {
                "original": 846,
                "effective": 846
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "original": 929,
                "effective": 929
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "original": 788,
                "effective": 788
            },
            "blimp_tough_vs_raising_2_filtered": {
                "original": 920,
                "effective": 920
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "original": 911,
                "effective": 911
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "original": 949,
                "effective": 949
            },
            "blimp_expletive_it_object_raising_filtered": {
                "original": 759,
                "effective": 759
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "original": 898,
                "effective": 898
            },
            "blimp_principle_A_case_2_filtered": {
                "original": 915,
                "effective": 915
            },
            "blimp_tough_vs_raising_1_filtered": {
                "original": 948,
                "effective": 948
            },
            "blimp_existential_there_object_raising_filtered": {
                "original": 812,
                "effective": 812
            },
            "blimp_passive_2_filtered": {
                "original": 903,
                "effective": 903
            },
            "blimp_npi_present_1_filtered": {
                "original": 909,
                "effective": 909
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "original": 929,
                "effective": 929
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "original": 857,
                "effective": 857
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "original": 945,
                "effective": 945
            },
            "blimp_wh_island_filtered": {
                "original": 960,
                "effective": 960
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "original": 941,
                "effective": 941
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "original": 861,
                "effective": 861
            },
            "blimp_intransitive_filtered": {
                "original": 868,
                "effective": 868
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "original": 828,
                "effective": 828
            },
            "blimp_causative_filtered": {
                "original": 818,
                "effective": 818
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "original": 875,
                "effective": 875
            },
            "blimp_principle_A_case_1_filtered": {
                "original": 912,
                "effective": 912
            },
            "blimp_existential_there_subject_raising_filtered": {
                "original": 924,
                "effective": 924
            },
            "blimp_anaphor_number_agreement_filtered": {
                "original": 931,
                "effective": 931
            },
            "blimp_only_npi_scope_filtered": {
                "original": 837,
                "effective": 837
            },
            "blimp_principle_A_reconstruction_filtered": {
                "original": 967,
                "effective": 967
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "original": 681,
                "effective": 681
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "original": 942,
                "effective": 942
            },
            "blimp_animate_subject_trans_filtered": {
                "original": 923,
                "effective": 923
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "original": 890,
                "effective": 890
            },
            "blimp_adjunct_island_filtered": {
                "original": 928,
                "effective": 928
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "original": 971,
                "effective": 971
            },
            "blimp_passive_1_filtered": {
                "original": 840,
                "effective": 840
            },
            "blimp_animate_subject_passive_filtered": {
                "original": 895,
                "effective": 895
            },
            "blimp_transitive_filtered": {
                "original": 868,
                "effective": 868
            },
            "blimp_inchoative_filtered": {
                "original": 855,
                "effective": 855
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "original": 919,
                "effective": 919
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "original": 718,
                "effective": 718
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "original": 986,
                "effective": 986
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "original": 910,
                "effective": 910
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "original": 931,
                "effective": 931
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "original": 933,
                "effective": 933
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "original": 930,
                "effective": 930
            },
            "blimp_sentential_subject_island_filtered": {
                "original": 961,
                "effective": 961
            },
            "blimp_principle_A_domain_3_filtered": {
                "original": 941,
                "effective": 941
            },
            "blimp_npi_present_2_filtered": {
                "original": 914,
                "effective": 914
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "original": 951,
                "effective": 951
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "original": 919,
                "effective": 919
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "original": 804,
                "effective": 804
            },
            "arc_easy": {
                "original": 2376,
                "effective": 2376
            },
            "arc_challenge": {
                "original": 1172,
                "effective": 1172
            }
        },
        "config": {
            "model": "modis",
            "model_args": "pretrained=LIBRARY_HOLD/31M/gpt2_31M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
            "model_num_parameters": 13313280,
            "model_dtype": "torch.bfloat16",
            "model_revision": "main",
            "batch_size": "auto",
            "batch_sizes": [
                64
            ],
            "device": null,
            "use_cache": null,
            "limit": null,
            "bootstrap_iters": 100000,
            "gen_kwargs": null,
            "random_seed": 0,
            "numpy_seed": 1234,
            "torch_seed": 1234,
            "fewshot_seed": 1234
        },
        "date": 1722534320.1003215,
        "tokenizer_pad_token": [
            "</s>",
            "2"
        ],
        "tokenizer_eos_token": [
            "</s>",
            "2"
        ],
        "tokenizer_bos_token": [
            "<s>",
            "1"
        ],
        "eot_token_id": 2,
        "max_length": 2048,
        "task_hashes": {},
        "model_source": "modis",
        "model_name": "LIBRARY_HOLD/31M/gpt2_31M",
        "model_name_sanitized": "LIBRARY_HOLD__31M__gpt2_31M",
        "system_instruction": null,
        "system_instruction_sha": null,
        "fewshot_as_multiturn": false,
        "chat_template": null,
        "chat_template_sha": null,
        "start_time": 3374027.892184162,
        "end_time": 3374234.241108434,
        "total_evaluation_time_seconds": "206.34892427176237"
    }
}