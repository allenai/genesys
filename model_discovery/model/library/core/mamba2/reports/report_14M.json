{
    "trainer_state.json": {
        "best_metric": null,
        "best_model_checkpoint": null,
        "epoch": 0.001907886525328531,
        "eval_steps": 500,
        "global_step": 214,
        "is_hyper_param_search": false,
        "is_local_process_zero": true,
        "is_world_process_zero": true,
        "logging_steps": 10,
        "max_steps": 214,
        "num_input_tokens_seen": 0,
        "num_train_epochs": 1,
        "save_steps": 50,
        "total_flos": 1002253727039488.0,
        "train_batch_size": 42,
        "trial_name": null,
        "trial_params": null
    },
    "eval_results.json": {
        "results": {
            "arc_challenge": {
                "alias": "arc_challenge",
                "acc,none": 0.2354948805460751,
                "acc_stderr,none": 0.01239945185500478,
                "acc_norm,none": 0.29180887372013653,
                "acc_norm_stderr,none": 0.013284525292403586
            },
            "arc_easy": {
                "alias": "arc_easy",
                "acc,none": 0.2638888888888889,
                "acc_stderr,none": 0.009043789220055392,
                "acc_norm,none": 0.26136363636363635,
                "acc_norm_stderr,none": 0.009015838366608263
            },
            "blimp_adjunct_island_filtered": {
                "alias": "blimp_adjunct_island_filtered",
                "acc,none": 0.8092672413793104,
                "acc_stderr,none": 0.012903833729922425
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "alias": "blimp_anaphor_gender_agreement_filtered",
                "acc,none": 0.8269824922760041,
                "acc_stderr,none": 0.012145273984124714
            },
            "blimp_anaphor_number_agreement_filtered": {
                "alias": "blimp_anaphor_number_agreement_filtered",
                "acc,none": 0.7916219119226638,
                "acc_stderr,none": 0.01331813625141918
            },
            "blimp_animate_subject_passive_filtered": {
                "alias": "blimp_animate_subject_passive_filtered",
                "acc,none": 0.6770949720670391,
                "acc_stderr,none": 0.015638440380241564
            },
            "blimp_animate_subject_trans_filtered": {
                "alias": "blimp_animate_subject_trans_filtered",
                "acc,none": 0.7930660888407367,
                "acc_stderr,none": 0.013341512351042065
            },
            "blimp_causative_filtered": {
                "alias": "blimp_causative_filtered",
                "acc,none": 0.47555012224938875,
                "acc_stderr,none": 0.017471858943175118
            },
            "blimp_complex_NP_island_filtered": {
                "alias": "blimp_complex_NP_island_filtered",
                "acc,none": 0.7978723404255319,
                "acc_stderr,none": 0.013815010651500929
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                "acc,none": 0.8145695364238411,
                "acc_stderr,none": 0.012919042724662154
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                "acc,none": 0.7407797681770284,
                "acc_stderr,none": 0.01423229165584452
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_1_filtered",
                "acc,none": 0.6749192680301399,
                "acc_stderr,none": 0.015376147618783195
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_2_filtered",
                "acc,none": 0.757250268528464,
                "acc_stderr,none": 0.014059103328067653
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                "acc,none": 0.631424375917768,
                "acc_stderr,none": 0.018499905938338983
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                "acc,none": 0.7682926829268293,
                "acc_stderr,none": 0.014743183532365582
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                "acc,none": 0.7800212539851222,
                "acc_stderr,none": 0.013510756050651364
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                "acc,none": 0.6908077994428969,
                "acc_stderr,none": 0.017259702410433828
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                "acc,none": 0.7488095238095238,
                "acc_stderr,none": 0.01497291240586813
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                "acc,none": 0.6366559485530546,
                "acc_stderr,none": 0.01575445817839207
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "alias": "blimp_distractor_agreement_relational_noun_filtered",
                "acc,none": 0.7411167512690355,
                "acc_stderr,none": 0.015613775246732745
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "alias": "blimp_distractor_agreement_relative_clause_filtered",
                "acc,none": 0.7520091848450058,
                "acc_stderr,none": 0.014640966409978202
            },
            "blimp_drop_argument_filtered": {
                "alias": "blimp_drop_argument_filtered",
                "acc,none": 0.7663043478260869,
                "acc_stderr,none": 0.01395944671888585
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "alias": "blimp_ellipsis_n_bar_1_filtered",
                "acc,none": 0.8528678304239401,
                "acc_stderr,none": 0.012516371015020476
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "alias": "blimp_ellipsis_n_bar_2_filtered",
                "acc,none": 0.4082125603864734,
                "acc_stderr,none": 0.017091229212569996
            },
            "blimp_existential_there_object_raising_filtered": {
                "alias": "blimp_existential_there_object_raising_filtered",
                "acc,none": 0.8041871921182266,
                "acc_stderr,none": 0.01393441357984227
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "alias": "blimp_existential_there_quantifiers_1_filtered",
                "acc,none": 0.7817204301075269,
                "acc_stderr,none": 0.013552656119779663
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "alias": "blimp_existential_there_quantifiers_2_filtered",
                "acc,none": 0.986827661909989,
                "acc_stderr,none": 0.0037794742932378196
            },
            "blimp_existential_there_subject_raising_filtered": {
                "alias": "blimp_existential_there_subject_raising_filtered",
                "acc,none": 0.7424242424242424,
                "acc_stderr,none": 0.014393874595730225
            },
            "blimp_expletive_it_object_raising_filtered": {
                "alias": "blimp_expletive_it_object_raising_filtered",
                "acc,none": 0.6758893280632411,
                "acc_stderr,none": 0.0170000366394709
            },
            "blimp_inchoative_filtered": {
                "alias": "blimp_inchoative_filtered",
                "acc,none": 0.49122807017543857,
                "acc_stderr,none": 0.017107014504415357
            },
            "blimp_intransitive_filtered": {
                "alias": "blimp_intransitive_filtered",
                "acc,none": 0.6578341013824884,
                "acc_stderr,none": 0.016112651166501405
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "alias": "blimp_irregular_past_participle_adjectives_filtered",
                "acc,none": 0.7533818938605619,
                "acc_stderr,none": 0.013911836082677454
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "alias": "blimp_irregular_past_participle_verbs_filtered",
                "acc,none": 0.7123142250530785,
                "acc_stderr,none": 0.014757071823341766
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                "acc,none": 0.6766169154228856,
                "acc_stderr,none": 0.016507157781264867
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                "acc,none": 0.7219730941704036,
                "acc_stderr,none": 0.015009459997285719
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "alias": "blimp_left_branch_island_echo_question_filtered",
                "acc,none": 0.7888067581837381,
                "acc_stderr,none": 0.013270269765472523
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "alias": "blimp_left_branch_island_simple_question_filtered",
                "acc,none": 0.7266035751840169,
                "acc_stderr,none": 0.014460502273937413
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                "acc,none": 0.5629709364908504,
                "acc_stderr,none": 0.01628261518558218
            },
            "blimp_npi_present_1_filtered": {
                "alias": "blimp_npi_present_1_filtered",
                "acc,none": 0.7315731573157316,
                "acc_stderr,none": 0.01470614786522788
            },
            "blimp_npi_present_2_filtered": {
                "alias": "blimp_npi_present_2_filtered",
                "acc,none": 0.7592997811816192,
                "acc_stderr,none": 0.01414847041915533
            },
            "blimp_only_npi_licensor_present_filtered": {
                "alias": "blimp_only_npi_licensor_present_filtered",
                "acc,none": 0.9342403628117913,
                "acc_stderr,none": 0.00835066503194153
            },
            "blimp_only_npi_scope_filtered": {
                "alias": "blimp_only_npi_scope_filtered",
                "acc,none": 0.7586618876941458,
                "acc_stderr,none": 0.014799053856286533
            },
            "blimp_passive_1_filtered": {
                "alias": "blimp_passive_1_filtered",
                "acc,none": 0.6190476190476191,
                "acc_stderr,none": 0.016765495541788553
            },
            "blimp_passive_2_filtered": {
                "alias": "blimp_passive_2_filtered",
                "acc,none": 0.6301218161683277,
                "acc_stderr,none": 0.01607453236836086
            },
            "blimp_principle_A_c_command_filtered": {
                "alias": "blimp_principle_A_c_command_filtered",
                "acc,none": 0.8308668076109936,
                "acc_stderr,none": 0.012194506336234145
            },
            "blimp_principle_A_case_1_filtered": {
                "alias": "blimp_principle_A_case_1_filtered",
                "acc,none": 0.793859649122807,
                "acc_stderr,none": 0.01340275815026483
            },
            "blimp_principle_A_case_2_filtered": {
                "alias": "blimp_principle_A_case_2_filtered",
                "acc,none": 0.6327868852459017,
                "acc_stderr,none": 0.015944640385079544
            },
            "blimp_principle_A_domain_1_filtered": {
                "alias": "blimp_principle_A_domain_1_filtered",
                "acc,none": 0.9234135667396062,
                "acc_stderr,none": 0.008801134516933226
            },
            "blimp_principle_A_domain_2_filtered": {
                "alias": "blimp_principle_A_domain_2_filtered",
                "acc,none": 0.8098360655737705,
                "acc_stderr,none": 0.012980443650468297
            },
            "blimp_principle_A_domain_3_filtered": {
                "alias": "blimp_principle_A_domain_3_filtered",
                "acc,none": 0.7247608926673751,
                "acc_stderr,none": 0.014567617145038871
            },
            "blimp_principle_A_reconstruction_filtered": {
                "alias": "blimp_principle_A_reconstruction_filtered",
                "acc,none": 0.7807652533609101,
                "acc_stderr,none": 0.01331148076630477
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                "acc,none": 0.6662921348314607,
                "acc_stderr,none": 0.01581483569315042
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                "acc,none": 0.582010582010582,
                "acc_stderr,none": 0.01605321739091198
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                "acc,none": 0.5462459194776932,
                "acc_stderr,none": 0.016431720311258714
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "alias": "blimp_sentential_negation_npi_scope_filtered",
                "acc,none": 0.8725602755453502,
                "acc_stderr,none": 0.01130551900040305
            },
            "blimp_sentential_subject_island_filtered": {
                "alias": "blimp_sentential_subject_island_filtered",
                "acc,none": 0.858480749219563,
                "acc_stderr,none": 0.011249608902413973
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "alias": "blimp_superlative_quantifiers_1_filtered",
                "acc,none": 0.8283963227783453,
                "acc_stderr,none": 0.012056269537429994
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "alias": "blimp_superlative_quantifiers_2_filtered",
                "acc,none": 0.8407707910750507,
                "acc_stderr,none": 0.011658215026936952
            },
            "blimp_supplement_hypernym": {
                "alias": "blimp_supplement_hypernym",
                "acc,none": 0.6947743467933492,
                "acc_stderr,none": 0.015879411577468475
            },
            "blimp_supplement_qa_congruence_easy": {
                "alias": "blimp_supplement_qa_congruence_easy",
                "acc,none": 0.5,
                "acc_stderr,none": 0.06299407883487121
            },
            "blimp_supplement_qa_congruence_tricky": {
                "alias": "blimp_supplement_qa_congruence_tricky",
                "acc,none": 0.42424242424242425,
                "acc_stderr,none": 0.038592681420702664
            },
            "blimp_supplement_subject_aux_inversion": {
                "alias": "blimp_supplement_subject_aux_inversion",
                "acc,none": 0.7975174553917765,
                "acc_stderr,none": 0.006462982333717115
            },
            "blimp_supplement_turn_taking": {
                "alias": "blimp_supplement_turn_taking",
                "acc,none": 0.8464285714285714,
                "acc_stderr,none": 0.021584811872631983
            },
            "blimp_tough_vs_raising_1_filtered": {
                "alias": "blimp_tough_vs_raising_1_filtered",
                "acc,none": 0.3069620253164557,
                "acc_stderr,none": 0.014988074820742684
            },
            "blimp_tough_vs_raising_2_filtered": {
                "alias": "blimp_tough_vs_raising_2_filtered",
                "acc,none": 0.9239130434782609,
                "acc_stderr,none": 0.008746069010911836
            },
            "blimp_transitive_filtered": {
                "alias": "blimp_transitive_filtered",
                "acc,none": 0.5990783410138248,
                "acc_stderr,none": 0.016644165283826243
            },
            "blimp_wh_island_filtered": {
                "alias": "blimp_wh_island_filtered",
                "acc,none": 0.8072916666666666,
                "acc_stderr,none": 0.012736678276190407
            },
            "blimp_wh_questions_object_gap_filtered": {
                "alias": "blimp_wh_questions_object_gap_filtered",
                "acc,none": 0.7462165308498254,
                "acc_stderr,none": 0.014856635004446145
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "alias": "blimp_wh_questions_subject_gap_filtered",
                "acc,none": 0.7750556792873051,
                "acc_stderr,none": 0.01394144360615619
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                "acc,none": 0.8623103850641773,
                "acc_stderr,none": 0.011777294053703166
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "alias": "blimp_wh_vs_that_no_gap_filtered",
                "acc,none": 0.7886178861788617,
                "acc_stderr,none": 0.01392253133633449
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                "acc,none": 0.8742857142857143,
                "acc_stderr,none": 0.011214070725852898
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "alias": "blimp_wh_vs_that_with_gap_filtered",
                "acc,none": 0.8117519042437432,
                "acc_stderr,none": 0.012901957688694822
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                "acc,none": 0.7494505494505495,
                "acc_stderr,none": 0.014372631038505015
            },
            "cola": {
                "alias": "cola",
                "mcc,none": -0.02836883508576364,
                "mcc_stderr,none": 0.03091047245723392
            },
            "hellaswag": {
                "alias": "hellaswag",
                "acc,none": 0.2557259510057757,
                "acc_stderr,none": 0.004353768730644862,
                "acc_norm,none": 0.26249751045608444,
                "acc_norm_stderr,none": 0.004390923353200343
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "alias": "inverse_scaling_hindsight_neglect_10shot",
                "acc,none": 0.5492063492063493,
                "acc_stderr,none": 0.028079660068225168,
                "acc_norm,none": 0.5492063492063493,
                "acc_norm_stderr,none": 0.028079660068225168
            },
            "inverse_scaling_into_the_unknown": {
                "alias": "inverse_scaling_into_the_unknown",
                "acc,none": 0.5197368421052632,
                "acc_stderr,none": 0.011701406141356532,
                "acc_norm,none": 0.5197368421052632,
                "acc_norm_stderr,none": 0.011701406141356532
            },
            "inverse_scaling_memo_trap": {
                "alias": "inverse_scaling_memo_trap",
                "acc,none": 0.5502136752136753,
                "acc_stderr,none": 0.016269080507447003,
                "acc_norm,none": 0.5395299145299145,
                "acc_norm_stderr,none": 0.016300565452521374
            },
            "inverse_scaling_modus_tollens": {
                "alias": "inverse_scaling_modus_tollens",
                "acc,none": 0.15453074433656958,
                "acc_stderr,none": 0.010285440099951018,
                "acc_norm,none": 1.0,
                "acc_norm_stderr,none": 0.0
            },
            "inverse_scaling_neqa": {
                "alias": "inverse_scaling_neqa",
                "acc,none": 0.48333333333333334,
                "acc_stderr,none": 0.028899677829858923,
                "acc_norm,none": 0.48333333333333334,
                "acc_norm_stderr,none": 0.028899677829858923
            },
            "inverse_scaling_pattern_matching_suppression": {
                "alias": "inverse_scaling_pattern_matching_suppression",
                "acc,none": 0.5805322128851541,
                "acc_stderr,none": 0.013063227265063973,
                "acc_norm,none": 0.43137254901960786,
                "acc_norm_stderr,none": 0.013110769335938754
            },
            "inverse_scaling_quote_repetition": {
                "alias": "inverse_scaling_quote_repetition",
                "acc,none": 0.14,
                "acc_stderr,none": 0.020066778149077168,
                "acc_norm,none": 0.17,
                "acc_norm_stderr,none": 0.021723405684078406
            },
            "inverse_scaling_redefine_math": {
                "alias": "inverse_scaling_redefine_math",
                "acc,none": 0.5766666666666667,
                "acc_stderr,none": 0.016478732787596505,
                "acc_norm,none": 0.5766666666666667,
                "acc_norm_stderr,none": 0.016478732787596505
            },
            "inverse_scaling_repetitive_algebra": {
                "alias": "inverse_scaling_repetitive_algebra",
                "acc,none": 0.518,
                "acc_stderr,none": 0.01580904569940659,
                "acc_norm,none": 0.52,
                "acc_norm_stderr,none": 0.015806639423035177
            },
            "inverse_scaling_sig_figs": {
                "alias": "inverse_scaling_sig_figs",
                "acc,none": 0.38847681485380675,
                "acc_stderr,none": 0.003371766069977172,
                "acc_norm,none": 0.38847681485380675,
                "acc_norm_stderr,none": 0.003371766069977172
            },
            "inverse_scaling_winobias_antistereotype": {
                "alias": "inverse_scaling_winobias_antistereotype",
                "acc,none": 0.5703883495145631,
                "acc_stderr,none": 0.024417569770761666,
                "acc_norm,none": 0.5121359223300971,
                "acc_norm_stderr,none": 0.02465591529628955
            },
            "lambada_openai": {
                "alias": "lambada_openai",
                "perplexity,none": 52466046.773504734,
                "perplexity_stderr,none": 5716007.7692329995,
                "acc,none": 0.0,
                "acc_stderr,none": 0.0
            },
            "mathqa": {
                "alias": "mathqa",
                "acc,none": 0.20435510887772193,
                "acc_stderr,none": 0.007381642016404161,
                "acc_norm,none": 0.20569514237855946,
                "acc_norm_stderr,none": 0.007399565480241972
            },
            "mnli": {
                "alias": "mnli",
                "acc,none": 0.33744268976057057,
                "acc_stderr,none": 0.004772970061976626
            },
            "mnli_mismatch": {
                "alias": "mnli_mismatch",
                "acc,none": 0.3415378356387307,
                "acc_stderr,none": 0.004782841352513185
            },
            "mrpc": {
                "alias": "mrpc",
                "acc,none": 0.6078431372549019,
                "acc_stderr,none": 0.024200729868327428
            },
            "openbookqa": {
                "alias": "openbookqa",
                "acc,none": 0.152,
                "acc_stderr,none": 0.016071982367911835,
                "acc_norm,none": 0.268,
                "acc_norm_stderr,none": 0.019827714859587477
            },
            "piqa": {
                "alias": "piqa",
                "acc,none": 0.5277475516866159,
                "acc_stderr,none": 0.011647846656062001,
                "acc_norm,none": 0.49836779107725787,
                "acc_norm_stderr,none": 0.011665762007194807
            },
            "qa4mre_2011": {
                "alias": "qa4mre_2011",
                "acc,none": 0.13333333333333333,
                "acc_stderr,none": 0.03116175682952018,
                "acc_norm,none": 0.14166666666666666,
                "acc_norm_stderr,none": 0.03196600376689893
            },
            "qa4mre_2012": {
                "alias": "qa4mre_2012",
                "acc,none": 0.15625,
                "acc_stderr,none": 0.02879508360159146,
                "acc_norm,none": 0.25,
                "acc_norm_stderr,none": 0.03434014098717226
            },
            "qa4mre_2013": {
                "alias": "qa4mre_2013",
                "acc,none": 0.1936619718309859,
                "acc_stderr,none": 0.02349024400885351,
                "acc_norm,none": 0.16549295774647887,
                "acc_norm_stderr,none": 0.02209080510658784
            },
            "qnli": {
                "alias": "qnli",
                "acc,none": 0.466410397217646,
                "acc_stderr,none": 0.0067501269850529285
            },
            "qqp": {
                "alias": "qqp",
                "acc,none": 0.5093247588424438,
                "acc_stderr,none": 0.0024862681512374694
            },
            "rte": {
                "alias": "rte",
                "acc,none": 0.48375451263537905,
                "acc_stderr,none": 0.030080573208738116
            },
            "sciq": {
                "alias": "sciq",
                "acc,none": 0.169,
                "acc_stderr,none": 0.011856625977890152,
                "acc_norm,none": 0.198,
                "acc_norm_stderr,none": 0.012607733934175283
            },
            "scrolls_contractnli": {
                "alias": "scrolls_contractnli",
                "acc,none": 0.40790742526518803,
                "acc_stderr,none": 0.015268477560837062,
                "acc_norm,none": 0.40790742526518803,
                "acc_norm_stderr,none": 0.015268477560837062,
                "em,none": 40.790742526518805,
                "em_stderr,none": 1.5268477560837062
            },
            "scrolls_quality": {
                "alias": "scrolls_quality",
                "acc,none": 0.40790742526518803,
                "acc_stderr,none": 0.015268477560837062,
                "acc_norm,none": 0.40790742526518803,
                "acc_norm_stderr,none": 0.015268477560837062,
                "em,none": 40.790742526518805,
                "em_stderr,none": 1.5268477560837062
            },
            "sst2": {
                "alias": "sst2",
                "acc,none": 0.4908256880733945,
                "acc_stderr,none": 0.016939001525351462
            },
            "swag": {
                "alias": "swag",
                "acc,none": 0.2670698790362891,
                "acc_stderr,none": 0.0031280555868547053,
                "acc_norm,none": 0.2537738678396481,
                "acc_norm_stderr,none": 0.0030767300864816497
            },
            "tinyGSM8k": {
                "alias": "tinyGSM8k",
                "exact_match,strict-match": 0.005526834516577017,
                "exact_match_stderr,strict-match": "N/A",
                "exact_match,flexible-extract": 0.005526834516577017,
                "exact_match_stderr,flexible-extract": "N/A"
            },
            "tinyMMLU": {
                "alias": "tinyMMLU",
                "acc_norm,none": 0.2296770112617063,
                "acc_norm_stderr,none": "N/A"
            },
            "tinyTruthfulQA": {
                "alias": "tinyTruthfulQA",
                "acc,none": 0.4003096314750688,
                "acc_stderr,none": "N/A"
            },
            "triviaqa": {
                "alias": "triviaqa",
                "exact_match,remove_whitespace": 0.0,
                "exact_match_stderr,remove_whitespace": 0.0
            },
            "winogrande": {
                "alias": "winogrande",
                "acc,none": 0.5114443567482242,
                "acc_stderr,none": 0.014048804199859391
            },
            "wnli": {
                "alias": "wnli",
                "acc,none": 0.5070422535211268,
                "acc_stderr,none": 0.05975550263548289
            },
            "wsc273": {
                "alias": "wsc273",
                "acc,none": 0.4908424908424908,
                "acc_stderr,none": 0.03031186794526186
            }
        },
        "group_subtasks": {
            "arc_challenge": [],
            "arc_easy": [],
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
            "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
            "blimp_complex_NP_island_filtered": [],
            "blimp_existential_there_quantifiers_2_filtered": [],
            "blimp_existential_there_subject_raising_filtered": [],
            "blimp_superlative_quantifiers_1_filtered": [],
            "blimp_irregular_past_participle_verbs_filtered": [],
            "blimp_npi_present_2_filtered": [],
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
            "blimp_principle_A_c_command_filtered": [],
            "blimp_adjunct_island_filtered": [],
            "blimp_npi_present_1_filtered": [],
            "blimp_determiner_noun_agreement_1_filtered": [],
            "blimp_existential_there_quantifiers_1_filtered": [],
            "blimp_intransitive_filtered": [],
            "blimp_distractor_agreement_relational_noun_filtered": [],
            "blimp_determiner_noun_agreement_2_filtered": [],
            "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
            "blimp_wh_vs_that_no_gap_filtered": [],
            "blimp_left_branch_island_simple_question_filtered": [],
            "blimp_ellipsis_n_bar_2_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
            "blimp_passive_1_filtered": [],
            "blimp_distractor_agreement_relative_clause_filtered": [],
            "blimp_passive_2_filtered": [],
            "blimp_superlative_quantifiers_2_filtered": [],
            "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
            "blimp_principle_A_case_1_filtered": [],
            "blimp_principle_A_domain_2_filtered": [],
            "blimp_ellipsis_n_bar_1_filtered": [],
            "blimp_principle_A_case_2_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
            "blimp_sentential_negation_npi_licensor_present_filtered": [],
            "blimp_irregular_past_participle_adjectives_filtered": [],
            "blimp_existential_there_object_raising_filtered": [],
            "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
            "blimp_only_npi_scope_filtered": [],
            "blimp_expletive_it_object_raising_filtered": [],
            "blimp_only_npi_licensor_present_filtered": [],
            "blimp_animate_subject_passive_filtered": [],
            "blimp_matrix_question_npi_licensor_present_filtered": [],
            "blimp_wh_questions_subject_gap_long_distance_filtered": [],
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
            "blimp_left_branch_island_echo_question_filtered": [],
            "blimp_transitive_filtered": [],
            "blimp_wh_island_filtered": [],
            "blimp_tough_vs_raising_2_filtered": [],
            "blimp_determiner_noun_agreement_irregular_1_filtered": [],
            "blimp_wh_vs_that_with_gap_filtered": [],
            "blimp_determiner_noun_agreement_irregular_2_filtered": [],
            "blimp_animate_subject_trans_filtered": [],
            "blimp_inchoative_filtered": [],
            "blimp_principle_A_reconstruction_filtered": [],
            "blimp_principle_A_domain_3_filtered": [],
            "blimp_drop_argument_filtered": [],
            "blimp_anaphor_gender_agreement_filtered": [],
            "blimp_sentential_negation_npi_scope_filtered": [],
            "blimp_principle_A_domain_1_filtered": [],
            "blimp_tough_vs_raising_1_filtered": [],
            "blimp_causative_filtered": [],
            "blimp_wh_questions_subject_gap_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
            "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
            "blimp_sentential_subject_island_filtered": [],
            "blimp_wh_questions_object_gap_filtered": [],
            "blimp_anaphor_number_agreement_filtered": [],
            "blimp_supplement_hypernym": [],
            "blimp_supplement_subject_aux_inversion": [],
            "blimp_supplement_turn_taking": [],
            "blimp_supplement_qa_congruence_tricky": [],
            "blimp_supplement_qa_congruence_easy": [],
            "wnli": [],
            "cola": [],
            "mnli_mismatch": [],
            "mnli": [],
            "rte": [],
            "qnli": [],
            "qqp": [],
            "sst2": [],
            "mrpc": [],
            "hellaswag": [],
            "inverse_scaling_hindsight_neglect_10shot": [],
            "inverse_scaling_winobias_antistereotype": [],
            "inverse_scaling_modus_tollens": [],
            "inverse_scaling_neqa": [],
            "inverse_scaling_into_the_unknown": [],
            "inverse_scaling_quote_repetition": [],
            "inverse_scaling_memo_trap": [],
            "inverse_scaling_sig_figs": [],
            "inverse_scaling_repetitive_algebra": [],
            "inverse_scaling_redefine_math": [],
            "inverse_scaling_pattern_matching_suppression": [],
            "lambada_openai": [],
            "mathqa": [],
            "openbookqa": [],
            "piqa": [],
            "qa4mre_2013": [],
            "qa4mre_2011": [],
            "qa4mre_2012": [],
            "sciq": [],
            "scrolls_contractnli": [],
            "scrolls_quality": [],
            "swag": [],
            "tinyGSM8k": [],
            "tinyMMLU": [],
            "tinyTruthfulQA": [],
            "triviaqa": [],
            "winogrande": [],
            "wsc273": []
        },
        "configs": {
            "arc_challenge": {
                "task": "arc_challenge",
                "tag": [
                    "ai2_arc"
                ],
                "dataset_path": "allenai/ai2_arc",
                "dataset_name": "ARC-Challenge",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{choices.label.index(answerKey)}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "arc_easy": {
                "task": "arc_easy",
                "tag": [
                    "ai2_arc"
                ],
                "dataset_path": "allenai/ai2_arc",
                "dataset_name": "ARC-Easy",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{choices.label.index(answerKey)}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_adjunct_island_filtered": {
                "task": "blimp_adjunct_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "task": "blimp_anaphor_gender_agreement_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_anaphor_number_agreement_filtered": {
                "task": "blimp_anaphor_number_agreement_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_animate_subject_passive_filtered": {
                "task": "blimp_animate_subject_passive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_animate_subject_trans_filtered": {
                "task": "blimp_animate_subject_trans_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_causative_filtered": {
                "task": "blimp_causative_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_complex_NP_island_filtered": {
                "task": "blimp_complex_NP_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "task": "blimp_determiner_noun_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "task": "blimp_determiner_noun_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "task": "blimp_distractor_agreement_relational_noun_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "task": "blimp_distractor_agreement_relative_clause_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_drop_argument_filtered": {
                "task": "blimp_drop_argument_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "task": "blimp_ellipsis_n_bar_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "task": "blimp_ellipsis_n_bar_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_object_raising_filtered": {
                "task": "blimp_existential_there_object_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "task": "blimp_existential_there_quantifiers_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "task": "blimp_existential_there_quantifiers_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_subject_raising_filtered": {
                "task": "blimp_existential_there_subject_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_expletive_it_object_raising_filtered": {
                "task": "blimp_expletive_it_object_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_inchoative_filtered": {
                "task": "blimp_inchoative_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_intransitive_filtered": {
                "task": "blimp_intransitive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "task": "blimp_irregular_past_participle_adjectives_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "task": "blimp_irregular_past_participle_verbs_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "task": "blimp_left_branch_island_echo_question_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "task": "blimp_left_branch_island_simple_question_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "task": "blimp_matrix_question_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_npi_present_1_filtered": {
                "task": "blimp_npi_present_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_npi_present_2_filtered": {
                "task": "blimp_npi_present_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_only_npi_licensor_present_filtered": {
                "task": "blimp_only_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_only_npi_scope_filtered": {
                "task": "blimp_only_npi_scope_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_passive_1_filtered": {
                "task": "blimp_passive_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_passive_2_filtered": {
                "task": "blimp_passive_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_c_command_filtered": {
                "task": "blimp_principle_A_c_command_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_case_1_filtered": {
                "task": "blimp_principle_A_case_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_case_2_filtered": {
                "task": "blimp_principle_A_case_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_1_filtered": {
                "task": "blimp_principle_A_domain_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_2_filtered": {
                "task": "blimp_principle_A_domain_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_3_filtered": {
                "task": "blimp_principle_A_domain_3_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_reconstruction_filtered": {
                "task": "blimp_principle_A_reconstruction_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "task": "blimp_sentential_negation_npi_scope_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_subject_island_filtered": {
                "task": "blimp_sentential_subject_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "task": "blimp_superlative_quantifiers_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "task": "blimp_superlative_quantifiers_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_hypernym": {
                "task": "blimp_supplement_hypernym",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_qa_congruence_easy": {
                "task": "blimp_supplement_qa_congruence_easy",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_qa_congruence_tricky": {
                "task": "blimp_supplement_qa_congruence_tricky",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_subject_aux_inversion": {
                "task": "blimp_supplement_subject_aux_inversion",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_turn_taking": {
                "task": "blimp_supplement_turn_taking",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_tough_vs_raising_1_filtered": {
                "task": "blimp_tough_vs_raising_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_tough_vs_raising_2_filtered": {
                "task": "blimp_tough_vs_raising_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_transitive_filtered": {
                "task": "blimp_transitive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_island_filtered": {
                "task": "blimp_wh_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_object_gap_filtered": {
                "task": "blimp_wh_questions_object_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "task": "blimp_wh_questions_subject_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "task": "blimp_wh_vs_that_no_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "task": "blimp_wh_vs_that_with_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "cola": {
                "task": "cola",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "cola",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "mcc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "sentence",
                "metadata": {
                    "version": 1.0
                }
            },
            "hellaswag": {
                "task": "hellaswag",
                "tag": [
                    "multiple_choice"
                ],
                "dataset_path": "hellaswag",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                "doc_to_text": "{{query}}",
                "doc_to_target": "{{label}}",
                "doc_to_choice": "choices",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "task": "inverse_scaling_hindsight_neglect_10shot",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_into_the_unknown": {
                "task": "inverse_scaling_into_the_unknown",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/into-the-unknown",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_memo_trap": {
                "task": "inverse_scaling_memo_trap",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/memo-trap",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_modus_tollens": {
                "task": "inverse_scaling_modus_tollens",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/modus-tollens",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_neqa": {
                "task": "inverse_scaling_neqa",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/NeQA",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_pattern_matching_suppression": {
                "task": "inverse_scaling_pattern_matching_suppression",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/pattern-matching-suppression",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_quote_repetition": {
                "task": "inverse_scaling_quote_repetition",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/quote-repetition",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_redefine_math": {
                "task": "inverse_scaling_redefine_math",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/redefine-math",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_repetitive_algebra": {
                "task": "inverse_scaling_repetitive_algebra",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/repetitive-algebra",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_sig_figs": {
                "task": "inverse_scaling_sig_figs",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/sig-figs",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_winobias_antistereotype": {
                "task": "inverse_scaling_winobias_antistereotype",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "group": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "test_split": "test",
                "doc_to_text": "text",
                "doc_to_target": "target",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "lambada_openai": {
                "task": "lambada_openai",
                "tag": [
                    "lambada"
                ],
                "dataset_path": "EleutherAI/lambada_openai",
                "dataset_name": "default",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "test_split": "test",
                "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "perplexity",
                        "aggregation": "perplexity",
                        "higher_is_better": false
                    },
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "loglikelihood",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{text}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "mathqa": {
                "task": "mathqa",
                "tag": [
                    "math_word_problems"
                ],
                "dataset_path": "math_qa",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{Problem}}\nAnswer:",
                "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "mnli": {
                "task": "mnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mnli",
                "training_split": "train",
                "validation_split": "validation_matched",
                "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "Neither",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "mnli_mismatch": {
                "task": "mnli_mismatch",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mnli",
                "training_split": "train",
                "validation_split": "validation_mismatched",
                "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "Neither",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "mrpc": {
                "task": "mrpc",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mrpc",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "openbookqa": {
                "task": "openbookqa",
                "dataset_path": "openbookqa",
                "dataset_name": "main",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "question_stem",
                "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "question_stem",
                "metadata": {
                    "version": 1.0
                }
            },
            "piqa": {
                "task": "piqa",
                "dataset_path": "piqa",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Question: {{goal}}\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": "{{[sol1, sol2]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "goal",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2011": {
                "task": "qa4mre_2011",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2011.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2012": {
                "task": "qa4mre_2012",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2012.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2013": {
                "task": "qa4mre_2013",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2013.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qnli": {
                "task": "qnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "qnli",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "yes",
                    "no"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "qqp": {
                "task": "qqp",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "qqp",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2.0
                }
            },
            "rte": {
                "task": "rte",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "rte",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "sciq": {
                "task": "sciq",
                "dataset_path": "sciq",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                "doc_to_target": 3,
                "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{support}} {{question}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "scrolls_contractnli": {
                "task": "scrolls_contractnli",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2
                }
            },
            "scrolls_quality": {
                "task": "scrolls_quality",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2
                }
            },
            "sst2": {
                "task": "sst2",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "sst2",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "negative",
                    "positive"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "swag": {
                "task": "swag",
                "dataset_path": "swag",
                "dataset_name": "regular",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "startphrase",
                "doc_to_target": "label",
                "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "tinyGSM8k": {
                "task": "tinyGSM8k",
                "dataset_path": "tinyBenchmarks/tinyGSM8k",
                "dataset_name": "main",
                "training_split": "train",
                "test_split": "test",
                "fewshot_split": "train",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{answer}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 5,
                "metric_list": [
                    {
                        "metric": "exact_match",
                        "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true,
                        "ignore_case": true,
                        "ignore_punctuation": false,
                        "regexes_to_ignore": [
                            ",",
                            "\\$",
                            "(?s).*#### ",
                            "\\.$"
                        ]
                    }
                ],
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "Question:",
                        "</s>",
                        "<|im_end|>"
                    ],
                    "do_sample": false,
                    "temperature": 0.0
                },
                "repeats": 1,
                "filter_list": [
                    {
                        "name": "strict-match",
                        "filter": [
                            {
                                "function": "regex",
                                "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                            },
                            {
                                "function": "take_first"
                            }
                        ]
                    },
                    {
                        "name": "flexible-extract",
                        "filter": [
                            {
                                "function": "regex",
                                "group_select": -1,
                                "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                            },
                            {
                                "function": "take_first"
                            }
                        ]
                    }
                ],
                "should_decontaminate": false,
                "metadata": {
                    "version": 0.0
                }
            },
            "tinyMMLU": {
                "task": "tinyMMLU",
                "dataset_path": "tinyBenchmarks/tinyMMLU",
                "dataset_name": "all",
                "test_split": "test",
                "fewshot_split": "dev",
                "doc_to_text": "{{input_formatted}}",
                "doc_to_target": "answer",
                "doc_to_choice": [
                    "A",
                    "B",
                    "C",
                    "D"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "fewshot_config": {
                    "sampler": "first_n"
                },
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc_norm",
                        "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0.0
                }
            },
            "tinyTruthfulQA": {
                "task": "tinyTruthfulQA",
                "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                "dataset_name": "multiple_choice",
                "validation_split": "validation",
                "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                "doc_to_target": 0,
                "doc_to_choice": "{{mc2_targets.choices}}",
                "process_results": "def process_results_mc2(cls, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in cls.result_cache\n    if UNCACHED:\n        cls.result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        cls.result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= cls.result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return {\"acc\": sum(p_true)}\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "question",
                "metadata": {
                    "version": 0.0
                }
            },
            "triviaqa": {
                "task": "triviaqa",
                "dataset_path": "trivia_qa",
                "dataset_name": "rc.nocontext",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Question: {{question}}?\nAnswer:",
                "doc_to_target": "{{answer.aliases}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "exact_match",
                        "aggregation": "mean",
                        "higher_is_better": true,
                        "ignore_case": true,
                        "ignore_punctuation": true
                    }
                ],
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n",
                        ".",
                        ","
                    ],
                    "do_sample": false,
                    "temperature": 0.0
                },
                "repeats": 1,
                "filter_list": [
                    {
                        "name": "remove_whitespace",
                        "filter": [
                            {
                                "function": "remove_whitespace"
                            },
                            {
                                "function": "take_first"
                            }
                        ]
                    }
                ],
                "should_decontaminate": true,
                "doc_to_decontamination_query": "question",
                "metadata": {
                    "version": 3.0
                }
            },
            "winogrande": {
                "task": "winogrande",
                "dataset_path": "winogrande",
                "dataset_name": "winogrande_xl",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "sentence",
                "metadata": {
                    "version": 1.0
                }
            },
            "wnli": {
                "task": "wnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "wnli",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "False",
                    "True"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2.0
                }
            },
            "wsc273": {
                "task": "wsc273",
                "dataset_path": "winograd_wsc",
                "dataset_name": "wsc273",
                "test_split": "test",
                "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                "doc_to_text": "label",
                "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "text",
                "metadata": {
                    "version": 1.0
                }
            }
        },
        "versions": {
            "arc_challenge": 1.0,
            "arc_easy": 1.0,
            "blimp_adjunct_island_filtered": 1.0,
            "blimp_anaphor_gender_agreement_filtered": 1.0,
            "blimp_anaphor_number_agreement_filtered": 1.0,
            "blimp_animate_subject_passive_filtered": 1.0,
            "blimp_animate_subject_trans_filtered": 1.0,
            "blimp_causative_filtered": 1.0,
            "blimp_complex_NP_island_filtered": 1.0,
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
            "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
            "blimp_determiner_noun_agreement_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
            "blimp_distractor_agreement_relational_noun_filtered": 1.0,
            "blimp_distractor_agreement_relative_clause_filtered": 1.0,
            "blimp_drop_argument_filtered": 1.0,
            "blimp_ellipsis_n_bar_1_filtered": 1.0,
            "blimp_ellipsis_n_bar_2_filtered": 1.0,
            "blimp_existential_there_object_raising_filtered": 1.0,
            "blimp_existential_there_quantifiers_1_filtered": 1.0,
            "blimp_existential_there_quantifiers_2_filtered": 1.0,
            "blimp_existential_there_subject_raising_filtered": 1.0,
            "blimp_expletive_it_object_raising_filtered": 1.0,
            "blimp_inchoative_filtered": 1.0,
            "blimp_intransitive_filtered": 1.0,
            "blimp_irregular_past_participle_adjectives_filtered": 1.0,
            "blimp_irregular_past_participle_verbs_filtered": 1.0,
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
            "blimp_left_branch_island_echo_question_filtered": 1.0,
            "blimp_left_branch_island_simple_question_filtered": 1.0,
            "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
            "blimp_npi_present_1_filtered": 1.0,
            "blimp_npi_present_2_filtered": 1.0,
            "blimp_only_npi_licensor_present_filtered": 1.0,
            "blimp_only_npi_scope_filtered": 1.0,
            "blimp_passive_1_filtered": 1.0,
            "blimp_passive_2_filtered": 1.0,
            "blimp_principle_A_c_command_filtered": 1.0,
            "blimp_principle_A_case_1_filtered": 1.0,
            "blimp_principle_A_case_2_filtered": 1.0,
            "blimp_principle_A_domain_1_filtered": 1.0,
            "blimp_principle_A_domain_2_filtered": 1.0,
            "blimp_principle_A_domain_3_filtered": 1.0,
            "blimp_principle_A_reconstruction_filtered": 1.0,
            "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
            "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
            "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
            "blimp_sentential_negation_npi_scope_filtered": 1.0,
            "blimp_sentential_subject_island_filtered": 1.0,
            "blimp_superlative_quantifiers_1_filtered": 1.0,
            "blimp_superlative_quantifiers_2_filtered": 1.0,
            "blimp_supplement_hypernym": 1.0,
            "blimp_supplement_qa_congruence_easy": 1.0,
            "blimp_supplement_qa_congruence_tricky": 1.0,
            "blimp_supplement_subject_aux_inversion": 1.0,
            "blimp_supplement_turn_taking": 1.0,
            "blimp_tough_vs_raising_1_filtered": 1.0,
            "blimp_tough_vs_raising_2_filtered": 1.0,
            "blimp_transitive_filtered": 1.0,
            "blimp_wh_island_filtered": 1.0,
            "blimp_wh_questions_object_gap_filtered": 1.0,
            "blimp_wh_questions_subject_gap_filtered": 1.0,
            "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
            "blimp_wh_vs_that_no_gap_filtered": 1.0,
            "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
            "blimp_wh_vs_that_with_gap_filtered": 1.0,
            "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
            "cola": 1.0,
            "hellaswag": 1.0,
            "inverse_scaling_hindsight_neglect_10shot": 0,
            "inverse_scaling_into_the_unknown": 0,
            "inverse_scaling_memo_trap": 0,
            "inverse_scaling_modus_tollens": 0,
            "inverse_scaling_neqa": 0,
            "inverse_scaling_pattern_matching_suppression": 0,
            "inverse_scaling_quote_repetition": 0,
            "inverse_scaling_redefine_math": 0,
            "inverse_scaling_repetitive_algebra": 0,
            "inverse_scaling_sig_figs": 0,
            "inverse_scaling_winobias_antistereotype": 0,
            "lambada_openai": 1.0,
            "mathqa": 1.0,
            "mnli": 1.0,
            "mnli_mismatch": 1.0,
            "mrpc": 1.0,
            "openbookqa": 1.0,
            "piqa": 1.0,
            "qa4mre_2011": 1.0,
            "qa4mre_2012": 1.0,
            "qa4mre_2013": 1.0,
            "qnli": 1.0,
            "qqp": 2.0,
            "rte": 1.0,
            "sciq": 1.0,
            "scrolls_contractnli": 2,
            "scrolls_quality": 2,
            "sst2": 1.0,
            "swag": 1.0,
            "tinyGSM8k": 0.0,
            "tinyMMLU": 0.0,
            "tinyTruthfulQA": 0.0,
            "triviaqa": 3.0,
            "winogrande": 1.0,
            "wnli": 2.0,
            "wsc273": 1.0
        },
        "n-shot": {
            "arc_challenge": 0,
            "arc_easy": 0,
            "blimp_adjunct_island_filtered": 0,
            "blimp_anaphor_gender_agreement_filtered": 0,
            "blimp_anaphor_number_agreement_filtered": 0,
            "blimp_animate_subject_passive_filtered": 0,
            "blimp_animate_subject_trans_filtered": 0,
            "blimp_causative_filtered": 0,
            "blimp_complex_NP_island_filtered": 0,
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
            "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
            "blimp_determiner_noun_agreement_1_filtered": 0,
            "blimp_determiner_noun_agreement_2_filtered": 0,
            "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
            "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
            "blimp_distractor_agreement_relational_noun_filtered": 0,
            "blimp_distractor_agreement_relative_clause_filtered": 0,
            "blimp_drop_argument_filtered": 0,
            "blimp_ellipsis_n_bar_1_filtered": 0,
            "blimp_ellipsis_n_bar_2_filtered": 0,
            "blimp_existential_there_object_raising_filtered": 0,
            "blimp_existential_there_quantifiers_1_filtered": 0,
            "blimp_existential_there_quantifiers_2_filtered": 0,
            "blimp_existential_there_subject_raising_filtered": 0,
            "blimp_expletive_it_object_raising_filtered": 0,
            "blimp_inchoative_filtered": 0,
            "blimp_intransitive_filtered": 0,
            "blimp_irregular_past_participle_adjectives_filtered": 0,
            "blimp_irregular_past_participle_verbs_filtered": 0,
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
            "blimp_left_branch_island_echo_question_filtered": 0,
            "blimp_left_branch_island_simple_question_filtered": 0,
            "blimp_matrix_question_npi_licensor_present_filtered": 0,
            "blimp_npi_present_1_filtered": 0,
            "blimp_npi_present_2_filtered": 0,
            "blimp_only_npi_licensor_present_filtered": 0,
            "blimp_only_npi_scope_filtered": 0,
            "blimp_passive_1_filtered": 0,
            "blimp_passive_2_filtered": 0,
            "blimp_principle_A_c_command_filtered": 0,
            "blimp_principle_A_case_1_filtered": 0,
            "blimp_principle_A_case_2_filtered": 0,
            "blimp_principle_A_domain_1_filtered": 0,
            "blimp_principle_A_domain_2_filtered": 0,
            "blimp_principle_A_domain_3_filtered": 0,
            "blimp_principle_A_reconstruction_filtered": 0,
            "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
            "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
            "blimp_sentential_negation_npi_licensor_present_filtered": 0,
            "blimp_sentential_negation_npi_scope_filtered": 0,
            "blimp_sentential_subject_island_filtered": 0,
            "blimp_superlative_quantifiers_1_filtered": 0,
            "blimp_superlative_quantifiers_2_filtered": 0,
            "blimp_supplement_hypernym": 0,
            "blimp_supplement_qa_congruence_easy": 0,
            "blimp_supplement_qa_congruence_tricky": 0,
            "blimp_supplement_subject_aux_inversion": 0,
            "blimp_supplement_turn_taking": 0,
            "blimp_tough_vs_raising_1_filtered": 0,
            "blimp_tough_vs_raising_2_filtered": 0,
            "blimp_transitive_filtered": 0,
            "blimp_wh_island_filtered": 0,
            "blimp_wh_questions_object_gap_filtered": 0,
            "blimp_wh_questions_subject_gap_filtered": 0,
            "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
            "blimp_wh_vs_that_no_gap_filtered": 0,
            "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
            "blimp_wh_vs_that_with_gap_filtered": 0,
            "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
            "cola": 0,
            "hellaswag": 0,
            "inverse_scaling_hindsight_neglect_10shot": 0,
            "inverse_scaling_into_the_unknown": 0,
            "inverse_scaling_memo_trap": 0,
            "inverse_scaling_modus_tollens": 0,
            "inverse_scaling_neqa": 0,
            "inverse_scaling_pattern_matching_suppression": 0,
            "inverse_scaling_quote_repetition": 0,
            "inverse_scaling_redefine_math": 0,
            "inverse_scaling_repetitive_algebra": 0,
            "inverse_scaling_sig_figs": 0,
            "inverse_scaling_winobias_antistereotype": 0,
            "lambada_openai": 0,
            "mathqa": 0,
            "mnli": 0,
            "mnli_mismatch": 0,
            "mrpc": 0,
            "openbookqa": 0,
            "piqa": 0,
            "qa4mre_2011": 0,
            "qa4mre_2012": 0,
            "qa4mre_2013": 0,
            "qnli": 0,
            "qqp": 0,
            "rte": 0,
            "sciq": 0,
            "scrolls_contractnli": 0,
            "scrolls_quality": 0,
            "sst2": 0,
            "swag": 0,
            "tinyGSM8k": 5,
            "tinyMMLU": 0,
            "tinyTruthfulQA": 0,
            "triviaqa": 0,
            "winogrande": 0,
            "wnli": 0,
            "wsc273": 0
        },
        "higher_is_better": {
            "arc_challenge": {
                "acc": true,
                "acc_norm": true
            },
            "arc_easy": {
                "acc": true,
                "acc_norm": true
            },
            "blimp_adjunct_island_filtered": {
                "acc": true
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "acc": true
            },
            "blimp_anaphor_number_agreement_filtered": {
                "acc": true
            },
            "blimp_animate_subject_passive_filtered": {
                "acc": true
            },
            "blimp_animate_subject_trans_filtered": {
                "acc": true
            },
            "blimp_causative_filtered": {
                "acc": true
            },
            "blimp_complex_NP_island_filtered": {
                "acc": true
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "acc": true
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "acc": true
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "acc": true
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "acc": true
            },
            "blimp_drop_argument_filtered": {
                "acc": true
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "acc": true
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "acc": true
            },
            "blimp_existential_there_object_raising_filtered": {
                "acc": true
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "acc": true
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "acc": true
            },
            "blimp_existential_there_subject_raising_filtered": {
                "acc": true
            },
            "blimp_expletive_it_object_raising_filtered": {
                "acc": true
            },
            "blimp_inchoative_filtered": {
                "acc": true
            },
            "blimp_intransitive_filtered": {
                "acc": true
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "acc": true
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "acc": true
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "acc": true
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "acc": true
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "acc": true
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "acc": true
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_npi_present_1_filtered": {
                "acc": true
            },
            "blimp_npi_present_2_filtered": {
                "acc": true
            },
            "blimp_only_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_only_npi_scope_filtered": {
                "acc": true
            },
            "blimp_passive_1_filtered": {
                "acc": true
            },
            "blimp_passive_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_c_command_filtered": {
                "acc": true
            },
            "blimp_principle_A_case_1_filtered": {
                "acc": true
            },
            "blimp_principle_A_case_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_1_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_3_filtered": {
                "acc": true
            },
            "blimp_principle_A_reconstruction_filtered": {
                "acc": true
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "acc": true
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "acc": true
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "acc": true
            },
            "blimp_sentential_subject_island_filtered": {
                "acc": true
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "acc": true
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "acc": true
            },
            "blimp_supplement_hypernym": {
                "acc": true
            },
            "blimp_supplement_qa_congruence_easy": {
                "acc": true
            },
            "blimp_supplement_qa_congruence_tricky": {
                "acc": true
            },
            "blimp_supplement_subject_aux_inversion": {
                "acc": true
            },
            "blimp_supplement_turn_taking": {
                "acc": true
            },
            "blimp_tough_vs_raising_1_filtered": {
                "acc": true
            },
            "blimp_tough_vs_raising_2_filtered": {
                "acc": true
            },
            "blimp_transitive_filtered": {
                "acc": true
            },
            "blimp_wh_island_filtered": {
                "acc": true
            },
            "blimp_wh_questions_object_gap_filtered": {
                "acc": true
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "acc": true
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "acc": true
            },
            "cola": {
                "mcc": true
            },
            "hellaswag": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_into_the_unknown": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_memo_trap": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_modus_tollens": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_neqa": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_pattern_matching_suppression": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_quote_repetition": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_redefine_math": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_repetitive_algebra": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_sig_figs": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_winobias_antistereotype": {
                "acc": true,
                "acc_norm": true
            },
            "lambada_openai": {
                "perplexity": false,
                "acc": true
            },
            "mathqa": {
                "acc": true,
                "acc_norm": true
            },
            "mnli": {
                "acc": true
            },
            "mnli_mismatch": {
                "acc": true
            },
            "mrpc": {
                "acc": true
            },
            "openbookqa": {
                "acc": true,
                "acc_norm": true
            },
            "piqa": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2011": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2012": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2013": {
                "acc": true,
                "acc_norm": true
            },
            "qnli": {
                "acc": true
            },
            "qqp": {
                "acc": true
            },
            "rte": {
                "acc": true
            },
            "sciq": {
                "acc": true,
                "acc_norm": true
            },
            "scrolls_contractnli": {
                "em": true,
                "acc": true,
                "acc_norm": true
            },
            "scrolls_quality": {
                "em": true,
                "acc": true,
                "acc_norm": true
            },
            "sst2": {
                "acc": true
            },
            "swag": {
                "acc": true,
                "acc_norm": true
            },
            "tinyGSM8k": {
                "exact_match": true
            },
            "tinyMMLU": {
                "acc_norm": true
            },
            "tinyTruthfulQA": {
                "acc": true
            },
            "triviaqa": {
                "exact_match": true
            },
            "winogrande": {
                "acc": true
            },
            "wnli": {
                "acc": true
            },
            "wsc273": {
                "acc": true
            }
        },
        "n-samples": {
            "wsc273": {
                "original": 273,
                "effective": 273
            },
            "winogrande": {
                "original": 1267,
                "effective": 1267
            },
            "triviaqa": {
                "original": 17944,
                "effective": 17944
            },
            "tinyTruthfulQA": {
                "original": 100,
                "effective": 100
            },
            "tinyMMLU": {
                "original": 100,
                "effective": 100
            },
            "tinyGSM8k": {
                "original": 100,
                "effective": 100
            },
            "swag": {
                "original": 20006,
                "effective": 20006
            },
            "scrolls_quality": {
                "original": 2984,
                "effective": 2984
            },
            "scrolls_contractnli": {
                "original": 2984,
                "effective": 2984
            },
            "sciq": {
                "original": 1000,
                "effective": 1000
            },
            "qa4mre_2012": {
                "original": 160,
                "effective": 160
            },
            "qa4mre_2011": {
                "original": 120,
                "effective": 120
            },
            "qa4mre_2013": {
                "original": 284,
                "effective": 284
            },
            "piqa": {
                "original": 1838,
                "effective": 1838
            },
            "openbookqa": {
                "original": 500,
                "effective": 500
            },
            "mathqa": {
                "original": 2985,
                "effective": 2985
            },
            "lambada_openai": {
                "original": 5153,
                "effective": 5153
            },
            "inverse_scaling_pattern_matching_suppression": {
                "original": 1428,
                "effective": 1428
            },
            "inverse_scaling_redefine_math": {
                "original": 900,
                "effective": 900
            },
            "inverse_scaling_repetitive_algebra": {
                "original": 1000,
                "effective": 1000
            },
            "inverse_scaling_sig_figs": {
                "original": 20897,
                "effective": 20897
            },
            "inverse_scaling_memo_trap": {
                "original": 936,
                "effective": 936
            },
            "inverse_scaling_quote_repetition": {
                "original": 300,
                "effective": 300
            },
            "inverse_scaling_into_the_unknown": {
                "original": 1824,
                "effective": 1824
            },
            "inverse_scaling_neqa": {
                "original": 300,
                "effective": 300
            },
            "inverse_scaling_modus_tollens": {
                "original": 1236,
                "effective": 1236
            },
            "inverse_scaling_winobias_antistereotype": {
                "original": 412,
                "effective": 412
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "original": 315,
                "effective": 315
            },
            "hellaswag": {
                "original": 10042,
                "effective": 10042
            },
            "mrpc": {
                "original": 408,
                "effective": 408
            },
            "sst2": {
                "original": 872,
                "effective": 872
            },
            "qqp": {
                "original": 40430,
                "effective": 40430
            },
            "qnli": {
                "original": 5463,
                "effective": 5463
            },
            "rte": {
                "original": 277,
                "effective": 277
            },
            "mnli": {
                "original": 9815,
                "effective": 9815
            },
            "mnli_mismatch": {
                "original": 9832,
                "effective": 9832
            },
            "cola": {
                "original": 1043,
                "effective": 1043
            },
            "wnli": {
                "original": 71,
                "effective": 71
            },
            "blimp_supplement_qa_congruence_easy": {
                "original": 64,
                "effective": 64
            },
            "blimp_supplement_qa_congruence_tricky": {
                "original": 165,
                "effective": 165
            },
            "blimp_supplement_turn_taking": {
                "original": 280,
                "effective": 280
            },
            "blimp_supplement_subject_aux_inversion": {
                "original": 3867,
                "effective": 3867
            },
            "blimp_supplement_hypernym": {
                "original": 842,
                "effective": 842
            },
            "blimp_anaphor_number_agreement_filtered": {
                "original": 931,
                "effective": 931
            },
            "blimp_wh_questions_object_gap_filtered": {
                "original": 859,
                "effective": 859
            },
            "blimp_sentential_subject_island_filtered": {
                "original": 961,
                "effective": 961
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "original": 875,
                "effective": 875
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "original": 840,
                "effective": 840
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "original": 898,
                "effective": 898
            },
            "blimp_causative_filtered": {
                "original": 818,
                "effective": 818
            },
            "blimp_tough_vs_raising_1_filtered": {
                "original": 948,
                "effective": 948
            },
            "blimp_principle_A_domain_1_filtered": {
                "original": 914,
                "effective": 914
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "original": 871,
                "effective": 871
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "original": 971,
                "effective": 971
            },
            "blimp_drop_argument_filtered": {
                "original": 920,
                "effective": 920
            },
            "blimp_principle_A_domain_3_filtered": {
                "original": 941,
                "effective": 941
            },
            "blimp_principle_A_reconstruction_filtered": {
                "original": 967,
                "effective": 967
            },
            "blimp_inchoative_filtered": {
                "original": 855,
                "effective": 855
            },
            "blimp_animate_subject_trans_filtered": {
                "original": 923,
                "effective": 923
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "original": 820,
                "effective": 820
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "original": 919,
                "effective": 919
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "original": 681,
                "effective": 681
            },
            "blimp_tough_vs_raising_2_filtered": {
                "original": 920,
                "effective": 920
            },
            "blimp_wh_island_filtered": {
                "original": 960,
                "effective": 960
            },
            "blimp_transitive_filtered": {
                "original": 868,
                "effective": 868
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "original": 947,
                "effective": 947
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "original": 804,
                "effective": 804
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "original": 857,
                "effective": 857
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "original": 929,
                "effective": 929
            },
            "blimp_animate_subject_passive_filtered": {
                "original": 895,
                "effective": 895
            },
            "blimp_only_npi_licensor_present_filtered": {
                "original": 882,
                "effective": 882
            },
            "blimp_expletive_it_object_raising_filtered": {
                "original": 759,
                "effective": 759
            },
            "blimp_only_npi_scope_filtered": {
                "original": 837,
                "effective": 837
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "original": 910,
                "effective": 910
            },
            "blimp_existential_there_object_raising_filtered": {
                "original": 812,
                "effective": 812
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "original": 961,
                "effective": 961
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "original": 919,
                "effective": 919
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "original": 933,
                "effective": 933
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "original": 941,
                "effective": 941
            },
            "blimp_principle_A_case_2_filtered": {
                "original": 915,
                "effective": 915
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "original": 802,
                "effective": 802
            },
            "blimp_principle_A_domain_2_filtered": {
                "original": 915,
                "effective": 915
            },
            "blimp_principle_A_case_1_filtered": {
                "original": 912,
                "effective": 912
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "original": 890,
                "effective": 890
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "original": 986,
                "effective": 986
            },
            "blimp_passive_2_filtered": {
                "original": 903,
                "effective": 903
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "original": 871,
                "effective": 871
            },
            "blimp_passive_1_filtered": {
                "original": 840,
                "effective": 840
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "original": 718,
                "effective": 718
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "original": 828,
                "effective": 828
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "original": 951,
                "effective": 951
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "original": 861,
                "effective": 861
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "original": 945,
                "effective": 945
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "original": 931,
                "effective": 931
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "original": 788,
                "effective": 788
            },
            "blimp_intransitive_filtered": {
                "original": 868,
                "effective": 868
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "original": 930,
                "effective": 930
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "original": 929,
                "effective": 929
            },
            "blimp_npi_present_1_filtered": {
                "original": 909,
                "effective": 909
            },
            "blimp_adjunct_island_filtered": {
                "original": 928,
                "effective": 928
            },
            "blimp_principle_A_c_command_filtered": {
                "original": 946,
                "effective": 946
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "original": 892,
                "effective": 892
            },
            "blimp_npi_present_2_filtered": {
                "original": 914,
                "effective": 914
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "original": 942,
                "effective": 942
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "original": 979,
                "effective": 979
            },
            "blimp_existential_there_subject_raising_filtered": {
                "original": 924,
                "effective": 924
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "original": 911,
                "effective": 911
            },
            "blimp_complex_NP_island_filtered": {
                "original": 846,
                "effective": 846
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "original": 949,
                "effective": 949
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "original": 906,
                "effective": 906
            },
            "arc_easy": {
                "original": 2376,
                "effective": 2376
            },
            "arc_challenge": {
                "original": 1172,
                "effective": 1172
            }
        },
        "config": {
            "model": "modis",
            "model_args": "pretrained=LIBRARY_HOLD/14M/mamba2_14M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
            "model_num_parameters": 5608454,
            "model_dtype": "torch.bfloat16",
            "model_revision": "main",
            "batch_size": "auto",
            "batch_sizes": [
                64
            ],
            "device": null,
            "use_cache": null,
            "limit": null,
            "bootstrap_iters": 100000,
            "gen_kwargs": null,
            "random_seed": 0,
            "numpy_seed": 1234,
            "torch_seed": 1234,
            "fewshot_seed": 1234
        },
        "date": 1726581210.3493984,
        "tokenizer_pad_token": [
            "</s>",
            "2"
        ],
        "tokenizer_eos_token": [
            "</s>",
            "2"
        ],
        "tokenizer_bos_token": [
            "<s>",
            "1"
        ],
        "eot_token_id": 2,
        "max_length": 2048,
        "task_hashes": {},
        "model_source": "modis",
        "model_name": "LIBRARY_HOLD/14M/mamba2_14M",
        "model_name_sanitized": "LIBRARY_HOLD__14M__mamba2_14M",
        "system_instruction": null,
        "system_instruction_sha": null,
        "fewshot_as_multiturn": false,
        "chat_template": null,
        "chat_template_sha": null,
        "start_time": 6731963.232247301,
        "end_time": 6732529.831295447,
        "total_evaluation_time_seconds": "566.5990481460467"
    }
}