{
    "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,58.90098810195923,8.1016,16.25,0.0009090909090909091,9.776317847645862e-05,1722539697.9042962,10\n1,66.22332453727722,3.4382,12.8125,0.0009992806975490389,0.00019552635695291724,1722539705.2266326,20\n2,73.53554511070251,0.6181,1.671875,0.0009967971720564162,0.0002932895354293759,1722539712.5388532,30\n3,81.0371925830841,0.1418,0.0810546875,0.0009925503422478985,0.0003910527139058345,1722539720.0405006,40\n4,88.35393953323364,0.1077,0.03515625,0.0009865569684205477,0.0004888158923822931,1722539727.3572476,50\n5,95.82877159118652,0.1031,0.03369140625,0.0009788407036827485,0.0005865790708587518,1722539734.8320796,60\n6,103.14998817443848,0.096,0.02685546875,0.0009694320006061949,0.0006843422493352104,1722539742.1532962,70\n7,110.47978448867798,0.0949,0.0208740234375,0.0009583679910435026,0.000782105427811669,1722539749.4830925,80\n8,117.80422759056091,0.0926,0.019775390625,0.0009456923395857503,0.0008798686062881277,1722539756.8075356,90\n9,125.15391683578491,0.0879,0.052001953125,0.0009314550712382874,0.0009776317847645863,1722539764.157225,100\n10,132.6273229122162,0.0871,0.017333984375,0.0009157123739948923,0.0010753949632410448,1722539771.630631,110\n11,139.96944904327393,0.086,0.0177001953125,0.0008985263770894302,0.0011731581417175035,1722539778.972757,120\n12,147.315411567688,0.0859,0.01806640625,0.0008799649058001521,0.0012709213201939622,1722539786.3187196,130\n13,154.65441823005676,0.0848,0.017578125,0.0008601012137743068,0.0013686844986704207,1722539793.6577263,140\n14,162.01304960250854,0.0848,0.0186767578125,0.000839013693929463,0.0014664476771468794,1722539801.0163577,150\n15,169.50705218315125,0.0837,0.0177001953125,0.0008167855690724767,0.001564210855623338,1722539808.5103602,160\n16,176.86251163482666,0.0828,0.017578125,0.0007935045634570941,0.0016619740340997966,1722539815.8658197,170\n17,184.21773266792297,0.0815,0.01953125,0.0007692625565763995,0.0017597372125762554,1722539823.2210407,180\n18,191.56636309623718,0.0821,0.0184326171875,0.0007441552205564316,0.0018575003910527139,1722539830.5696712,190\n19,198.9173707962036,0.0811,0.017578125,0.0007182816425820101,0.0019552635695291726,1722539837.9206789,200\n20,206.41057968139648,0.0806,0.0235595703125,0.0006917439338448872,0.0020530267480056313,1722539845.4138877,210\n21,213.75915694236755,0.08,0.0179443359375,0.0006646468265575219,0.0021507899264820896,1722539852.762465,220\n22,221.11605262756348,0.0794,0.017822265625,0.0006370972606228872,0.0022485531049585483,1722539860.1193607,230\n23,228.47396421432495,0.0785,0.0179443359375,0.0006092039615915271,0.002346316283435007,1722539867.4772723,240\n24,235.82758569717407,0.0778,0.0206298828125,0.0005810770115714828,0.0024440794619114657,1722539874.8308938,250\n25,243.32452058792114,0.0805,0.02001953125,0.0005528274147845017,0.0025418426403879244,1722539882.3278286,260\n26,250.67862963676453,0.076,0.017822265625,0.000524566659483089,0.0026396058188643827,1722539889.6819377,270\n27,258.05287623405457,0.077,0.0220947265625,0.0004964062779573087,0.0027373689973408414,1722539897.0561843,280\n28,265.4147641658783,0.0764,0.0179443359375,0.0004684574063677881,0.0028351321758173,1722539904.4180722,290\n29,272.7754979133606,0.0746,0.0181884765625,0.00044083034614206674,0.002932895354293759,1722539911.778806,300\n30,280.2954750061035,0.0773,0.022216796875,0.00041363412866525186,0.0030306585327702176,1722539919.298783,310\n31,287.65432476997375,0.0754,0.019287109375,0.00038697608498295446,0.003128421711246676,1722539926.6576328,320\n32,295.0259156227112,0.0734,0.0235595703125,0.0003609614222146872,0.0032261848897231346,1722539934.0292237,330\n33,302.3843150138855,0.076,0.019775390625,0.0003356928083494274,0.0033239480681995933,1722539941.387623,340\n34,309.7504653930664,0.073,0.0186767578125,0.0003112699670619696,0.003421711246676052,1722539948.7537735,350\n35,317.26962900161743,0.075,0.021240234375,0.00028778928414914084,0.0035194744251525107,1722539956.272937,360\n36,324.6344392299652,0.0718,0.0198974609375,0.000265343427139094,0.003617237603628969,1722539963.6377473,370\n37,331.98594665527344,0.0753,0.0184326171875,0.00024402097957491138,0.0037150007821054277,1722539970.9892547,380\n38,339.348965883255,0.0728,0.018798828125,0.00022390609141582902,0.0038127639605818864,1722539978.352274,390\n39,346.7106683254242,0.0749,0.0194091796875,0.00020507814693579264,0.003910527139058345,1722539985.7139764,400\n40,354.2269504070282,0.0738,0.0247802734375,0.00018761145142999515,0.004008290317534803,1722539993.2302585,410\n41,361.59326338768005,0.0757,0.0179443359375,0.00017157493796582396,0.004106053496011263,1722540000.5965714,420\n42,368.95870304107666,0.0737,0.0181884765625,0.00015703189533553604,0.004203816674487721,1722540007.962011,430\n43,376.3172240257263,0.0732,0.018798828125,0.0001440397182843088,0.004301579852964179,1722540015.320532,440\n44,383.68504881858826,0.0713,0.0186767578125,0.00013264968099940244,0.004399343031440638,1722540022.6883569,450\n45,391.19620275497437,0.0751,0.01904296875,0.0001229067347543675,0.004497106209917097,1722540030.1995108,460\n46,398.565238237381,0.0749,0.017822265625,0.00011484933050690426,0.004594869388393556,1722540037.5685463,470\n47,405.9341254234314,0.075,0.0203857421875,0.00010850926715049972,0.004692632566870014,1722540044.9374335,480\n48,413.2934145927429,0.0703,0.018310546875,0.00010391156601872209,0.004790395745346472,1722540052.2967227,490\n49,420.65375900268555,0.0762,0.01904296875,0.00010107437213744867,0.0048881589238229314,1722540059.657067,500\n50,428.16658449172974,0.0747,0.020263671875,0.00010000888261473832,0.00498592210229939,1722540067.1698925,510\n51,429.5525679588318,,,,0.004995698420147036,1722540068.555876,511\n",
    "system_metrics.csv": "GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),GPU 2 Time Spent Accessing Memory (%),GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),_runtime,GPU 1 Memory Allocated (%),GPU 4 Memory Allocated (%),GPU 1 Utilization (%),Process CPU Utilization (%),Process CPU Threads In Use,System Memory Utilization (%),GPU 4 Utilization (%),GPU 2 Memory Allocated (%),GPU 5 Utilization (%),Process Memory In Use (non-swap) (%),GPU 5 Memory Allocated (%),GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),GPU 0 Memory Allocated (%)\n0.0,0.0,0.0,0.0,0.0,0.0,0.13,1.21,60.855633,1.2,1.21,0.0,0.01,23,23.61,0.0,1.21,0.0,0.14,1.2,0.0,0.2,3.04\n75.47,67.67,65.27,65.73,70.33,72.33,84.13,75.56,90.857477,74.45,78.96,76.67,0.0,23,25.79,80.0,75.53,80.27,0.14,76.0,65.73,76.2,82.7\n99.2,96.33,98.0,96.33,96.47,97.07,99.13,86.47,120.859572,86.54,86.47,98.87,0.0,23,26.35,98.73,86.47,98.87,0.14,86.43,97.2,99.67,90.08\n,,,,,,,,150.861543,,,,0.0,23,26.41,,,,0.14,,,,\n98.33,93.07,93.27,91.27,93.0,92.33,98.33,86.47,180.863351,86.54,86.47,98.33,0.0,23,26.5,97.87,86.47,98.33,0.14,86.43,93.67,98.33,90.08\n99.67,94.87,96.13,91.27,94.87,95.0,98.8,86.47,210.865643,86.54,86.47,99.0,0.0,23,26.51,98.93,86.47,97.53,0.14,86.43,96.27,99.33,90.08\n99.0,92.67,93.33,91.47,93.13,93.27,98.2,86.47,240.867819,86.54,86.47,97.8,0.0,23,26.6,98.07,86.47,97.73,0.14,86.43,94.67,98.4,90.08\n,,,,,,,,270.869752,,,,0.0,23,26.65,,,,0.14,,,,\n98.6,93.6,93.73,95.27,93.47,93.73,98.2,86.47,300.871413,86.54,86.47,98.33,0.0,23,26.7,98.33,86.47,98.8,0.14,86.43,95.2,98.33,90.08\n97.6,95.93,93.8,94.47,97.6,96.13,99.27,86.47,330.873438,86.54,86.47,99.33,0.0,23,26.75,99.33,86.47,99.0,0.14,86.43,92.4,97.47,90.08\n100.0,98.0,97.4,98.13,98.13,97.33,99.27,86.47,360.875328,86.54,86.47,99.33,0.0,23,26.8,99.67,86.47,100.0,0.14,86.43,97.73,99.6,90.08\n,,,,,,,,390.877248,,,,0.0,23,26.82,,,,0.14,,,,\n98.4,90.27,88.0,93.93,92.4,92.93,97.87,86.47,420.878833,86.54,86.47,97.6,0.0,23,26.87,97.47,86.47,98.87,0.14,86.43,88.53,97.27,90.08\n96.13,88.0,87.73,89.0,90.2,88.8,96.07,86.47,436.337285,86.54,86.47,96.4,0.0,23,26.9,96.27,86.47,96.27,0.14,86.43,88.33,96.2,90.08\n",
    "trainer_state.json": {
        "best_metric": null,
        "best_model_checkpoint": null,
        "epoch": 0.004995698420147036,
        "eval_steps": 500,
        "global_step": 511,
        "is_hyper_param_search": false,
        "is_local_process_zero": true,
        "is_world_process_zero": true,
        "logging_steps": 10,
        "max_steps": 511,
        "num_input_tokens_seen": 0,
        "num_train_epochs": 1,
        "save_steps": 50,
        "total_flos": 8220550272909312.0,
        "train_batch_size": 42,
        "trial_name": null,
        "trial_params": null
    },
    "eval_results.json": {
        "results": {
            "arc_challenge": {
                "alias": "arc_challenge",
                "acc,none": 0.2098976109215017,
                "acc_stderr,none": 0.011900548748047421,
                "acc_norm,none": 0.2832764505119454,
                "acc_norm_stderr,none": 0.013167478735134576
            },
            "arc_easy": {
                "alias": "arc_easy",
                "acc,none": 0.25547138047138046,
                "acc_stderr,none": 0.00894911355166557,
                "acc_norm,none": 0.26262626262626265,
                "acc_norm_stderr,none": 0.00902986177676375
            },
            "blimp_adjunct_island_filtered": {
                "alias": "blimp_adjunct_island_filtered",
                "acc,none": 0.6422413793103449,
                "acc_stderr,none": 0.015743610200609957
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "alias": "blimp_anaphor_gender_agreement_filtered",
                "acc,none": 0.6107106076210093,
                "acc_stderr,none": 0.01565554351146481
            },
            "blimp_anaphor_number_agreement_filtered": {
                "alias": "blimp_anaphor_number_agreement_filtered",
                "acc,none": 0.6305048335123523,
                "acc_stderr,none": 0.015827310289493638
            },
            "blimp_animate_subject_passive_filtered": {
                "alias": "blimp_animate_subject_passive_filtered",
                "acc,none": 0.6581005586592179,
                "acc_stderr,none": 0.015864506461604644
            },
            "blimp_animate_subject_trans_filtered": {
                "alias": "blimp_animate_subject_trans_filtered",
                "acc,none": 0.789815817984832,
                "acc_stderr,none": 0.013418299078426984
            },
            "blimp_causative_filtered": {
                "alias": "blimp_causative_filtered",
                "acc,none": 0.45232273838630804,
                "acc_stderr,none": 0.017413077667007393
            },
            "blimp_complex_NP_island_filtered": {
                "alias": "blimp_complex_NP_island_filtered",
                "acc,none": 0.6288416075650118,
                "acc_stderr,none": 0.016619651879380443
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                "acc,none": 0.5960264900662252,
                "acc_stderr,none": 0.016311163285950867
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                "acc,none": 0.5932560590094836,
                "acc_stderr,none": 0.01595428951281341
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_1_filtered",
                "acc,none": 0.6232508073196986,
                "acc_stderr,none": 0.015906828617110975
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_2_filtered",
                "acc,none": 0.6186895810955961,
                "acc_stderr,none": 0.015927010375606475
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                "acc,none": 0.6211453744493393,
                "acc_stderr,none": 0.018602806486938704
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                "acc,none": 0.6121951219512195,
                "acc_stderr,none": 0.017025881849698363
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                "acc,none": 0.6004250797024442,
                "acc_stderr,none": 0.01597587287818588
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                "acc,none": 0.6824512534818942,
                "acc_stderr,none": 0.017385270064231222
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                "acc,none": 0.6333333333333333,
                "acc_stderr,none": 0.016636842604595598
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                "acc,none": 0.5809217577706324,
                "acc_stderr,none": 0.016162123537842403
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "alias": "blimp_distractor_agreement_relational_noun_filtered",
                "acc,none": 0.6434010152284264,
                "acc_stderr,none": 0.017074325481177082
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "alias": "blimp_distractor_agreement_relative_clause_filtered",
                "acc,none": 0.6245694603903559,
                "acc_stderr,none": 0.01641706602716501
            },
            "blimp_drop_argument_filtered": {
                "alias": "blimp_drop_argument_filtered",
                "acc,none": 0.7434782608695653,
                "acc_stderr,none": 0.014405836098369129
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "alias": "blimp_ellipsis_n_bar_1_filtered",
                "acc,none": 0.6870324189526185,
                "acc_stderr,none": 0.016384079018038452
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "alias": "blimp_ellipsis_n_bar_2_filtered",
                "acc,none": 0.3695652173913043,
                "acc_stderr,none": 0.016784672554205543
            },
            "blimp_existential_there_object_raising_filtered": {
                "alias": "blimp_existential_there_object_raising_filtered",
                "acc,none": 0.7229064039408867,
                "acc_stderr,none": 0.015716066338677316
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "alias": "blimp_existential_there_quantifiers_1_filtered",
                "acc,none": 0.7010752688172043,
                "acc_stderr,none": 0.015019497062226998
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "alias": "blimp_existential_there_quantifiers_2_filtered",
                "acc,none": 0.7200878155872668,
                "acc_stderr,none": 0.014882741440347949
            },
            "blimp_existential_there_subject_raising_filtered": {
                "alias": "blimp_existential_there_subject_raising_filtered",
                "acc,none": 0.7229437229437229,
                "acc_stderr,none": 0.014731107275426526
            },
            "blimp_expletive_it_object_raising_filtered": {
                "alias": "blimp_expletive_it_object_raising_filtered",
                "acc,none": 0.6469038208168643,
                "acc_stderr,none": 0.01735928224282403
            },
            "blimp_inchoative_filtered": {
                "alias": "blimp_inchoative_filtered",
                "acc,none": 0.5017543859649123,
                "acc_stderr,none": 0.017109542447857482
            },
            "blimp_intransitive_filtered": {
                "alias": "blimp_intransitive_filtered",
                "acc,none": 0.6543778801843319,
                "acc_stderr,none": 0.01615122700977644
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "alias": "blimp_irregular_past_participle_adjectives_filtered",
                "acc,none": 0.5327783558792925,
                "acc_stderr,none": 0.016102716495266456
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "alias": "blimp_irregular_past_participle_verbs_filtered",
                "acc,none": 0.6284501061571125,
                "acc_stderr,none": 0.015752488129908853
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                "acc,none": 0.5634328358208955,
                "acc_stderr,none": 0.01750204668123216
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                "acc,none": 0.5930493273542601,
                "acc_stderr,none": 0.01645801455784437
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "alias": "blimp_left_branch_island_echo_question_filtered",
                "acc,none": 0.5892291446673706,
                "acc_stderr,none": 0.01599544596070891
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "alias": "blimp_left_branch_island_simple_question_filtered",
                "acc,none": 0.6203995793901157,
                "acc_stderr,none": 0.015744805034065012
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                "acc,none": 0.573735199138859,
                "acc_stderr,none": 0.016233848750902936
            },
            "blimp_npi_present_1_filtered": {
                "alias": "blimp_npi_present_1_filtered",
                "acc,none": 0.5676567656765676,
                "acc_stderr,none": 0.01644047338924036
            },
            "blimp_npi_present_2_filtered": {
                "alias": "blimp_npi_present_2_filtered",
                "acc,none": 0.5700218818380745,
                "acc_stderr,none": 0.016384513567555443
            },
            "blimp_only_npi_licensor_present_filtered": {
                "alias": "blimp_only_npi_licensor_present_filtered",
                "acc,none": 0.34807256235827666,
                "acc_stderr,none": 0.016048948031183497
            },
            "blimp_only_npi_scope_filtered": {
                "alias": "blimp_only_npi_scope_filtered",
                "acc,none": 0.5949820788530465,
                "acc_stderr,none": 0.016977976329918636
            },
            "blimp_passive_1_filtered": {
                "alias": "blimp_passive_1_filtered",
                "acc,none": 0.5916666666666667,
                "acc_stderr,none": 0.016969341429077765
            },
            "blimp_passive_2_filtered": {
                "alias": "blimp_passive_2_filtered",
                "acc,none": 0.6101882613510521,
                "acc_stderr,none": 0.01623888147889582
            },
            "blimp_principle_A_c_command_filtered": {
                "alias": "blimp_principle_A_c_command_filtered",
                "acc,none": 0.7272727272727273,
                "acc_stderr,none": 0.014487619507083577
            },
            "blimp_principle_A_case_1_filtered": {
                "alias": "blimp_principle_A_case_1_filtered",
                "acc,none": 0.6271929824561403,
                "acc_stderr,none": 0.01602077223279628
            },
            "blimp_principle_A_case_2_filtered": {
                "alias": "blimp_principle_A_case_2_filtered",
                "acc,none": 0.5202185792349727,
                "acc_stderr,none": 0.016525002906666565
            },
            "blimp_principle_A_domain_1_filtered": {
                "alias": "blimp_principle_A_domain_1_filtered",
                "acc,none": 0.7428884026258206,
                "acc_stderr,none": 0.014463960722079366
            },
            "blimp_principle_A_domain_2_filtered": {
                "alias": "blimp_principle_A_domain_2_filtered",
                "acc,none": 0.7049180327868853,
                "acc_stderr,none": 0.015085772270178734
            },
            "blimp_principle_A_domain_3_filtered": {
                "alias": "blimp_principle_A_domain_3_filtered",
                "acc,none": 0.5844845908607864,
                "acc_stderr,none": 0.01607371165238863
            },
            "blimp_principle_A_reconstruction_filtered": {
                "alias": "blimp_principle_A_reconstruction_filtered",
                "acc,none": 0.5925542916235781,
                "acc_stderr,none": 0.015809217870308
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                "acc,none": 0.5247191011235955,
                "acc_stderr,none": 0.016748955813855562
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                "acc,none": 0.5375661375661376,
                "acc_stderr,none": 0.016227617744363
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                "acc,none": 0.7889009793253536,
                "acc_stderr,none": 0.013468927532375566
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "alias": "blimp_sentential_negation_npi_scope_filtered",
                "acc,none": 0.6440872560275546,
                "acc_stderr,none": 0.01623246578851257
            },
            "blimp_sentential_subject_island_filtered": {
                "alias": "blimp_sentential_subject_island_filtered",
                "acc,none": 0.6732570239334027,
                "acc_stderr,none": 0.015137632591552012
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "alias": "blimp_superlative_quantifiers_1_filtered",
                "acc,none": 0.5689479060265578,
                "acc_stderr,none": 0.015835497201869744
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "alias": "blimp_superlative_quantifiers_2_filtered",
                "acc,none": 0.6957403651115619,
                "acc_stderr,none": 0.014659786823540947
            },
            "blimp_supplement_hypernym": {
                "alias": "blimp_supplement_hypernym",
                "acc,none": 0.5997624703087886,
                "acc_stderr,none": 0.01689470255602228
            },
            "blimp_supplement_qa_congruence_easy": {
                "alias": "blimp_supplement_qa_congruence_easy",
                "acc,none": 0.484375,
                "acc_stderr,none": 0.06296331249416676
            },
            "blimp_supplement_qa_congruence_tricky": {
                "alias": "blimp_supplement_qa_congruence_tricky",
                "acc,none": 0.40606060606060607,
                "acc_stderr,none": 0.03834816355401181
            },
            "blimp_supplement_subject_aux_inversion": {
                "alias": "blimp_supplement_subject_aux_inversion",
                "acc,none": 0.7264028963020429,
                "acc_stderr,none": 0.007169908386916898
            },
            "blimp_supplement_turn_taking": {
                "alias": "blimp_supplement_turn_taking",
                "acc,none": 0.7,
                "acc_stderr,none": 0.027435163058436792
            },
            "blimp_tough_vs_raising_1_filtered": {
                "alias": "blimp_tough_vs_raising_1_filtered",
                "acc,none": 0.2478902953586498,
                "acc_stderr,none": 0.014031217903142242
            },
            "blimp_tough_vs_raising_2_filtered": {
                "alias": "blimp_tough_vs_raising_2_filtered",
                "acc,none": 0.8510869565217392,
                "acc_stderr,none": 0.011743446715595351
            },
            "blimp_transitive_filtered": {
                "alias": "blimp_transitive_filtered",
                "acc,none": 0.5576036866359447,
                "acc_stderr,none": 0.016867822375824286
            },
            "blimp_wh_island_filtered": {
                "alias": "blimp_wh_island_filtered",
                "acc,none": 0.6208333333333333,
                "acc_stderr,none": 0.015667268456630766
            },
            "blimp_wh_questions_object_gap_filtered": {
                "alias": "blimp_wh_questions_object_gap_filtered",
                "acc,none": 0.6286379511059371,
                "acc_stderr,none": 0.01649511750659132
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "alias": "blimp_wh_questions_subject_gap_filtered",
                "acc,none": 0.6536748329621381,
                "acc_stderr,none": 0.01588644366155871
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                "acc,none": 0.6382730455075846,
                "acc_stderr,none": 0.016423163096122517
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "alias": "blimp_wh_vs_that_no_gap_filtered",
                "acc,none": 0.6353077816492451,
                "acc_stderr,none": 0.016413685591006713
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                "acc,none": 0.6548571428571428,
                "acc_stderr,none": 0.01608114667498225
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "alias": "blimp_wh_vs_that_with_gap_filtered",
                "acc,none": 0.6430903155603918,
                "acc_stderr,none": 0.01581225503027673
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                "acc,none": 0.6659340659340659,
                "acc_stderr,none": 0.015644070698947035
            },
            "cola": {
                "alias": "cola",
                "mcc,none": 0.03766255373574792,
                "mcc_stderr,none": 0.030385259830663546
            },
            "hellaswag": {
                "alias": "hellaswag",
                "acc,none": 0.2557259510057757,
                "acc_stderr,none": 0.004353768730644559,
                "acc_norm,none": 0.26199960167297354,
                "acc_norm_stderr,none": 0.0043882375575267215
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "alias": "inverse_scaling_hindsight_neglect_10shot",
                "acc,none": 0.5365079365079365,
                "acc_stderr,none": 0.028141315964997582,
                "acc_norm,none": 0.5365079365079365,
                "acc_norm_stderr,none": 0.028141315964997582
            },
            "inverse_scaling_into_the_unknown": {
                "alias": "inverse_scaling_into_the_unknown",
                "acc,none": 0.53125,
                "acc_stderr,none": 0.011687638694135428,
                "acc_norm,none": 0.53125,
                "acc_norm_stderr,none": 0.011687638694135428
            },
            "inverse_scaling_memo_trap": {
                "alias": "inverse_scaling_memo_trap",
                "acc,none": 0.5715811965811965,
                "acc_stderr,none": 0.01618331260075316,
                "acc_norm,none": 0.5384615384615384,
                "acc_norm_stderr,none": 0.01630329877250077
            },
            "inverse_scaling_modus_tollens": {
                "alias": "inverse_scaling_modus_tollens",
                "acc,none": 0.8478964401294499,
                "acc_stderr,none": 0.010218981581892404,
                "acc_norm,none": 1.0,
                "acc_norm_stderr,none": 0.0
            },
            "inverse_scaling_neqa": {
                "alias": "inverse_scaling_neqa",
                "acc,none": 0.45666666666666667,
                "acc_stderr,none": 0.028806947219396126,
                "acc_norm,none": 0.45666666666666667,
                "acc_norm_stderr,none": 0.028806947219396126
            },
            "inverse_scaling_pattern_matching_suppression": {
                "alias": "inverse_scaling_pattern_matching_suppression",
                "acc,none": 0.38235294117647056,
                "acc_stderr,none": 0.012864426201458135,
                "acc_norm,none": 0.32983193277310924,
                "acc_norm_stderr,none": 0.012445897743235998
            },
            "inverse_scaling_quote_repetition": {
                "alias": "inverse_scaling_quote_repetition",
                "acc,none": 0.16666666666666666,
                "acc_stderr,none": 0.021552525004661347,
                "acc_norm,none": 0.2,
                "acc_norm_stderr,none": 0.023132597278649573
            },
            "inverse_scaling_redefine_math": {
                "alias": "inverse_scaling_redefine_math",
                "acc,none": 0.5722222222222222,
                "acc_stderr,none": 0.016501051660868793,
                "acc_norm,none": 0.5722222222222222,
                "acc_norm_stderr,none": 0.016501051660868793
            },
            "inverse_scaling_repetitive_algebra": {
                "alias": "inverse_scaling_repetitive_algebra",
                "acc,none": 0.514,
                "acc_stderr,none": 0.01581309754773099,
                "acc_norm,none": 0.524,
                "acc_norm_stderr,none": 0.015801065586651755
            },
            "inverse_scaling_sig_figs": {
                "alias": "inverse_scaling_sig_figs",
                "acc,none": 0.39474565727137867,
                "acc_stderr,none": 0.0033813961804339547,
                "acc_norm,none": 0.39474565727137867,
                "acc_norm_stderr,none": 0.0033813961804339547
            },
            "inverse_scaling_winobias_antistereotype": {
                "alias": "inverse_scaling_winobias_antistereotype",
                "acc,none": 0.5776699029126213,
                "acc_stderr,none": 0.024363797191332873,
                "acc_norm,none": 0.4975728155339806,
                "acc_norm_stderr,none": 0.02466289058896645
            },
            "lambada_openai": {
                "alias": "lambada_openai",
                "perplexity,none": 54377936.31752774,
                "perplexity_stderr,none": 5920761.155999263,
                "acc,none": 0.0,
                "acc_stderr,none": 0.0
            },
            "mathqa": {
                "alias": "mathqa",
                "acc,none": 0.1899497487437186,
                "acc_stderr,none": 0.007180851288894203,
                "acc_norm,none": 0.20100502512562815,
                "acc_norm_stderr,none": 0.007336282931564907
            },
            "mnli": {
                "alias": "mnli",
                "acc,none": 0.33876719307182884,
                "acc_stderr,none": 0.004777545616783272
            },
            "mnli_mismatch": {
                "alias": "mnli_mismatch",
                "acc,none": 0.3336045565500407,
                "acc_stderr,none": 0.0047553572399789594
            },
            "mrpc": {
                "alias": "mrpc",
                "acc,none": 0.3137254901960784,
                "acc_stderr,none": 0.022999936277943448
            },
            "openbookqa": {
                "alias": "openbookqa",
                "acc,none": 0.154,
                "acc_stderr,none": 0.01615828519245535,
                "acc_norm,none": 0.272,
                "acc_norm_stderr,none": 0.01992048320956607
            },
            "piqa": {
                "alias": "piqa",
                "acc,none": 0.5326441784548422,
                "acc_stderr,none": 0.011640934420031591,
                "acc_norm,none": 0.5076169749727966,
                "acc_norm_stderr,none": 0.011664470424044986
            },
            "qa4mre_2011": {
                "alias": "qa4mre_2011",
                "acc,none": 0.16666666666666666,
                "acc_stderr,none": 0.034163335903782864,
                "acc_norm,none": 0.16666666666666666,
                "acc_norm_stderr,none": 0.03416333590378284
            },
            "qa4mre_2012": {
                "alias": "qa4mre_2012",
                "acc,none": 0.1625,
                "acc_stderr,none": 0.029256375964756765,
                "acc_norm,none": 0.25625,
                "acc_norm_stderr,none": 0.0346215784586514
            },
            "qa4mre_2013": {
                "alias": "qa4mre_2013",
                "acc,none": 0.22887323943661972,
                "acc_stderr,none": 0.02497279648604843,
                "acc_norm,none": 0.1619718309859155,
                "acc_norm_stderr,none": 0.02190059109460827
            },
            "qnli": {
                "alias": "qnli",
                "acc,none": 0.500823723228995,
                "acc_stderr,none": 0.0067654013708382576
            },
            "qqp": {
                "alias": "qqp",
                "acc,none": 0.6274053920356171,
                "acc_stderr,none": 0.0024046169636967687
            },
            "rte": {
                "alias": "rte",
                "acc,none": 0.5018050541516246,
                "acc_stderr,none": 0.030096267148976633
            },
            "sciq": {
                "alias": "sciq",
                "acc,none": 0.184,
                "acc_stderr,none": 0.012259457340938577,
                "acc_norm,none": 0.202,
                "acc_norm_stderr,none": 0.012702651587655139
            },
            "scrolls_contractnli": {
                "alias": "scrolls_contractnli",
                "acc,none": 0.40790742526518803,
                "acc_stderr,none": 0.015268477560836932,
                "acc_norm,none": 0.40790742526518803,
                "acc_norm_stderr,none": 0.015268477560836932,
                "em,none": 40.790742526518805,
                "em_stderr,none": 1.5268477560837095
            },
            "scrolls_quality": {
                "alias": "scrolls_quality",
                "acc,none": 0.23825503355704697,
                "acc_stderr,none": 0.009329810208853526,
                "acc_norm,none": 0.27468839884947266,
                "acc_norm_stderr,none": 0.009775285294234994,
                "em,none": 27.46883988494727,
                "em_stderr,none": 0.9775285294234809
            },
            "squad_completion": {
                "alias": "squad_completion",
                "contains,none": 0.0013404825737265416,
                "contains_stderr,none": "N/A"
            },
            "sst2": {
                "alias": "sst2",
                "acc,none": 0.4954128440366973,
                "acc_stderr,none": 0.016941140693324256
            },
            "swag": {
                "alias": "swag",
                "acc,none": 0.2664700589823053,
                "acc_stderr,none": 0.0031258191959870115,
                "acc_norm,none": 0.2548735379386184,
                "acc_norm_stderr,none": 0.003081116284801935
            },
            "tinyGSM8k": {
                "alias": "tinyGSM8k",
                "exact_match,strict-match": 0.005531037620360234,
                "exact_match_stderr,strict-match": "N/A",
                "exact_match,flexible-extract": 0.005531037620360234,
                "exact_match_stderr,flexible-extract": "N/A"
            },
            "tinyMMLU": {
                "alias": "tinyMMLU",
                "acc_norm,none": 0.30224135899668686,
                "acc_norm_stderr,none": "N/A"
            },
            "tinyTruthfulQA": {
                "alias": "tinyTruthfulQA",
                "acc,none": 0.5184169682308424,
                "acc_stderr,none": "N/A"
            },
            "winogrande": {
                "alias": "winogrande",
                "acc,none": 0.4964483030781373,
                "acc_stderr,none": 0.01405213114691586
            },
            "wnli": {
                "alias": "wnli",
                "acc,none": 0.4507042253521127,
                "acc_stderr,none": 0.059470271877379965
            },
            "wsc273": {
                "alias": "wsc273",
                "acc,none": 0.5091575091575091,
                "acc_stderr,none": 0.03031186794526186
            }
        },
        "group_subtasks": {
            "arc_challenge": [],
            "arc_easy": [],
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
            "blimp_sentential_negation_npi_licensor_present_filtered": [],
            "blimp_left_branch_island_simple_question_filtered": [],
            "blimp_npi_present_2_filtered": [],
            "blimp_principle_A_domain_3_filtered": [],
            "blimp_sentential_subject_island_filtered": [],
            "blimp_existential_there_quantifiers_1_filtered": [],
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
            "blimp_determiner_noun_agreement_2_filtered": [],
            "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
            "blimp_superlative_quantifiers_2_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
            "blimp_wh_vs_that_with_gap_filtered": [],
            "blimp_inchoative_filtered": [],
            "blimp_transitive_filtered": [],
            "blimp_animate_subject_passive_filtered": [],
            "blimp_passive_1_filtered": [],
            "blimp_anaphor_gender_agreement_filtered": [],
            "blimp_adjunct_island_filtered": [],
            "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
            "blimp_animate_subject_trans_filtered": [],
            "blimp_irregular_past_participle_verbs_filtered": [],
            "blimp_determiner_noun_agreement_irregular_1_filtered": [],
            "blimp_principle_A_reconstruction_filtered": [],
            "blimp_only_npi_scope_filtered": [],
            "blimp_anaphor_number_agreement_filtered": [],
            "blimp_existential_there_subject_raising_filtered": [],
            "blimp_principle_A_case_1_filtered": [],
            "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
            "blimp_causative_filtered": [],
            "blimp_ellipsis_n_bar_2_filtered": [],
            "blimp_intransitive_filtered": [],
            "blimp_wh_vs_that_no_gap_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
            "blimp_wh_island_filtered": [],
            "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
            "blimp_wh_questions_subject_gap_long_distance_filtered": [],
            "blimp_determiner_noun_agreement_1_filtered": [],
            "blimp_npi_present_1_filtered": [],
            "blimp_passive_2_filtered": [],
            "blimp_existential_there_object_raising_filtered": [],
            "blimp_tough_vs_raising_1_filtered": [],
            "blimp_principle_A_case_2_filtered": [],
            "blimp_wh_questions_subject_gap_filtered": [],
            "blimp_expletive_it_object_raising_filtered": [],
            "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
            "blimp_existential_there_quantifiers_2_filtered": [],
            "blimp_tough_vs_raising_2_filtered": [],
            "blimp_distractor_agreement_relational_noun_filtered": [],
            "blimp_matrix_question_npi_licensor_present_filtered": [],
            "blimp_complex_NP_island_filtered": [],
            "blimp_superlative_quantifiers_1_filtered": [],
            "blimp_ellipsis_n_bar_1_filtered": [],
            "blimp_only_npi_licensor_present_filtered": [],
            "blimp_principle_A_domain_2_filtered": [],
            "blimp_sentential_negation_npi_scope_filtered": [],
            "blimp_principle_A_domain_1_filtered": [],
            "blimp_irregular_past_participle_adjectives_filtered": [],
            "blimp_drop_argument_filtered": [],
            "blimp_wh_questions_object_gap_filtered": [],
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
            "blimp_determiner_noun_agreement_irregular_2_filtered": [],
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
            "blimp_distractor_agreement_relative_clause_filtered": [],
            "blimp_left_branch_island_echo_question_filtered": [],
            "blimp_principle_A_c_command_filtered": [],
            "blimp_supplement_hypernym": [],
            "blimp_supplement_turn_taking": [],
            "blimp_supplement_qa_congruence_easy": [],
            "blimp_supplement_qa_congruence_tricky": [],
            "blimp_supplement_subject_aux_inversion": [],
            "sst2": [],
            "mrpc": [],
            "mnli": [],
            "mnli_mismatch": [],
            "qnli": [],
            "wnli": [],
            "qqp": [],
            "rte": [],
            "cola": [],
            "hellaswag": [],
            "inverse_scaling_memo_trap": [],
            "inverse_scaling_sig_figs": [],
            "inverse_scaling_redefine_math": [],
            "inverse_scaling_neqa": [],
            "inverse_scaling_modus_tollens": [],
            "inverse_scaling_hindsight_neglect_10shot": [],
            "inverse_scaling_pattern_matching_suppression": [],
            "inverse_scaling_quote_repetition": [],
            "inverse_scaling_winobias_antistereotype": [],
            "inverse_scaling_into_the_unknown": [],
            "inverse_scaling_repetitive_algebra": [],
            "lambada_openai": [],
            "mathqa": [],
            "openbookqa": [],
            "piqa": [],
            "qa4mre_2011": [],
            "qa4mre_2013": [],
            "qa4mre_2012": [],
            "sciq": [],
            "scrolls_contractnli": [],
            "scrolls_quality": [],
            "squad_completion": [],
            "swag": [],
            "tinyGSM8k": [],
            "tinyMMLU": [],
            "tinyTruthfulQA": [],
            "winogrande": [],
            "wsc273": []
        },
        "configs": {
            "arc_challenge": {
                "task": "arc_challenge",
                "tag": [
                    "ai2_arc"
                ],
                "dataset_path": "allenai/ai2_arc",
                "dataset_name": "ARC-Challenge",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{choices.label.index(answerKey)}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "arc_easy": {
                "task": "arc_easy",
                "tag": [
                    "ai2_arc"
                ],
                "dataset_path": "allenai/ai2_arc",
                "dataset_name": "ARC-Easy",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{choices.label.index(answerKey)}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_adjunct_island_filtered": {
                "task": "blimp_adjunct_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "task": "blimp_anaphor_gender_agreement_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_anaphor_number_agreement_filtered": {
                "task": "blimp_anaphor_number_agreement_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_animate_subject_passive_filtered": {
                "task": "blimp_animate_subject_passive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_animate_subject_trans_filtered": {
                "task": "blimp_animate_subject_trans_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_causative_filtered": {
                "task": "blimp_causative_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_complex_NP_island_filtered": {
                "task": "blimp_complex_NP_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "task": "blimp_determiner_noun_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "task": "blimp_determiner_noun_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "task": "blimp_distractor_agreement_relational_noun_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "task": "blimp_distractor_agreement_relative_clause_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_drop_argument_filtered": {
                "task": "blimp_drop_argument_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "task": "blimp_ellipsis_n_bar_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "task": "blimp_ellipsis_n_bar_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_object_raising_filtered": {
                "task": "blimp_existential_there_object_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "task": "blimp_existential_there_quantifiers_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "task": "blimp_existential_there_quantifiers_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_existential_there_subject_raising_filtered": {
                "task": "blimp_existential_there_subject_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_expletive_it_object_raising_filtered": {
                "task": "blimp_expletive_it_object_raising_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_inchoative_filtered": {
                "task": "blimp_inchoative_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_intransitive_filtered": {
                "task": "blimp_intransitive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "task": "blimp_irregular_past_participle_adjectives_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "task": "blimp_irregular_past_participle_verbs_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "task": "blimp_left_branch_island_echo_question_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "task": "blimp_left_branch_island_simple_question_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "task": "blimp_matrix_question_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_npi_present_1_filtered": {
                "task": "blimp_npi_present_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_npi_present_2_filtered": {
                "task": "blimp_npi_present_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_only_npi_licensor_present_filtered": {
                "task": "blimp_only_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_only_npi_scope_filtered": {
                "task": "blimp_only_npi_scope_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_passive_1_filtered": {
                "task": "blimp_passive_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_passive_2_filtered": {
                "task": "blimp_passive_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_c_command_filtered": {
                "task": "blimp_principle_A_c_command_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_case_1_filtered": {
                "task": "blimp_principle_A_case_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_case_2_filtered": {
                "task": "blimp_principle_A_case_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_1_filtered": {
                "task": "blimp_principle_A_domain_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_2_filtered": {
                "task": "blimp_principle_A_domain_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_domain_3_filtered": {
                "task": "blimp_principle_A_domain_3_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_principle_A_reconstruction_filtered": {
                "task": "blimp_principle_A_reconstruction_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "task": "blimp_sentential_negation_npi_scope_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_sentential_subject_island_filtered": {
                "task": "blimp_sentential_subject_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "task": "blimp_superlative_quantifiers_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "task": "blimp_superlative_quantifiers_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_hypernym": {
                "task": "blimp_supplement_hypernym",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_qa_congruence_easy": {
                "task": "blimp_supplement_qa_congruence_easy",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_qa_congruence_tricky": {
                "task": "blimp_supplement_qa_congruence_tricky",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_subject_aux_inversion": {
                "task": "blimp_supplement_subject_aux_inversion",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_supplement_turn_taking": {
                "task": "blimp_supplement_turn_taking",
                "tag": "blimp_supplement",
                "group": "blimp_supplement",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_tough_vs_raising_1_filtered": {
                "task": "blimp_tough_vs_raising_1_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_tough_vs_raising_2_filtered": {
                "task": "blimp_tough_vs_raising_2_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_transitive_filtered": {
                "task": "blimp_transitive_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_island_filtered": {
                "task": "blimp_wh_island_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_object_gap_filtered": {
                "task": "blimp_wh_questions_object_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "task": "blimp_wh_questions_subject_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "task": "blimp_wh_vs_that_no_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "task": "blimp_wh_vs_that_with_gap_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                "tag": "blimp_filtered",
                "group": "blimp_filtered",
                "dataset_path": "json",
                "dataset_kwargs": {
                    "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                },
                "validation_split": "train",
                "doc_to_text": "",
                "doc_to_target": 0,
                "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "cola": {
                "task": "cola",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "cola",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "mcc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "sentence",
                "metadata": {
                    "version": 1.0
                }
            },
            "hellaswag": {
                "task": "hellaswag",
                "tag": [
                    "multiple_choice"
                ],
                "dataset_path": "hellaswag",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                "doc_to_text": "{{query}}",
                "doc_to_target": "{{label}}",
                "doc_to_choice": "choices",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "task": "inverse_scaling_hindsight_neglect_10shot",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_into_the_unknown": {
                "task": "inverse_scaling_into_the_unknown",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/into-the-unknown",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_memo_trap": {
                "task": "inverse_scaling_memo_trap",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/memo-trap",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_modus_tollens": {
                "task": "inverse_scaling_modus_tollens",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/modus-tollens",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_neqa": {
                "task": "inverse_scaling_neqa",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/NeQA",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_pattern_matching_suppression": {
                "task": "inverse_scaling_pattern_matching_suppression",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/pattern-matching-suppression",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_quote_repetition": {
                "task": "inverse_scaling_quote_repetition",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/quote-repetition",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_redefine_math": {
                "task": "inverse_scaling_redefine_math",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "inverse-scaling/redefine-math",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_repetitive_algebra": {
                "task": "inverse_scaling_repetitive_algebra",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/repetitive-algebra",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_sig_figs": {
                "task": "inverse_scaling_sig_figs",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "Albertmade/sig-figs",
                "test_split": "train",
                "doc_to_text": "prompt",
                "doc_to_target": "answer_index",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": "",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "inverse_scaling_winobias_antistereotype": {
                "task": "inverse_scaling_winobias_antistereotype",
                "tag": [
                    "inverse_scaling_mc"
                ],
                "group": [
                    "inverse_scaling_mc"
                ],
                "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "test_split": "test",
                "doc_to_text": "text",
                "doc_to_target": "target",
                "doc_to_choice": "classes",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "lambada_openai": {
                "task": "lambada_openai",
                "tag": [
                    "lambada"
                ],
                "dataset_path": "EleutherAI/lambada_openai",
                "dataset_name": "default",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "test_split": "test",
                "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "perplexity",
                        "aggregation": "perplexity",
                        "higher_is_better": false
                    },
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "loglikelihood",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{text}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "mathqa": {
                "task": "mathqa",
                "tag": [
                    "math_word_problems"
                ],
                "dataset_path": "math_qa",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "Question: {{Problem}}\nAnswer:",
                "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                "metadata": {
                    "version": 1.0
                }
            },
            "mnli": {
                "task": "mnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mnli",
                "training_split": "train",
                "validation_split": "validation_matched",
                "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "Neither",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "mnli_mismatch": {
                "task": "mnli_mismatch",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mnli",
                "training_split": "train",
                "validation_split": "validation_mismatched",
                "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "Neither",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "mrpc": {
                "task": "mrpc",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "mrpc",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "openbookqa": {
                "task": "openbookqa",
                "dataset_path": "openbookqa",
                "dataset_name": "main",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "question_stem",
                "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                "doc_to_choice": "{{choices.text}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "question_stem",
                "metadata": {
                    "version": 1.0
                }
            },
            "piqa": {
                "task": "piqa",
                "dataset_path": "piqa",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Question: {{goal}}\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": "{{[sol1, sol2]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "goal",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2011": {
                "task": "qa4mre_2011",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2011.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2012": {
                "task": "qa4mre_2012",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2012.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qa4mre_2013": {
                "task": "qa4mre_2013",
                "tag": [
                    "qa4mre"
                ],
                "dataset_path": "qa4mre",
                "dataset_name": "2013.main.EN",
                "test_split": "train",
                "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                "doc_to_target": "{{correct_answer_id|int - 1}}",
                "doc_to_choice": "{{answer_options.answer_str}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "qnli": {
                "task": "qnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "qnli",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "yes",
                    "no"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "qqp": {
                "task": "qqp",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "qqp",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "no",
                    "yes"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2.0
                }
            },
            "rte": {
                "task": "rte",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "rte",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "True",
                    "False"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "sciq": {
                "task": "sciq",
                "dataset_path": "sciq",
                "training_split": "train",
                "validation_split": "validation",
                "test_split": "test",
                "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                "doc_to_target": 3,
                "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "{{support}} {{question}}",
                "metadata": {
                    "version": 1.0
                }
            },
            "scrolls_contractnli": {
                "task": "scrolls_contractnli",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2
                }
            },
            "scrolls_quality": {
                "task": "scrolls_quality",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2
                }
            },
            "squad_completion": {
                "task": "squad_completion",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "\n\n"
                    ],
                    "do_sample": false
                },
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0
                }
            },
            "sst2": {
                "task": "sst2",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "sst2",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "negative",
                    "positive"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "swag": {
                "task": "swag",
                "dataset_path": "swag",
                "dataset_name": "regular",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "startphrase",
                "doc_to_target": "label",
                "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    },
                    {
                        "metric": "acc_norm",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 1.0
                }
            },
            "tinyGSM8k": {
                "task": "tinyGSM8k",
                "dataset_path": "tinyBenchmarks/tinyGSM8k",
                "dataset_name": "main",
                "training_split": "train",
                "test_split": "test",
                "fewshot_split": "train",
                "doc_to_text": "Question: {{question}}\nAnswer:",
                "doc_to_target": "{{answer}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 5,
                "metric_list": [
                    {
                        "metric": "exact_match",
                        "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true,
                        "ignore_case": true,
                        "ignore_punctuation": false,
                        "regexes_to_ignore": [
                            ",",
                            "\\$",
                            "(?s).*#### ",
                            "\\.$"
                        ]
                    }
                ],
                "output_type": "generate_until",
                "generation_kwargs": {
                    "until": [
                        "Question:",
                        "</s>",
                        "<|im_end|>"
                    ],
                    "do_sample": false,
                    "temperature": 0.0
                },
                "repeats": 1,
                "filter_list": [
                    {
                        "name": "strict-match",
                        "filter": [
                            {
                                "function": "regex",
                                "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                            },
                            {
                                "function": "take_first"
                            }
                        ]
                    },
                    {
                        "name": "flexible-extract",
                        "filter": [
                            {
                                "function": "regex",
                                "group_select": -1,
                                "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                            },
                            {
                                "function": "take_first"
                            }
                        ]
                    }
                ],
                "should_decontaminate": false,
                "metadata": {
                    "version": 0.0
                }
            },
            "tinyMMLU": {
                "task": "tinyMMLU",
                "dataset_path": "tinyBenchmarks/tinyMMLU",
                "dataset_name": "all",
                "test_split": "test",
                "fewshot_split": "dev",
                "doc_to_text": "{{input_formatted}}",
                "doc_to_target": "answer",
                "doc_to_choice": [
                    "A",
                    "B",
                    "C",
                    "D"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "fewshot_config": {
                    "sampler": "first_n"
                },
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc_norm",
                        "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 0.0
                }
            },
            "tinyTruthfulQA": {
                "task": "tinyTruthfulQA",
                "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                "dataset_name": "multiple_choice",
                "validation_split": "validation",
                "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                "doc_to_target": 0,
                "doc_to_choice": "{{mc2_targets.choices}}",
                "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "question",
                "metadata": {
                    "version": 0.0
                }
            },
            "winogrande": {
                "task": "winogrande",
                "dataset_path": "winogrande",
                "dataset_name": "winogrande_xl",
                "dataset_kwargs": {
                    "trust_remote_code": true
                },
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "sentence",
                "metadata": {
                    "version": 1.0
                }
            },
            "wnli": {
                "task": "wnli",
                "tag": "glue",
                "dataset_path": "glue",
                "dataset_name": "wnli",
                "training_split": "train",
                "validation_split": "validation",
                "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                "doc_to_target": "label",
                "doc_to_choice": [
                    "False",
                    "True"
                ],
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc"
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": false,
                "metadata": {
                    "version": 2.0
                }
            },
            "wsc273": {
                "task": "wsc273",
                "dataset_path": "winograd_wsc",
                "dataset_name": "wsc273",
                "test_split": "test",
                "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                "doc_to_text": "label",
                "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                "description": "",
                "target_delimiter": " ",
                "fewshot_delimiter": "\n\n",
                "num_fewshot": 0,
                "metric_list": [
                    {
                        "metric": "acc",
                        "aggregation": "mean",
                        "higher_is_better": true
                    }
                ],
                "output_type": "multiple_choice",
                "repeats": 1,
                "should_decontaminate": true,
                "doc_to_decontamination_query": "text",
                "metadata": {
                    "version": 1.0
                }
            }
        },
        "versions": {
            "arc_challenge": 1.0,
            "arc_easy": 1.0,
            "blimp_adjunct_island_filtered": 1.0,
            "blimp_anaphor_gender_agreement_filtered": 1.0,
            "blimp_anaphor_number_agreement_filtered": 1.0,
            "blimp_animate_subject_passive_filtered": 1.0,
            "blimp_animate_subject_trans_filtered": 1.0,
            "blimp_causative_filtered": 1.0,
            "blimp_complex_NP_island_filtered": 1.0,
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
            "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
            "blimp_determiner_noun_agreement_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
            "blimp_distractor_agreement_relational_noun_filtered": 1.0,
            "blimp_distractor_agreement_relative_clause_filtered": 1.0,
            "blimp_drop_argument_filtered": 1.0,
            "blimp_ellipsis_n_bar_1_filtered": 1.0,
            "blimp_ellipsis_n_bar_2_filtered": 1.0,
            "blimp_existential_there_object_raising_filtered": 1.0,
            "blimp_existential_there_quantifiers_1_filtered": 1.0,
            "blimp_existential_there_quantifiers_2_filtered": 1.0,
            "blimp_existential_there_subject_raising_filtered": 1.0,
            "blimp_expletive_it_object_raising_filtered": 1.0,
            "blimp_inchoative_filtered": 1.0,
            "blimp_intransitive_filtered": 1.0,
            "blimp_irregular_past_participle_adjectives_filtered": 1.0,
            "blimp_irregular_past_participle_verbs_filtered": 1.0,
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
            "blimp_left_branch_island_echo_question_filtered": 1.0,
            "blimp_left_branch_island_simple_question_filtered": 1.0,
            "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
            "blimp_npi_present_1_filtered": 1.0,
            "blimp_npi_present_2_filtered": 1.0,
            "blimp_only_npi_licensor_present_filtered": 1.0,
            "blimp_only_npi_scope_filtered": 1.0,
            "blimp_passive_1_filtered": 1.0,
            "blimp_passive_2_filtered": 1.0,
            "blimp_principle_A_c_command_filtered": 1.0,
            "blimp_principle_A_case_1_filtered": 1.0,
            "blimp_principle_A_case_2_filtered": 1.0,
            "blimp_principle_A_domain_1_filtered": 1.0,
            "blimp_principle_A_domain_2_filtered": 1.0,
            "blimp_principle_A_domain_3_filtered": 1.0,
            "blimp_principle_A_reconstruction_filtered": 1.0,
            "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
            "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
            "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
            "blimp_sentential_negation_npi_scope_filtered": 1.0,
            "blimp_sentential_subject_island_filtered": 1.0,
            "blimp_superlative_quantifiers_1_filtered": 1.0,
            "blimp_superlative_quantifiers_2_filtered": 1.0,
            "blimp_supplement_hypernym": 1.0,
            "blimp_supplement_qa_congruence_easy": 1.0,
            "blimp_supplement_qa_congruence_tricky": 1.0,
            "blimp_supplement_subject_aux_inversion": 1.0,
            "blimp_supplement_turn_taking": 1.0,
            "blimp_tough_vs_raising_1_filtered": 1.0,
            "blimp_tough_vs_raising_2_filtered": 1.0,
            "blimp_transitive_filtered": 1.0,
            "blimp_wh_island_filtered": 1.0,
            "blimp_wh_questions_object_gap_filtered": 1.0,
            "blimp_wh_questions_subject_gap_filtered": 1.0,
            "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
            "blimp_wh_vs_that_no_gap_filtered": 1.0,
            "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
            "blimp_wh_vs_that_with_gap_filtered": 1.0,
            "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
            "cola": 1.0,
            "hellaswag": 1.0,
            "inverse_scaling_hindsight_neglect_10shot": 0,
            "inverse_scaling_into_the_unknown": 0,
            "inverse_scaling_memo_trap": 0,
            "inverse_scaling_modus_tollens": 0,
            "inverse_scaling_neqa": 0,
            "inverse_scaling_pattern_matching_suppression": 0,
            "inverse_scaling_quote_repetition": 0,
            "inverse_scaling_redefine_math": 0,
            "inverse_scaling_repetitive_algebra": 0,
            "inverse_scaling_sig_figs": 0,
            "inverse_scaling_winobias_antistereotype": 0,
            "lambada_openai": 1.0,
            "mathqa": 1.0,
            "mnli": 1.0,
            "mnli_mismatch": 1.0,
            "mrpc": 1.0,
            "openbookqa": 1.0,
            "piqa": 1.0,
            "qa4mre_2011": 1.0,
            "qa4mre_2012": 1.0,
            "qa4mre_2013": 1.0,
            "qnli": 1.0,
            "qqp": 2.0,
            "rte": 1.0,
            "sciq": 1.0,
            "scrolls_contractnli": 2,
            "scrolls_quality": 2,
            "squad_completion": 0,
            "sst2": 1.0,
            "swag": 1.0,
            "tinyGSM8k": 0.0,
            "tinyMMLU": 0.0,
            "tinyTruthfulQA": 0.0,
            "winogrande": 1.0,
            "wnli": 2.0,
            "wsc273": 1.0
        },
        "n-shot": {
            "arc_challenge": 0,
            "arc_easy": 0,
            "blimp_adjunct_island_filtered": 0,
            "blimp_anaphor_gender_agreement_filtered": 0,
            "blimp_anaphor_number_agreement_filtered": 0,
            "blimp_animate_subject_passive_filtered": 0,
            "blimp_animate_subject_trans_filtered": 0,
            "blimp_causative_filtered": 0,
            "blimp_complex_NP_island_filtered": 0,
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
            "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
            "blimp_determiner_noun_agreement_1_filtered": 0,
            "blimp_determiner_noun_agreement_2_filtered": 0,
            "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
            "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
            "blimp_distractor_agreement_relational_noun_filtered": 0,
            "blimp_distractor_agreement_relative_clause_filtered": 0,
            "blimp_drop_argument_filtered": 0,
            "blimp_ellipsis_n_bar_1_filtered": 0,
            "blimp_ellipsis_n_bar_2_filtered": 0,
            "blimp_existential_there_object_raising_filtered": 0,
            "blimp_existential_there_quantifiers_1_filtered": 0,
            "blimp_existential_there_quantifiers_2_filtered": 0,
            "blimp_existential_there_subject_raising_filtered": 0,
            "blimp_expletive_it_object_raising_filtered": 0,
            "blimp_inchoative_filtered": 0,
            "blimp_intransitive_filtered": 0,
            "blimp_irregular_past_participle_adjectives_filtered": 0,
            "blimp_irregular_past_participle_verbs_filtered": 0,
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
            "blimp_left_branch_island_echo_question_filtered": 0,
            "blimp_left_branch_island_simple_question_filtered": 0,
            "blimp_matrix_question_npi_licensor_present_filtered": 0,
            "blimp_npi_present_1_filtered": 0,
            "blimp_npi_present_2_filtered": 0,
            "blimp_only_npi_licensor_present_filtered": 0,
            "blimp_only_npi_scope_filtered": 0,
            "blimp_passive_1_filtered": 0,
            "blimp_passive_2_filtered": 0,
            "blimp_principle_A_c_command_filtered": 0,
            "blimp_principle_A_case_1_filtered": 0,
            "blimp_principle_A_case_2_filtered": 0,
            "blimp_principle_A_domain_1_filtered": 0,
            "blimp_principle_A_domain_2_filtered": 0,
            "blimp_principle_A_domain_3_filtered": 0,
            "blimp_principle_A_reconstruction_filtered": 0,
            "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
            "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
            "blimp_sentential_negation_npi_licensor_present_filtered": 0,
            "blimp_sentential_negation_npi_scope_filtered": 0,
            "blimp_sentential_subject_island_filtered": 0,
            "blimp_superlative_quantifiers_1_filtered": 0,
            "blimp_superlative_quantifiers_2_filtered": 0,
            "blimp_supplement_hypernym": 0,
            "blimp_supplement_qa_congruence_easy": 0,
            "blimp_supplement_qa_congruence_tricky": 0,
            "blimp_supplement_subject_aux_inversion": 0,
            "blimp_supplement_turn_taking": 0,
            "blimp_tough_vs_raising_1_filtered": 0,
            "blimp_tough_vs_raising_2_filtered": 0,
            "blimp_transitive_filtered": 0,
            "blimp_wh_island_filtered": 0,
            "blimp_wh_questions_object_gap_filtered": 0,
            "blimp_wh_questions_subject_gap_filtered": 0,
            "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
            "blimp_wh_vs_that_no_gap_filtered": 0,
            "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
            "blimp_wh_vs_that_with_gap_filtered": 0,
            "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
            "cola": 0,
            "hellaswag": 0,
            "inverse_scaling_hindsight_neglect_10shot": 0,
            "inverse_scaling_into_the_unknown": 0,
            "inverse_scaling_memo_trap": 0,
            "inverse_scaling_modus_tollens": 0,
            "inverse_scaling_neqa": 0,
            "inverse_scaling_pattern_matching_suppression": 0,
            "inverse_scaling_quote_repetition": 0,
            "inverse_scaling_redefine_math": 0,
            "inverse_scaling_repetitive_algebra": 0,
            "inverse_scaling_sig_figs": 0,
            "inverse_scaling_winobias_antistereotype": 0,
            "lambada_openai": 0,
            "mathqa": 0,
            "mnli": 0,
            "mnli_mismatch": 0,
            "mrpc": 0,
            "openbookqa": 0,
            "piqa": 0,
            "qa4mre_2011": 0,
            "qa4mre_2012": 0,
            "qa4mre_2013": 0,
            "qnli": 0,
            "qqp": 0,
            "rte": 0,
            "sciq": 0,
            "scrolls_contractnli": 0,
            "scrolls_quality": 0,
            "squad_completion": 0,
            "sst2": 0,
            "swag": 0,
            "tinyGSM8k": 5,
            "tinyMMLU": 0,
            "tinyTruthfulQA": 0,
            "winogrande": 0,
            "wnli": 0,
            "wsc273": 0
        },
        "higher_is_better": {
            "arc_challenge": {
                "acc": true,
                "acc_norm": true
            },
            "arc_easy": {
                "acc": true,
                "acc_norm": true
            },
            "blimp_adjunct_island_filtered": {
                "acc": true
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "acc": true
            },
            "blimp_anaphor_number_agreement_filtered": {
                "acc": true
            },
            "blimp_animate_subject_passive_filtered": {
                "acc": true
            },
            "blimp_animate_subject_trans_filtered": {
                "acc": true
            },
            "blimp_causative_filtered": {
                "acc": true
            },
            "blimp_complex_NP_island_filtered": {
                "acc": true
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "acc": true
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "acc": true
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "acc": true
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "acc": true
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "acc": true
            },
            "blimp_drop_argument_filtered": {
                "acc": true
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "acc": true
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "acc": true
            },
            "blimp_existential_there_object_raising_filtered": {
                "acc": true
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "acc": true
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "acc": true
            },
            "blimp_existential_there_subject_raising_filtered": {
                "acc": true
            },
            "blimp_expletive_it_object_raising_filtered": {
                "acc": true
            },
            "blimp_inchoative_filtered": {
                "acc": true
            },
            "blimp_intransitive_filtered": {
                "acc": true
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "acc": true
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "acc": true
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "acc": true
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "acc": true
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "acc": true
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "acc": true
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_npi_present_1_filtered": {
                "acc": true
            },
            "blimp_npi_present_2_filtered": {
                "acc": true
            },
            "blimp_only_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_only_npi_scope_filtered": {
                "acc": true
            },
            "blimp_passive_1_filtered": {
                "acc": true
            },
            "blimp_passive_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_c_command_filtered": {
                "acc": true
            },
            "blimp_principle_A_case_1_filtered": {
                "acc": true
            },
            "blimp_principle_A_case_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_1_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_2_filtered": {
                "acc": true
            },
            "blimp_principle_A_domain_3_filtered": {
                "acc": true
            },
            "blimp_principle_A_reconstruction_filtered": {
                "acc": true
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "acc": true
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "acc": true
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "acc": true
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "acc": true
            },
            "blimp_sentential_subject_island_filtered": {
                "acc": true
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "acc": true
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "acc": true
            },
            "blimp_supplement_hypernym": {
                "acc": true
            },
            "blimp_supplement_qa_congruence_easy": {
                "acc": true
            },
            "blimp_supplement_qa_congruence_tricky": {
                "acc": true
            },
            "blimp_supplement_subject_aux_inversion": {
                "acc": true
            },
            "blimp_supplement_turn_taking": {
                "acc": true
            },
            "blimp_tough_vs_raising_1_filtered": {
                "acc": true
            },
            "blimp_tough_vs_raising_2_filtered": {
                "acc": true
            },
            "blimp_transitive_filtered": {
                "acc": true
            },
            "blimp_wh_island_filtered": {
                "acc": true
            },
            "blimp_wh_questions_object_gap_filtered": {
                "acc": true
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "acc": true
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "acc": true
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "acc": true
            },
            "cola": {
                "mcc": true
            },
            "hellaswag": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_into_the_unknown": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_memo_trap": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_modus_tollens": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_neqa": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_pattern_matching_suppression": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_quote_repetition": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_redefine_math": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_repetitive_algebra": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_sig_figs": {
                "acc": true,
                "acc_norm": true
            },
            "inverse_scaling_winobias_antistereotype": {
                "acc": true,
                "acc_norm": true
            },
            "lambada_openai": {
                "perplexity": false,
                "acc": true
            },
            "mathqa": {
                "acc": true,
                "acc_norm": true
            },
            "mnli": {
                "acc": true
            },
            "mnli_mismatch": {
                "acc": true
            },
            "mrpc": {
                "acc": true
            },
            "openbookqa": {
                "acc": true,
                "acc_norm": true
            },
            "piqa": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2011": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2012": {
                "acc": true,
                "acc_norm": true
            },
            "qa4mre_2013": {
                "acc": true,
                "acc_norm": true
            },
            "qnli": {
                "acc": true
            },
            "qqp": {
                "acc": true
            },
            "rte": {
                "acc": true
            },
            "sciq": {
                "acc": true,
                "acc_norm": true
            },
            "scrolls_contractnli": {
                "em": true,
                "acc": true,
                "acc_norm": true
            },
            "scrolls_quality": {
                "em": true,
                "acc": true,
                "acc_norm": true
            },
            "squad_completion": {
                "contains": true
            },
            "sst2": {
                "acc": true
            },
            "swag": {
                "acc": true,
                "acc_norm": true
            },
            "tinyGSM8k": {
                "exact_match": true
            },
            "tinyMMLU": {
                "acc_norm": true
            },
            "tinyTruthfulQA": {
                "acc": true
            },
            "winogrande": {
                "acc": true
            },
            "wnli": {
                "acc": true
            },
            "wsc273": {
                "acc": true
            }
        },
        "n-samples": {
            "wsc273": {
                "original": 273,
                "effective": 273
            },
            "winogrande": {
                "original": 1267,
                "effective": 1267
            },
            "tinyTruthfulQA": {
                "original": 100,
                "effective": 100
            },
            "tinyMMLU": {
                "original": 100,
                "effective": 100
            },
            "tinyGSM8k": {
                "original": 100,
                "effective": 100
            },
            "swag": {
                "original": 20006,
                "effective": 20006
            },
            "squad_completion": {
                "original": 2984,
                "effective": 2984
            },
            "scrolls_quality": {
                "original": 2086,
                "effective": 2086
            },
            "scrolls_contractnli": {
                "original": 1037,
                "effective": 1037
            },
            "sciq": {
                "original": 1000,
                "effective": 1000
            },
            "qa4mre_2012": {
                "original": 160,
                "effective": 160
            },
            "qa4mre_2013": {
                "original": 284,
                "effective": 284
            },
            "qa4mre_2011": {
                "original": 120,
                "effective": 120
            },
            "piqa": {
                "original": 1838,
                "effective": 1838
            },
            "openbookqa": {
                "original": 500,
                "effective": 500
            },
            "mathqa": {
                "original": 2985,
                "effective": 2985
            },
            "lambada_openai": {
                "original": 5153,
                "effective": 5153
            },
            "inverse_scaling_repetitive_algebra": {
                "original": 1000,
                "effective": 1000
            },
            "inverse_scaling_into_the_unknown": {
                "original": 1824,
                "effective": 1824
            },
            "inverse_scaling_winobias_antistereotype": {
                "original": 412,
                "effective": 412
            },
            "inverse_scaling_quote_repetition": {
                "original": 300,
                "effective": 300
            },
            "inverse_scaling_pattern_matching_suppression": {
                "original": 1428,
                "effective": 1428
            },
            "inverse_scaling_hindsight_neglect_10shot": {
                "original": 315,
                "effective": 315
            },
            "inverse_scaling_modus_tollens": {
                "original": 1236,
                "effective": 1236
            },
            "inverse_scaling_neqa": {
                "original": 300,
                "effective": 300
            },
            "inverse_scaling_redefine_math": {
                "original": 900,
                "effective": 900
            },
            "inverse_scaling_sig_figs": {
                "original": 20897,
                "effective": 20897
            },
            "inverse_scaling_memo_trap": {
                "original": 936,
                "effective": 936
            },
            "hellaswag": {
                "original": 10042,
                "effective": 10042
            },
            "cola": {
                "original": 1043,
                "effective": 1043
            },
            "rte": {
                "original": 277,
                "effective": 277
            },
            "qqp": {
                "original": 40430,
                "effective": 40430
            },
            "wnli": {
                "original": 71,
                "effective": 71
            },
            "qnli": {
                "original": 5463,
                "effective": 5463
            },
            "mnli_mismatch": {
                "original": 9832,
                "effective": 9832
            },
            "mnli": {
                "original": 9815,
                "effective": 9815
            },
            "mrpc": {
                "original": 408,
                "effective": 408
            },
            "sst2": {
                "original": 872,
                "effective": 872
            },
            "blimp_supplement_subject_aux_inversion": {
                "original": 3867,
                "effective": 3867
            },
            "blimp_supplement_qa_congruence_tricky": {
                "original": 165,
                "effective": 165
            },
            "blimp_supplement_qa_congruence_easy": {
                "original": 64,
                "effective": 64
            },
            "blimp_supplement_turn_taking": {
                "original": 280,
                "effective": 280
            },
            "blimp_supplement_hypernym": {
                "original": 842,
                "effective": 842
            },
            "blimp_principle_A_c_command_filtered": {
                "original": 946,
                "effective": 946
            },
            "blimp_left_branch_island_echo_question_filtered": {
                "original": 947,
                "effective": 947
            },
            "blimp_distractor_agreement_relative_clause_filtered": {
                "original": 871,
                "effective": 871
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                "original": 840,
                "effective": 840
            },
            "blimp_determiner_noun_agreement_irregular_2_filtered": {
                "original": 820,
                "effective": 820
            },
            "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                "original": 892,
                "effective": 892
            },
            "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                "original": 906,
                "effective": 906
            },
            "blimp_wh_questions_object_gap_filtered": {
                "original": 859,
                "effective": 859
            },
            "blimp_drop_argument_filtered": {
                "original": 920,
                "effective": 920
            },
            "blimp_irregular_past_participle_adjectives_filtered": {
                "original": 961,
                "effective": 961
            },
            "blimp_principle_A_domain_1_filtered": {
                "original": 914,
                "effective": 914
            },
            "blimp_sentential_negation_npi_scope_filtered": {
                "original": 871,
                "effective": 871
            },
            "blimp_principle_A_domain_2_filtered": {
                "original": 915,
                "effective": 915
            },
            "blimp_only_npi_licensor_present_filtered": {
                "original": 882,
                "effective": 882
            },
            "blimp_ellipsis_n_bar_1_filtered": {
                "original": 802,
                "effective": 802
            },
            "blimp_superlative_quantifiers_1_filtered": {
                "original": 979,
                "effective": 979
            },
            "blimp_complex_NP_island_filtered": {
                "original": 846,
                "effective": 846
            },
            "blimp_matrix_question_npi_licensor_present_filtered": {
                "original": 929,
                "effective": 929
            },
            "blimp_distractor_agreement_relational_noun_filtered": {
                "original": 788,
                "effective": 788
            },
            "blimp_tough_vs_raising_2_filtered": {
                "original": 920,
                "effective": 920
            },
            "blimp_existential_there_quantifiers_2_filtered": {
                "original": 911,
                "effective": 911
            },
            "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                "original": 949,
                "effective": 949
            },
            "blimp_expletive_it_object_raising_filtered": {
                "original": 759,
                "effective": 759
            },
            "blimp_wh_questions_subject_gap_filtered": {
                "original": 898,
                "effective": 898
            },
            "blimp_principle_A_case_2_filtered": {
                "original": 915,
                "effective": 915
            },
            "blimp_tough_vs_raising_1_filtered": {
                "original": 948,
                "effective": 948
            },
            "blimp_existential_there_object_raising_filtered": {
                "original": 812,
                "effective": 812
            },
            "blimp_passive_2_filtered": {
                "original": 903,
                "effective": 903
            },
            "blimp_npi_present_1_filtered": {
                "original": 909,
                "effective": 909
            },
            "blimp_determiner_noun_agreement_1_filtered": {
                "original": 929,
                "effective": 929
            },
            "blimp_wh_questions_subject_gap_long_distance_filtered": {
                "original": 857,
                "effective": 857
            },
            "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                "original": 945,
                "effective": 945
            },
            "blimp_wh_island_filtered": {
                "original": 960,
                "effective": 960
            },
            "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                "original": 941,
                "effective": 941
            },
            "blimp_wh_vs_that_no_gap_filtered": {
                "original": 861,
                "effective": 861
            },
            "blimp_intransitive_filtered": {
                "original": 868,
                "effective": 868
            },
            "blimp_ellipsis_n_bar_2_filtered": {
                "original": 828,
                "effective": 828
            },
            "blimp_causative_filtered": {
                "original": 818,
                "effective": 818
            },
            "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                "original": 875,
                "effective": 875
            },
            "blimp_principle_A_case_1_filtered": {
                "original": 912,
                "effective": 912
            },
            "blimp_existential_there_subject_raising_filtered": {
                "original": 924,
                "effective": 924
            },
            "blimp_anaphor_number_agreement_filtered": {
                "original": 931,
                "effective": 931
            },
            "blimp_only_npi_scope_filtered": {
                "original": 837,
                "effective": 837
            },
            "blimp_principle_A_reconstruction_filtered": {
                "original": 967,
                "effective": 967
            },
            "blimp_determiner_noun_agreement_irregular_1_filtered": {
                "original": 681,
                "effective": 681
            },
            "blimp_irregular_past_participle_verbs_filtered": {
                "original": 942,
                "effective": 942
            },
            "blimp_animate_subject_trans_filtered": {
                "original": 923,
                "effective": 923
            },
            "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                "original": 890,
                "effective": 890
            },
            "blimp_adjunct_island_filtered": {
                "original": 928,
                "effective": 928
            },
            "blimp_anaphor_gender_agreement_filtered": {
                "original": 971,
                "effective": 971
            },
            "blimp_passive_1_filtered": {
                "original": 840,
                "effective": 840
            },
            "blimp_animate_subject_passive_filtered": {
                "original": 895,
                "effective": 895
            },
            "blimp_transitive_filtered": {
                "original": 868,
                "effective": 868
            },
            "blimp_inchoative_filtered": {
                "original": 855,
                "effective": 855
            },
            "blimp_wh_vs_that_with_gap_filtered": {
                "original": 919,
                "effective": 919
            },
            "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                "original": 718,
                "effective": 718
            },
            "blimp_superlative_quantifiers_2_filtered": {
                "original": 986,
                "effective": 986
            },
            "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                "original": 910,
                "effective": 910
            },
            "blimp_determiner_noun_agreement_2_filtered": {
                "original": 931,
                "effective": 931
            },
            "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                "original": 933,
                "effective": 933
            },
            "blimp_existential_there_quantifiers_1_filtered": {
                "original": 930,
                "effective": 930
            },
            "blimp_sentential_subject_island_filtered": {
                "original": 961,
                "effective": 961
            },
            "blimp_principle_A_domain_3_filtered": {
                "original": 941,
                "effective": 941
            },
            "blimp_npi_present_2_filtered": {
                "original": 914,
                "effective": 914
            },
            "blimp_left_branch_island_simple_question_filtered": {
                "original": 951,
                "effective": 951
            },
            "blimp_sentential_negation_npi_licensor_present_filtered": {
                "original": 919,
                "effective": 919
            },
            "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                "original": 804,
                "effective": 804
            },
            "arc_easy": {
                "original": 2376,
                "effective": 2376
            },
            "arc_challenge": {
                "original": 1172,
                "effective": 1172
            }
        },
        "config": {
            "model": "modis",
            "model_args": "pretrained=LIBRARY_HOLD/31M/mamba2_31M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
            "model_num_parameters": 13387152,
            "model_dtype": "torch.bfloat16",
            "model_revision": "main",
            "batch_size": "auto",
            "batch_sizes": [
                64
            ],
            "device": null,
            "use_cache": null,
            "limit": null,
            "bootstrap_iters": 100000,
            "gen_kwargs": null,
            "random_seed": 0,
            "numpy_seed": 1234,
            "torch_seed": 1234,
            "fewshot_seed": 1234
        },
        "date": 1722540092.5757883,
        "tokenizer_pad_token": [
            "</s>",
            "2"
        ],
        "tokenizer_eos_token": [
            "</s>",
            "2"
        ],
        "tokenizer_bos_token": [
            "<s>",
            "1"
        ],
        "eot_token_id": 2,
        "max_length": 2048,
        "task_hashes": {},
        "model_source": "modis",
        "model_name": "LIBRARY_HOLD/31M/mamba2_31M",
        "model_name_sanitized": "LIBRARY_HOLD__31M__mamba2_31M",
        "system_instruction": null,
        "system_instruction_sha": null,
        "fewshot_as_multiturn": false,
        "chat_template": null,
        "chat_template_sha": null,
        "start_time": 3379800.419797259,
        "end_time": 3380070.19702191,
        "total_evaluation_time_seconds": "269.7772246510722"
    }
}