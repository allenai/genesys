{
    "scale": "14M",
    "verification_report": {
        "wandb_ids.json": {
            "pretrain": {
                "id": "45uhov1l",
                "name": "evo_exp_full_a_spectralhmamba_14M_20241030134242"
            },
            "project": "model_discovery",
            "entity": "aristo",
            "evaluate": {
                "name": "evo_exp_full_a_spectralhmamba_14M_eval_20241030134838"
            }
        },
        "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,48.169063765,10.1203,106.81867980957031,0.0004166666666666667,3.225182222795588e-05,1730321011.313667,5\n1,50.566777676,9.1797,8.111857414245605,0.0008333333333333334,6.450364445591176e-05,1730321013.7115998,10\n2,52.878080221,8.4891,6.51021671295166,0.000999939341560842,9.675546668386763e-05,1730321016.0228941,15\n3,55.211981771,7.775,6.394815921783447,0.0009995687103187471,0.00012900728891182352,1730321018.3567934,20\n4,57.646393249,6.8758,6.647360324859619,0.0009988614241743204,0.0001612591111397794,1730321020.7912033,25\n5,59.971099267,6.0219,7.181513786315918,0.0009978180127715127,0.00019351093336773527,1730321023.1159153,30\n6,62.305906579,5.2984,6.180345058441162,0.0009964392574582156,0.00022576275559569117,1730321025.4507024,35\n7,64.699300837,4.6055,6.305746078491211,0.000994726190701157,0.00025801457782364704,1730321027.8441396,40\n8,67.007941708,4.0602,4.928647518157959,0.000992680095312749,0.0002902664000516029,1730321030.152748,45\n9,69.351054886,3.568,3.0003066062927246,0.0009903025034904674,0.0003225182222795588,1730321032.4958606,50\n10,72.234599532,3.1809,1.2715320587158203,0.0009875951956694815,0.00035477004450751466,1730321035.3794153,55\n11,74.562548468,2.9937,0.5108067393302917,0.0009845601991893926,0.00038702186673547054,1730321037.7073457,60\n12,76.891046463,3.0742,0.3324280083179474,0.0009811997867760827,0.0004192736889634264,1730321040.0357957,65\n13,79.200177143,2.9215,0.2408171445131302,0.0009775164748398063,0.00045152551119138234,1730321042.3449264,70\n14,81.522945692,2.9438,0.18532028794288635,0.0009735130215908027,0.0004837773334193382,1730321044.667727,75\n15,84.198360828,2.9102,0.14533330500125885,0.0009691924249738393,0.0005160291556472941,1730321047.343202,80\n16,87.654359032,2.7477,0.16873954236507416,0.0009645579204232304,0.0005482809778752499,1730321050.7991855,85\n17,90.047610739,2.7605,0.18403524160385132,0.0009596129784400163,0.0005805328001032058,1730321053.1923733,90\n18,92.382848847,2.7539,0.23224714398384094,0.0009543613019931143,0.0006127846223311618,1730321055.5276566,95\n19,94.712266003,2.5615,0.217682346701622,0.0009488068237463877,0.0006450364445591176,1730321057.8570824,100\n20,97.17086891,2.6002,0.16357937455177307,0.0009429537031137121,0.0006772882667870735,1730321060.315679,105\n21,99.577719936,2.6828,0.25480031967163086,0.0009368063231442405,0.0007095400890150293,1730321062.7224832,110\n22,101.901141129,2.4975,0.5949153304100037,0.0009303692872402019,0.0007417919112429853,1730321065.045965,115\n23,104.307448074,2.5594,0.21671947836875916,0.0009236474157096913,0.0007740437334709411,1730321067.452273,120\n24,106.635281778,2.5064,0.16810715198516846,0.0009166457421570314,0.000806295555698897,1730321069.7801187,125\n25,109.060631523,2.4549,0.1424664855003357,0.0009093695097134094,0.0008385473779268528,1730321072.2054155,130\n26,111.413592924,2.4396,0.1524394303560257,0.0009018241671106134,0.0008707992001548088,1730321074.5583532,135\n27,113.760529026,2.3062,0.14876890182495117,0.0008940153646008043,0.0009030510223827647,1730321076.9053724,140\n28,116.102458177,2.3807,0.14114312827587128,0.0008859489497253832,0.0009353028446107205,1730321079.2472916,145\n29,118.488630009,2.3654,0.2096005380153656,0.0008776309629361203,0.0009675546668386764,1730321081.6334293,150\n30,120.958982847,2.3268,0.7081247568130493,0.0008690676330718246,0.0009998064890666322,1730321084.1037734,155\n31,123.30462475,2.443,0.34506821632385254,0.0008602653726939421,0.0010320583112945882,1730321086.449417,160\n32,125.670022851,2.3668,0.20592769980430603,0.000851230773284575,0.001064310133522544,1730321088.814866,165\n33,128.104994526,2.317,0.22068695724010468,0.0008419706003105185,0.0010965619557504998,1730321091.2497602,170\n34,130.491677536,2.3082,0.2178475260734558,0.00083249178815701,0.0011288137779784557,1730321093.6365151,175\n35,132.837561583,2.2383,0.22188293933868408,0.0008228014349349872,0.0011610656002064117,1730321095.9823828,180\n36,135.183352212,2.2465,0.19487063586711884,0.0008129067971657391,0.0011933174224343676,1730321098.3281984,185\n37,137.583608562,2.2514,0.21316461265087128,0.0008028152843469366,0.0012255692446623235,1730321100.7284052,190\n38,139.972811814,2.2811,0.19299210608005524,0.0007925344534041046,0.0012578210668902792,1730321103.1176174,195\n39,142.472292214,2.2328,0.24117575585842133,0.0007820720030316979,0.0012900728891182352,1730321105.6171408,200\n40,145.022740891,2.2508,0.18355099856853485,0.0007714357679280111,0.001322324711346191,1730321108.1675584,205\n41,147.530872272,2.2486,0.23475335538387299,0.0007606337129282474,0.001354576533574147,1730321110.675699,210\n42,149.942790037,2.2006,0.2490156590938568,0.0007496739270401319,0.0013868283558021027,1730321113.0876331,215\n43,152.38477442,2.1914,0.22605396807193756,0.000738564617386543,0.0014190801780300587,1730321115.5295722,220\n44,154.81869637,2.2932,0.2781095802783966,0.0007273141030596919,0.0014513320002580146,1730321117.963524,225\n45,157.298072286,2.2365,0.3445110321044922,0.0007159308088914561,0.0014835838224859705,1730321120.4429,230\n46,159.78252182,2.1629,0.22765351831912994,0.0007044232591445313,0.0015158356447139264,1730321122.9273124,235\n47,162.210046726,2.2035,0.2969088852405548,0.000692800071129124,0.0015480874669418822,1730321125.3549,240\n48,164.650638513,2.2193,0.30428215861320496,0.000681069948749969,0.001580339289169838,1730321127.7954807,245\n49,167.109593513,2.1883,0.25381362438201904,0.0006692416759884978,0.001612591111397794,1730321130.254465,250\n50,169.702794011,2.2588,0.274466872215271,0.0006573241103250467,0.00164484293362575,1730321132.8476326,255\n51,172.237380724,2.1938,0.24127893149852753,0.0006453261761060221,0.0016770947558537056,1730321135.3822274,260\n52,174.726752024,2.1645,0.24267464876174927,0.0006332568578609966,0.0017093465780816616,1730321137.8715854,265\n53,177.239848559,2.1254,0.2807994484901428,0.0006211251935747356,0.0017415984003096175,1730321140.3846636,270\n54,179.764522602,2.1705,0.27932217717170715,0.0006089402679191965,0.0017738502225375734,1730321142.9093585,275\n55,182.245897959,2.2299,0.2532862424850464,0.0005967112054505644,0.0018061020447655294,1730321145.390709,280\n56,184.700008685,2.2223,0.23338675498962402,0.0005844471637764232,0.001838353866993485,1730321147.8448362,285\n57,187.195666298,2.115,0.2764544188976288,0.0005721573266981744,0.001870605689221441,1730321150.340494,290\n58,189.693659579,2.1676,0.32773858308792114,0.0005598508973338427,0.001902857511449397,1730321152.8384762,295\n59,192.180104481,2.1234,0.27900657057762146,0.0005475370912264156,0.0019351093336773529,1730321155.3249502,300\n60,194.8330752,2.1068,0.20468038320541382,0.0005352251294428782,0.0019673611559053086,1730321157.9779012,305\n61,197.366329233,2.0777,0.28213274478912354,0.0005229242316691136,0.0019996129781332645,1730321160.5109308,310\n62,199.936919551,2.0848,0.2317783087491989,0.0005106436093058341,0.0020318648003612204,1730321163.0817177,315\n63,202.469064484,2.0998,0.19269505143165588,0.0004983924585707199,0.0020641166225891763,1730321165.6139028,320\n64,205.00968677,2.032,0.22011959552764893,0.0004861799536119257,0.0020963684448171323,1730321168.1544929,325\n65,207.522211672,2.0645,0.23991484940052032,0.0004740152396381143,0.002128620267045088,1730321170.6670802,330\n66,210.074885067,2.0902,0.3165433406829834,0.00046190742607016126,0.002160872089273044,1730321173.219704,335\n67,212.607400621,2.0449,0.22653858363628387,0.0004498655797196586,0.0021931239115009996,1730321175.752231,340\n68,215.142641906,2.1828,0.21519944071769714,0.0004378987179993266,0.0022253757337289556,1730321178.2875004,345\n69,217.674663808,2.1475,0.21975520253181458,0.0004260158021704166,0.0022576275559569115,1730321180.8194714,350\n70,220.40523774,2.0777,0.21912498772144318,0.0004142257306321635,0.0022898793781848674,1730321183.5500727,355\n71,222.908743305,1.9701,0.17170889675617218,0.00040253733225831,0.0023221312004128233,1730321186.0535638,360\n72,225.500567951,2.0396,0.17512167990207672,0.00039095935978569643,0.0023543830226407793,1730321188.645388,365\n73,228.042045879,2.0426,0.20829389989376068,0.00037950048325986285,0.002386634844868735,1730321191.1868815,370\n74,230.618349077,2.0182,0.15964053571224213,0.0003681692835425757,0.002418886667096691,1730321193.763182,375\n75,233.176931051,2.0273,0.1807621419429779,0.0003569742458861368,0.002451138489324647,1730321196.3217702,380\n76,235.716805217,2.0297,0.18496714532375336,0.00034592375357929005,0.0024833903115526025,1730321198.8616161,385\n77,238.272218658,2.0436,0.17984142899513245,0.0003350260816694816,0.0025156421337805585,1730321201.4170635,390\n78,240.819198773,2.0545,0.16877736151218414,0.0003242893907661768,0.0025478939560085144,1730321203.9640353,395\n79,243.394318442,2.0734,0.15349356830120087,0.0003137217209298693,0.0025801457782364703,1730321206.5391724,400\n80,246.117408258,2.0031,0.17962880432605743,0.0003033309856513676,0.0026123976004644263,1730321209.2622266,405\n81,248.785992052,1.9855,0.1965533196926117,0.00029312496592585647,0.002644649422692382,1730321211.9308329,410\n82,251.401395362,2.083,0.1836826503276825,0.00028311130442618007,0.002676901244920338,1730321214.5462363,415\n83,254.034748821,2.0578,0.17077799141407013,0.0002732974997797044,0.002709153067148294,1730321217.1795602,420\n84,256.737798823,2.0801,0.22900129854679108,0.0002636909009530482,0.00274140488937625,1730321219.882619,425\n85,259.39907005,2.0006,0.19321638345718384,0.00025429870174888326,0.0027736567116042055,1730321222.5439122,430\n86,262.031434927,2.0883,0.2377610206604004,0.00024512793541893143,0.0028059085338321614,1730321225.1762714,435\n87,264.631450976,2.1609,0.1558264195919037,0.00023618546939718494,0.0028381603560601173,1730321227.7762816,440\n88,267.257746723,2.135,0.13540151715278625,0.00022747800015729964,0.0028704121782880732,1730321230.4025562,445\n89,269.927116511,2.0252,0.17989462614059448,0.00021901204819800964,0.002902664000516029,1730321233.0719461,450\n90,272.76379565,2.0783,0.1650395691394806,0.00021079395316031874,0.002934915822743985,1730321235.908615,455\n91,275.377717263,2.0373,0.1377592533826828,0.00020282986908012567,0.002967167644971941,1730321238.5225573,460\n92,277.989547015,2.027,0.13526184856891632,0.000195125759779838,0.002999419467199897,1730321241.1343527,465\n93,280.688536957,2.0701,0.16176435351371765,0.00018768739440242375,0.003031671289427853,1730321243.8333848,470\n94,283.421034745,2.1619,0.1486007422208786,0.00018052034309125008,0.0030639231116558084,1730321246.5658467,475\n95,286.088995427,2.0691,0.15360476076602936,0.000173629972818937,0.0030961749338837643,1730321249.2338078,480\n96,288.740660286,2.0035,0.1591663807630539,0.00016702144336835594,0.0031284267561117202,1730321251.8854868,485\n97,291.38002671,2.0492,0.17376010119915009,0.00016069970346877942,0.003160678578339676,1730321254.5248516,490\n98,294.041288653,2.1064,0.16778981685638428,0.00015466948709007603,0.003192930400567632,1730321257.1861281,495\n99,296.719668301,2.0178,0.14704562723636627,0.00014893530989772532,0.003225182222795588,1730321259.8644834,500\n100,299.494971432,2.0914,0.13494150340557098,0.00014350146587130926,0.003257434045023544,1730321262.6397521,505\n101,302.123865017,1.9906,0.12815223634243011,0.0001383720240890086,0.0032896858672515,1730321265.2686534,510\n102,304.82376902,2.0773,0.13729171454906464,0.00013355082568051638,0.003321937689479456,1730321267.968572,515\n103,307.539175868,2.0562,0.1353372186422348,0.00012904148095064713,0.0033541895117074113,1730321270.6840057,520\n104,310.228099521,2.0857,0.12488662451505661,0.00012484736667579734,0.0033864413339353672,1730321273.372945,525\n105,312.990042726,2.1695,0.1409153789281845,0.00012097162357528127,0.003418693156163323,1730321276.1348112,530\n106,315.693632778,2.0203,0.13588297367095947,0.00011741715395943556,0.003450944978391279,1730321278.838464,535\n107,318.462351357,2.0561,0.12508243322372437,0.00011418661955625381,0.003483196800619235,1730321281.607174,540\n108,321.176408968,2.034,0.11877942085266113,0.00011128243951817938,0.003515448622847191,1730321284.321239,545\n109,323.923049701,2.0371,0.13048700988292694,0.00010870678861054766,0.003547700445075147,1730321287.0678852,550\n110,326.822492382,2.0549,0.13336755335330963,0.00010646159558303551,0.003579952267303103,1730321289.9672594,555\n111,329.541500871,2.1105,0.1256975680589676,0.00010454854172533676,0.0036122040895310587,1730321292.68633,560\n112,332.327330495,2.082,0.1187743991613388,0.00010296905960814624,0.003644455911759014,1730321295.472158,565\n113,335.005827237,2.1113,0.12199924141168594,0.00010172433201039325,0.00367670773398697,1730321298.1506662,570\n114,337.839646749,2.1178,0.13883762061595917,0.00010081529103353022,0.003708959556214926,1730321300.9844844,575\n115,340.599642866,2.0693,0.12716521322727203,0.00010024261740353798,0.003741211378442882,1730321303.7444723,580\n116,343.487011176,2.051,0.13506032526493073,0.00010000673996117118,0.003773463200670838,1730321306.631833,585\n117,346.775762475,,,,0.003779913565116429,1730321309.920559,586\n",
        "system_metrics.csv": "system.memory_percent,_runtime,Process Memory In Use (non-swap) (%),Process CPU Utilization (%),Process CPU Threads In Use,system.gpu.1.correctedMemoryErrors,system.gpu.1.pcieLinkGen,system.gpu.3.correctedMemoryErrors,system.gpu.4.uncorrectedMemoryErrors,system.gpu.7.pcieLinkGen,GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),system.gpu.0.smClock,system.gpu.3.pcieLinkGen,system.gpu.7.uncorrectedMemoryErrors,system.gpu.5.smClock,system.gpu.7.correctedMemoryErrors,GPU 6 Time Spent Accessing Memory (%),GPU 7 Utilization (%),system.gpu.3.uncorrectedMemoryErrors,system.gpu.7.smClock,system.gpu.2.correctedMemoryErrors,system.gpu.7.memoryClock,GPU 2 Time Spent Accessing Memory (%),system.gpu.3.memoryClock,GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),system.gpu.4.enforcedPowerLimitWatts,system.gpu.0.correctedMemoryErrors,system.gpu.1.memoryClock,GPU 6 Memory Allocated (%),system.gpu.1.uncorrectedMemoryErrors,GPU 1 Memory Allocated (%),system.gpu.6.pcieLinkGen,system.gpu.5.enforcedPowerLimitWatts,system.gpu.3.smClock,system.gpu.1.enforcedPowerLimitWatts,system.gpu.4.correctedMemoryErrors,GPU 4 Memory Allocated (%),system.gpu.4.memoryClock,GPU 1 Utilization (%),system.gpu.7.enforcedPowerLimitWatts,system.gpu.4.smClock,system.gpu.0.pcieLinkGen,system.gpu.6.correctedMemoryErrors,GPU 4 Utilization (%),system.gpu.2.enforcedPowerLimitWatts,GPU 2 Memory Allocated (%),GPU 5 Utilization (%),system.gpu.6.smClock,system.gpu.2.smClock,system.gpu.0.uncorrectedMemoryErrors,GPU 5 Memory Allocated (%),system.gpu.2.memoryClock,system.gpu.5.uncorrectedMemoryErrors,GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),system.gpu.5.pcieLinkGen,system.gpu.4.pcieLinkGen,system.gpu.2.uncorrectedMemoryErrors,system.gpu.3.enforcedPowerLimitWatts,system.gpu.6.uncorrectedMemoryErrors,system.gpu.5.memoryClock,system.gpu.2.pcieLinkGen,GPU 0 Memory Allocated (%),system.gpu.0.memoryClock,system.gpu.0.enforcedPowerLimitWatts,system.gpu.5.correctedMemoryErrors,GPU 7 Time Spent Accessing Memory (%),GPU 6 Utilization (%),system.gpu.6.enforcedPowerLimitWatts,system.gpu.6.memoryClock,system.gpu.1.smClock,GPU 7 Memory Allocated (%)\n2.653128739718629,10.297974015,0.10159827825676347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.298349129,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.300091757,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.328636384,,0.285463634781958,107.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.335990919,,,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,0.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,10.061078188764435,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197\n4.446249747690813,20.298284279,0.10159827825676347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.298304618,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.299397258,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.321483624,,0.20527975890858108,107.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.397057779,,,,0.0,4.0,0.0,0.0,4.0,0.0,91.0,2520.0,4.0,0.0,2520.0,0.0,24.0,5.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,15.0,0.0,0.0,1.0,3.110483415820092,350.0,0.0,9000.0,32.445379656160455,0.0,8.584999348788747,4.0,350.0,2520.0,350.0,0.0,58.72392441608058,9000.0,5.0,350.0,2520.0,4.0,0.0,85.0,350.0,5.871619128245203,15.0,2520.0,2520.0,0.0,21.952195667274463,9000.0,0.0,0.0,5.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.13922353911609,9000.0,350.0,0.0,0.0,25.0,350.0,9000.0,2520.0,3.6705250933402795\n2.249708123145713,30.298511225,0.10164408468454629,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.29882434,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.299857741,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.320644469,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,465.0,4.0,0.0,345.0,0.0,0.0,0.0,0.0,360.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,1.0309488147955197,350.0,0.0,9000.0,1.0309488147955197,0.0,1.0309488147955197,4.0,350.0,510.0,350.0,0.0,1.0309488147955197,9000.0,0.0,350.0,510.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,465.0,2520.0,0.0,1.0309488147955197,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,1.0309488147955197,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,390.0,1.0309488147955197\n,30.321631242,,0.1624158250408144,44.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n2.878833666287386,40.298209863,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.298307601,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.299184595,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.321211801,,0.13337186936046103,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.327137992,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,6.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,7.0,2.47663779630112,350.0,0.0,9000.0,2.47663779630112,0.0,2.450589346183902,4.0,350.0,2520.0,350.0,0.0,2.47663779630112,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,2.47663779630112,0.0,2520.0,2520.0,0.0,2.47663779630112,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.13922353911609,9000.0,350.0,0.0,0.0,1.0,350.0,9000.0,2520.0,2.433223712772423\n,50.298720148,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.577726688089614,50.298727968,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.300188311,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.321343863,,0.11319271499492327,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.34061036,,,,0.0,4.0,0.0,0.0,4.0,100.0,84.0,2505.0,4.0,0.0,2520.0,0.0,83.0,94.0,0.0,2520.0,0.0,9000.0,83.0,9000.0,100.0,100.0,84.0,93.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2505.0,4.0,0.0,94.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,99.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,86.0,94.0,350.0,9000.0,2505.0,67.40674112181992\n,60.297800351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.594317321953927,60.297881509,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.299602278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.321609165,,0.09825612034467446,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.342227467,,,,0.0,4.0,0.0,0.0,4.0,7.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,18.0,0.0,2520.0,0.0,9000.0,14.0,9000.0,2.0,13.0,0.0,0.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,22.0,350.0,2475.0,4.0,0.0,0.0,350.0,67.45015520534862,9.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,0.0,14.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,17.0,0.0,350.0,9000.0,2490.0,67.40674112181992\n4.608618391560136,70.298047605,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.298150333,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.299699365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.323521598,,0.08690303700512399,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.340935679,,,,0.0,4.0,0.0,0.0,4.0,100.0,42.0,2520.0,4.0,0.0,2520.0,0.0,38.0,100.0,0.0,2520.0,0.0,9000.0,51.0,9000.0,73.0,88.0,0.0,0.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,67.45015520534862,100.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,70.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,2.0,100.0,350.0,9000.0,2520.0,67.40674112181992\n4.618023851876368,80.298442959,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.298494738,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.300239786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.32124038,,0.07788639271799469,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.350633213,,,,0.0,4.0,0.0,0.0,4.0,94.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,99.0,100.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,89.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,67.40674112181992\n,90.298502361,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.624071057474737,90.29855508,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.300067153,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.32148235,,0.0705790700780442,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.347730709,,,,0.0,4.0,0.0,0.0,4.0,48.0,11.0,2520.0,4.0,0.0,2520.0,0.0,7.0,0.0,0.0,2520.0,0.0,9000.0,21.0,9000.0,0.0,0.0,0.0,6.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,0.0,350.0,2520.0,4.0,0.0,19.0,350.0,67.45015520534862,0.0,2460.0,2520.0,0.0,67.45015520534862,9000.0,0.0,39.0,29.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,0.0,16.0,350.0,9000.0,2520.0,67.40674112181992\n4.564937987731275,100.297891418,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.298015836,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.299313572,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.324705607,,0.06453728060283064,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.343777558,,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,85.0,9000.0,88.0,12.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,64.0,100.0,350.0,9000.0,2520.0,67.40674112181992\n,110.297777052,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.5738092921003854,110.297810312,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.298875562,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.322882102,,0.05945801208999546,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.342414784,,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2490.0,4.0,0.0,2520.0,0.0,100.0,94.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,84.0,84.0,99.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,94.0,350.0,2430.0,4.0,0.0,100.0,350.0,67.45015520534862,94.0,2460.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,83.0,100.0,350.0,9000.0,2460.0,67.40674112181992\n4.581355995718985,120.298816635,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.299057181,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.300513684,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.321337652,,0.055127733734070414,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.347476443,,,,0.0,4.0,0.0,0.0,4.0,100.0,83.0,2490.0,4.0,0.0,2520.0,0.0,83.0,94.0,0.0,2520.0,0.0,9000.0,91.0,9000.0,87.0,86.0,83.0,93.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,94.0,350.0,2505.0,4.0,0.0,94.0,350.0,67.45015520534862,93.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,84.0,93.0,350.0,9000.0,2505.0,67.40674112181992\n,130.298708612,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.58823566689334,130.298925578,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.300545529,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.321318638,,0.051393267587691444,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.339021884,,,,0.0,4.0,0.0,0.0,4.0,94.0,84.0,2505.0,4.0,0.0,2520.0,0.0,85.0,93.0,0.0,2520.0,0.0,9000.0,84.0,9000.0,100.0,100.0,85.0,92.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,98.0,350.0,2505.0,4.0,0.0,94.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,83.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,89.0,94.0,350.0,9000.0,2505.0,67.40674112181992\n,140.298594674,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.590924617773847,140.29876046,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.30044868,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.321288657,,0.04816422844070779,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.351355506,,,,0.0,4.0,0.0,0.0,4.0,21.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,57.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,26.0,0.0,0.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,27.0,350.0,2520.0,4.0,0.0,0.0,350.0,67.45015520534862,0.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,13.0,2.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,56.0,0.0,350.0,9000.0,2445.0,67.40674112181992\n4.599434013506922,150.298431888,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.298622334,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.300157056,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.321213001,,0.04532528914076163,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.347723655,,,,0.0,4.0,0.0,0.0,4.0,0.0,22.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,22.0,29.0,0.0,0.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,31.0,350.0,2505.0,4.0,0.0,23.0,350.0,67.45015520534862,22.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2445.0,67.40674112181992\n4.606513188709721,160.299007253,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.299041922,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.301315391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.321356654,,0.04278745282480586,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.345293105,,,,0.0,4.0,0.0,0.0,4.0,100.0,46.0,2505.0,4.0,0.0,2520.0,0.0,0.0,37.0,0.0,2520.0,0.0,9000.0,97.0,9000.0,21.0,67.0,96.0,92.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,67.0,350.0,2505.0,4.0,0.0,48.0,350.0,67.45015520534862,22.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,35.0,0.0,350.0,9000.0,2505.0,67.40674112181992\n4.613727133237236,170.298338735,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.298346645,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.300062174,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.321723406,,0.040523425129524164,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.342160932,,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2475.0,4.0,0.0,2520.0,0.0,3.0,100.0,0.0,2520.0,0.0,9000.0,29.0,9000.0,4.0,68.0,0.0,0.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,68.0,350.0,2505.0,4.0,0.0,100.0,350.0,67.45015520534862,4.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,31.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,100.0,3.0,350.0,9000.0,2505.0,67.40674112181992\n,180.298901447,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.621542996939748,180.298974366,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.300643995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.321545353,,0.03849077729784032,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.348120236,,,,0.0,4.0,0.0,0.0,4.0,78.0,31.0,2505.0,4.0,0.0,2520.0,0.0,97.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,100.0,35.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,36.0,350.0,2505.0,4.0,0.0,32.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,80.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,0.0,93.0,350.0,9000.0,2475.0,67.40674112181992\n,190.298033151,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.625048513644449,190.298362055,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.299621972,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.322001981,,0.03669433869430845,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.339555939,,,,0.0,4.0,0.0,0.0,4.0,36.0,27.0,2505.0,4.0,0.0,2520.0,0.0,6.0,100.0,0.0,2520.0,0.0,9000.0,74.0,9000.0,100.0,33.0,72.0,71.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,35.0,350.0,2505.0,4.0,0.0,28.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,35.0,73.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,100.0,6.0,350.0,9000.0,2475.0,67.40674112181992\n4.63164615350725,200.298344456,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.298378985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.300103464,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.321622499,,0.03502802198725463,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.352040621,,,,0.0,4.0,0.0,0.0,4.0,0.0,12.0,2520.0,4.0,0.0,2520.0,0.0,0.0,8.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,17.0,0.0,0.0,0.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,0.0,350.0,2505.0,4.0,0.0,13.0,350.0,67.45015520534862,17.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,7.0,0.0,350.0,9000.0,2520.0,67.40674112181992\n4.639201185567264,210.298702635,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.299029719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.300351114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.323567048,,0.03350950440843442,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.353698676,,,,0.0,4.0,0.0,0.0,4.0,0.0,43.0,2520.0,4.0,0.0,2520.0,0.0,40.0,10.0,0.0,2520.0,0.0,9000.0,54.0,9000.0,0.0,0.0,32.0,39.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,1.0,350.0,2520.0,4.0,0.0,52.0,350.0,67.45015520534862,0.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,0.0,63.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,4.0,48.0,350.0,9000.0,2490.0,67.40674112181992\n,220.298393749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.646492357460628,220.298986879,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.300653628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.321476476,,0.032119983763371496,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.346566756,,,,0.0,4.0,0.0,0.0,4.0,100.0,89.0,2505.0,4.0,0.0,2520.0,0.0,89.0,100.0,0.0,2520.0,0.0,9000.0,87.0,9000.0,100.0,100.0,91.0,93.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2505.0,4.0,0.0,94.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,100.0,93.0,350.0,9000.0,2505.0,67.40674112181992\n,230.298300605,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.650515373229619,230.298326064,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.299377005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.321421371,,0.03085970617171228,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.344106745,,,,0.0,4.0,0.0,0.0,4.0,94.0,100.0,2460.0,4.0,0.0,2520.0,0.0,100.0,94.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,84.0,84.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,94.0,350.0,2430.0,4.0,0.0,100.0,350.0,67.45015520534862,94.0,2475.0,2520.0,0.0,67.45015520534862,9000.0,0.0,84.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,84.0,100.0,350.0,9000.0,2430.0,67.40674112181992\n,240.298561108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.657745217508926,240.298719356,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.300497373,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.321249032,,0.029682670942406682,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.34046129,,,,0.0,4.0,0.0,0.0,4.0,100.0,85.0,2505.0,4.0,0.0,2520.0,0.0,85.0,97.0,0.0,2520.0,0.0,9000.0,84.0,9000.0,100.0,100.0,88.0,94.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2505.0,4.0,0.0,94.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,100.0,93.0,350.0,9000.0,2505.0,67.40674112181992\n4.665918447061249,250.297987881,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.298096489,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.29912238,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.321371793,,0.028594273715437157,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.337802651,,,,0.0,4.0,0.0,0.0,4.0,94.0,100.0,2475.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,84.0,85.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,94.0,350.0,2415.0,4.0,0.0,100.0,350.0,67.45015520534862,94.0,2445.0,2520.0,0.0,67.45015520534862,9000.0,0.0,84.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,86.0,100.0,350.0,9000.0,2430.0,67.40674112181992\n4.671709363803346,260.298282863,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.298283893,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.299987532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.3214058,,0.027599099138575115,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.340305063,,,,0.0,4.0,0.0,0.0,4.0,100.0,71.0,2520.0,4.0,0.0,2520.0,0.0,13.0,100.0,0.0,2520.0,0.0,9000.0,74.0,9000.0,100.0,100.0,95.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,67.45015520534862,96.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,0.0,73.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,97.0,100.0,350.0,9000.0,2505.0,67.40674112181992\n4.677795940215677,270.298114109,0.10164559894662176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.298221787,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.299242408,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.321135727,,0.026659919182934106,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.337590215,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,7.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,67.45015520534862,3.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,0.0,2.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,67.40674112181992\n,280.298376781,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.684565448824043,280.298426631,0.10166225582945188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.29952528,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.321225732,,0.025797562337144635,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.340275043,,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,99.0,100.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,67.45015520534862,100.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,99.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,67.40674112181992\n4.690137176130715,290.298627149,0.10166225582945188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.298747577,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.300698351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.321495369,,0.024978823899673017,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.345297803,,,,0.0,4.0,0.0,0.0,4.0,94.0,100.0,2490.0,4.0,0.0,2520.0,0.0,100.0,94.0,0.0,2520.0,0.0,9000.0,84.0,9000.0,83.0,83.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,94.0,350.0,2475.0,4.0,0.0,100.0,350.0,67.45015520534862,94.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,83.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,83.0,100.0,350.0,9000.0,2475.0,67.40674112181992\n4.695238346497438,300.298679465,0.10166225582945188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.298776213,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.300071559,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.321578785,,0.024224418056337016,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.342304095,,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,100.0,27.0,20.0,21.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,28.0,350.0,2520.0,4.0,0.0,100.0,350.0,67.45015520534862,100.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,62.0,100.0,350.0,9000.0,2505.0,67.40674112181992\n4.699350325163363,310.298534,0.10166225582945188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.298604879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.299991743,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.321753604,,0.023504337564123193,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.339297963,,,,0.0,4.0,0.0,0.0,4.0,75.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,46.0,9000.0,67.0,79.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,90.0,350.0,2520.0,4.0,0.0,100.0,350.0,67.45015520534862,76.0,2520.0,2520.0,0.0,67.45015520534862,9000.0,0.0,64.0,55.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,94.0,100.0,350.0,9000.0,2520.0,67.40674112181992\n4.702704794226037,320.298398659,0.10166225582945188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.298738262,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.300537929,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.321578803,,0.022827179603925458,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.347903301,,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,99.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,88.0,93.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,67.45015520534862,100.0,2505.0,2520.0,0.0,67.45015520534862,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,67.40674112181992\n4.709648442973082,330.298404951,0.10166263439497074,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.298637317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.30011584,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.324613641,,0.02220054192871998,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.341875454,,,,0.0,4.0,0.0,0.0,4.0,85.0,100.0,2520.0,4.0,0.0,2520.0,0.0,34.0,93.0,0.0,2520.0,0.0,9000.0,96.0,9000.0,0.0,27.0,93.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2520.0,350.0,0.0,67.45015520534862,9000.0,28.0,350.0,2520.0,4.0,0.0,100.0,350.0,67.45015520534862,0.0,2460.0,2520.0,0.0,67.45015520534862,9000.0,0.0,87.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,97.0,36.0,350.0,9000.0,2505.0,67.40674112181992\n4.715082750996406,340.298860522,0.1016641486570462,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.298899511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.300522091,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.321254501,,0.02159812092991425,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.3485951,,,,0.0,4.0,0.0,0.0,4.0,94.0,86.0,2475.0,4.0,0.0,2520.0,0.0,86.0,97.0,0.0,2520.0,0.0,9000.0,85.0,9000.0,84.0,84.0,100.0,100.0,67.45015520534862,350.0,0.0,9000.0,67.45015520534862,0.0,67.40674112181992,4.0,350.0,2505.0,350.0,0.0,67.45015520534862,9000.0,94.0,350.0,2490.0,4.0,0.0,94.0,350.0,67.45015520534862,94.0,2490.0,2520.0,0.0,67.45015520534862,9000.0,0.0,85.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,74.94342602240167,9000.0,350.0,0.0,90.0,93.0,350.0,9000.0,2445.0,67.40674112181992\n,350.298222027,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n2.1769648658679714,350.298344645,0.10166907000879147,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.299674341,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.321149726,,0.021039451680820043,44.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.322816186,,,,0.0,4.0,0.0,0.0,4.0,97.0,0.0,2520.0,4.0,0.0,2520.0,0.0,3.0,0.0,0.0,2520.0,0.0,9000.0,1.0,9000.0,9.0,9.0,1.0,10.0,1.0309488147955197,350.0,0.0,9000.0,1.0309488147955197,0.0,1.0309488147955197,4.0,350.0,2520.0,350.0,0.0,1.0309488147955197,9000.0,100.0,350.0,2520.0,4.0,0.0,0.0,350.0,1.0309488147955197,100.0,2520.0,2520.0,0.0,1.0309488147955197,9000.0,0.0,9.0,7.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,1.0309488147955197,9000.0,350.0,0.0,0.0,35.0,350.0,9000.0,2520.0,1.0309488147955197\n",
        "trainer_state.json": {},
        "eval_results.json": {
            "results": {
                "arc_challenge": {
                    "alias": "arc_challenge",
                    "acc,none": 0.2167235494880546,
                    "acc_stderr,none": 0.012040156713481203,
                    "acc_norm,none": 0.2764505119453925,
                    "acc_norm_stderr,none": 0.013069662474252427
                },
                "arc_easy": {
                    "alias": "arc_easy",
                    "acc,none": 0.2596801346801347,
                    "acc_stderr,none": 0.008996990428562134,
                    "acc_norm,none": 0.2676767676767677,
                    "acc_norm_stderr,none": 0.009085000147099275
                },
                "blimp_adjunct_island_filtered": {
                    "alias": "blimp_adjunct_island_filtered",
                    "acc,none": 0.697198275862069,
                    "acc_stderr,none": 0.015090980467639566
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "alias": "blimp_anaphor_gender_agreement_filtered",
                    "acc,none": 0.659114315139032,
                    "acc_stderr,none": 0.01521944749927989
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "alias": "blimp_anaphor_number_agreement_filtered",
                    "acc,none": 0.6756176154672395,
                    "acc_stderr,none": 0.015351034189447702
                },
                "blimp_animate_subject_passive_filtered": {
                    "alias": "blimp_animate_subject_passive_filtered",
                    "acc,none": 0.6581005586592179,
                    "acc_stderr,none": 0.01586450646160461
                },
                "blimp_animate_subject_trans_filtered": {
                    "alias": "blimp_animate_subject_trans_filtered",
                    "acc,none": 0.7984832069339112,
                    "acc_stderr,none": 0.013210615562270685
                },
                "blimp_causative_filtered": {
                    "alias": "blimp_causative_filtered",
                    "acc,none": 0.460880195599022,
                    "acc_stderr,none": 0.017439163038138684
                },
                "blimp_complex_NP_island_filtered": {
                    "alias": "blimp_complex_NP_island_filtered",
                    "acc,none": 0.6773049645390071,
                    "acc_stderr,none": 0.016082735406810284
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "acc,none": 0.6192052980132451,
                    "acc_stderr,none": 0.01614129931462054
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "acc,none": 0.684931506849315,
                    "acc_stderr,none": 0.015087660093726975
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_1_filtered",
                    "acc,none": 0.6318622174381054,
                    "acc_stderr,none": 0.01583224134358545
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_2_filtered",
                    "acc,none": 0.6895810955961332,
                    "acc_stderr,none": 0.015171386770864105
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "acc,none": 0.6461086637298091,
                    "acc_stderr,none": 0.018337211378822087
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "acc,none": 0.724390243902439,
                    "acc_stderr,none": 0.01561318978583971
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "acc,none": 0.6801275239107333,
                    "acc_stderr,none": 0.015213168817088094
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "acc,none": 0.6615598885793872,
                    "acc_stderr,none": 0.01767119500932192
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "acc,none": 0.7154761904761905,
                    "acc_stderr,none": 0.015576716653832685
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "acc,none": 0.6227224008574491,
                    "acc_stderr,none": 0.01587704947156475
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "alias": "blimp_distractor_agreement_relational_noun_filtered",
                    "acc,none": 0.6776649746192893,
                    "acc_stderr,none": 0.016659958036282167
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "alias": "blimp_distractor_agreement_relative_clause_filtered",
                    "acc,none": 0.6888633754305397,
                    "acc_stderr,none": 0.015695765056656957
                },
                "blimp_drop_argument_filtered": {
                    "alias": "blimp_drop_argument_filtered",
                    "acc,none": 0.7423913043478261,
                    "acc_stderr,none": 0.01442576794570196
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "alias": "blimp_ellipsis_n_bar_1_filtered",
                    "acc,none": 0.6957605985037406,
                    "acc_stderr,none": 0.016256288059240037
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "alias": "blimp_ellipsis_n_bar_2_filtered",
                    "acc,none": 0.36594202898550726,
                    "acc_stderr,none": 0.016750118135896178
                },
                "blimp_existential_there_object_raising_filtered": {
                    "alias": "blimp_existential_there_object_raising_filtered",
                    "acc,none": 0.7524630541871922,
                    "acc_stderr,none": 0.015154868680498368
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "alias": "blimp_existential_there_quantifiers_1_filtered",
                    "acc,none": 0.7247311827956989,
                    "acc_stderr,none": 0.014654099140302959
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "alias": "blimp_existential_there_quantifiers_2_filtered",
                    "acc,none": 0.7749725576289791,
                    "acc_stderr,none": 0.013843318400648515
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "alias": "blimp_existential_there_subject_raising_filtered",
                    "acc,none": 0.7651515151515151,
                    "acc_stderr,none": 0.013952972943728678
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "alias": "blimp_expletive_it_object_raising_filtered",
                    "acc,none": 0.6376811594202898,
                    "acc_stderr,none": 0.017458730015313405
                },
                "blimp_inchoative_filtered": {
                    "alias": "blimp_inchoative_filtered",
                    "acc,none": 0.4865497076023392,
                    "acc_stderr,none": 0.017103456025108803
                },
                "blimp_intransitive_filtered": {
                    "alias": "blimp_intransitive_filtered",
                    "acc,none": 0.6555299539170507,
                    "acc_stderr,none": 0.016138473500122024
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "alias": "blimp_irregular_past_participle_adjectives_filtered",
                    "acc,none": 0.8397502601456815,
                    "acc_stderr,none": 0.011839629812402537
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "alias": "blimp_irregular_past_participle_verbs_filtered",
                    "acc,none": 0.6507430997876857,
                    "acc_stderr,none": 0.015541125649965402
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.6044776119402985,
                    "acc_stderr,none": 0.01725511560233308
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.5852017937219731,
                    "acc_stderr,none": 0.01650564146479886
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "alias": "blimp_left_branch_island_echo_question_filtered",
                    "acc,none": 0.6346356916578669,
                    "acc_stderr,none": 0.015655961266678235
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "alias": "blimp_left_branch_island_simple_question_filtered",
                    "acc,none": 0.5678233438485805,
                    "acc_stderr,none": 0.016072205299479867
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                    "acc,none": 0.628632938643703,
                    "acc_stderr,none": 0.01586084310033123
                },
                "blimp_npi_present_1_filtered": {
                    "alias": "blimp_npi_present_1_filtered",
                    "acc,none": 0.6578657865786579,
                    "acc_stderr,none": 0.015744322570454876
                },
                "blimp_npi_present_2_filtered": {
                    "alias": "blimp_npi_present_2_filtered",
                    "acc,none": 0.675054704595186,
                    "acc_stderr,none": 0.015500268534545983
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "alias": "blimp_only_npi_licensor_present_filtered",
                    "acc,none": 0.8219954648526077,
                    "acc_stderr,none": 0.012887310436136733
                },
                "blimp_only_npi_scope_filtered": {
                    "alias": "blimp_only_npi_scope_filtered",
                    "acc,none": 0.7275985663082437,
                    "acc_stderr,none": 0.015397402868309755
                },
                "blimp_passive_1_filtered": {
                    "alias": "blimp_passive_1_filtered",
                    "acc,none": 0.6190476190476191,
                    "acc_stderr,none": 0.016765495541788553
                },
                "blimp_passive_2_filtered": {
                    "alias": "blimp_passive_2_filtered",
                    "acc,none": 0.6267995570321152,
                    "acc_stderr,none": 0.016103940116970594
                },
                "blimp_principle_A_c_command_filtered": {
                    "alias": "blimp_principle_A_c_command_filtered",
                    "acc,none": 0.8298097251585623,
                    "acc_stderr,none": 0.01222477081036538
                },
                "blimp_principle_A_case_1_filtered": {
                    "alias": "blimp_principle_A_case_1_filtered",
                    "acc,none": 0.6206140350877193,
                    "acc_stderr,none": 0.016076527145848223
                },
                "blimp_principle_A_case_2_filtered": {
                    "alias": "blimp_principle_A_case_2_filtered",
                    "acc,none": 0.5704918032786885,
                    "acc_stderr,none": 0.01637334205516003
                },
                "blimp_principle_A_domain_1_filtered": {
                    "alias": "blimp_principle_A_domain_1_filtered",
                    "acc,none": 0.8435448577680525,
                    "acc_stderr,none": 0.012023021486915824
                },
                "blimp_principle_A_domain_2_filtered": {
                    "alias": "blimp_principle_A_domain_2_filtered",
                    "acc,none": 0.774863387978142,
                    "acc_stderr,none": 0.013815370485483865
                },
                "blimp_principle_A_domain_3_filtered": {
                    "alias": "blimp_principle_A_domain_3_filtered",
                    "acc,none": 0.6216790648246546,
                    "acc_stderr,none": 0.015817920257067096
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "alias": "blimp_principle_A_reconstruction_filtered",
                    "acc,none": 0.6690796277145812,
                    "acc_stderr,none": 0.015139519517932182
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.6,
                    "acc_stderr,none": 0.01643064984162899
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.5777777777777777,
                    "acc_stderr,none": 0.01607551753667612
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "acc,none": 0.7671381936887922,
                    "acc_stderr,none": 0.01394969117784254
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "alias": "blimp_sentential_negation_npi_scope_filtered",
                    "acc,none": 0.6659012629161883,
                    "acc_stderr,none": 0.015991260938213684
                },
                "blimp_sentential_subject_island_filtered": {
                    "alias": "blimp_sentential_subject_island_filtered",
                    "acc,none": 0.7252861602497399,
                    "acc_stderr,none": 0.01440652868493745
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "alias": "blimp_superlative_quantifiers_1_filtered",
                    "acc,none": 0.7528089887640449,
                    "acc_stderr,none": 0.01379397097191115
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "alias": "blimp_superlative_quantifiers_2_filtered",
                    "acc,none": 0.6561866125760649,
                    "acc_stderr,none": 0.015134112543831384
                },
                "blimp_supplement_hypernym": {
                    "alias": "blimp_supplement_hypernym",
                    "acc,none": 0.6472684085510689,
                    "acc_stderr,none": 0.016476554013372193
                },
                "blimp_supplement_qa_congruence_easy": {
                    "alias": "blimp_supplement_qa_congruence_easy",
                    "acc,none": 0.484375,
                    "acc_stderr,none": 0.06296331249416676
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "alias": "blimp_supplement_qa_congruence_tricky",
                    "acc,none": 0.44242424242424244,
                    "acc_stderr,none": 0.03878372113711276
                },
                "blimp_supplement_subject_aux_inversion": {
                    "alias": "blimp_supplement_subject_aux_inversion",
                    "acc,none": 0.7101111973105767,
                    "acc_stderr,none": 0.007297060984255589
                },
                "blimp_supplement_turn_taking": {
                    "alias": "blimp_supplement_turn_taking",
                    "acc,none": 0.7714285714285715,
                    "acc_stderr,none": 0.02513950543223199
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "alias": "blimp_tough_vs_raising_1_filtered",
                    "acc,none": 0.2974683544303797,
                    "acc_stderr,none": 0.014855194482320403
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "alias": "blimp_tough_vs_raising_2_filtered",
                    "acc,none": 0.8815217391304347,
                    "acc_stderr,none": 0.010660512728437394
                },
                "blimp_transitive_filtered": {
                    "alias": "blimp_transitive_filtered",
                    "acc,none": 0.5921658986175116,
                    "acc_stderr,none": 0.01668990699610605
                },
                "blimp_wh_island_filtered": {
                    "alias": "blimp_wh_island_filtered",
                    "acc,none": 0.671875,
                    "acc_stderr,none": 0.015161933852206523
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "alias": "blimp_wh_questions_object_gap_filtered",
                    "acc,none": 0.719441210710128,
                    "acc_stderr,none": 0.015337901735660128
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_filtered",
                    "acc,none": 0.6926503340757239,
                    "acc_stderr,none": 0.015405548841093948
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "acc,none": 0.7082847141190198,
                    "acc_stderr,none": 0.015536265904417153
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_filtered",
                    "acc,none": 0.7688734030197445,
                    "acc_stderr,none": 0.014374844514774155
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "acc,none": 0.7577142857142857,
                    "acc_stderr,none": 0.014493087871112522
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_filtered",
                    "acc,none": 0.6420021762785637,
                    "acc_stderr,none": 0.01582293714186378
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "acc,none": 0.7032967032967034,
                    "acc_stderr,none": 0.015151252473532117
                },
                "cola": {
                    "alias": "cola",
                    "mcc,none": -0.0021073998395043764,
                    "mcc_stderr,none": 0.030957255707763847
                },
                "hellaswag": {
                    "alias": "hellaswag",
                    "acc,none": 0.25562636924915355,
                    "acc_stderr,none": 0.004353212146198103,
                    "acc_norm,none": 0.2605058753236407,
                    "acc_norm_stderr,none": 0.004380136468544087
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "alias": "inverse_scaling_hindsight_neglect_10shot",
                    "acc,none": 0.4380952380952381,
                    "acc_stderr,none": 0.027999533688878336,
                    "acc_norm,none": 0.4380952380952381,
                    "acc_norm_stderr,none": 0.027999533688878336
                },
                "inverse_scaling_into_the_unknown": {
                    "alias": "inverse_scaling_into_the_unknown",
                    "acc,none": 0.5241228070175439,
                    "acc_stderr,none": 0.011696896320542174,
                    "acc_norm,none": 0.5241228070175439,
                    "acc_norm_stderr,none": 0.011696896320542174
                },
                "inverse_scaling_memo_trap": {
                    "alias": "inverse_scaling_memo_trap",
                    "acc,none": 0.5598290598290598,
                    "acc_stderr,none": 0.016234263745493895,
                    "acc_norm,none": 0.5352564102564102,
                    "acc_norm_stderr,none": 0.01631104692869162
                },
                "inverse_scaling_modus_tollens": {
                    "alias": "inverse_scaling_modus_tollens",
                    "acc,none": 0.5655339805825242,
                    "acc_stderr,none": 0.014105022431916433,
                    "acc_norm,none": 1.0,
                    "acc_norm_stderr,none": 0.0
                },
                "inverse_scaling_neqa": {
                    "alias": "inverse_scaling_neqa",
                    "acc,none": 0.5266666666666666,
                    "acc_stderr,none": 0.02887459269508958,
                    "acc_norm,none": 0.5266666666666666,
                    "acc_norm_stderr,none": 0.02887459269508958
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "alias": "inverse_scaling_pattern_matching_suppression",
                    "acc,none": 0.45588235294117646,
                    "acc_stderr,none": 0.01318441333101198,
                    "acc_norm,none": 0.3641456582633053,
                    "acc_norm_stderr,none": 0.01273809261175419
                },
                "inverse_scaling_quote_repetition": {
                    "alias": "inverse_scaling_quote_repetition",
                    "acc,none": 0.12333333333333334,
                    "acc_stderr,none": 0.019016119040222528,
                    "acc_norm,none": 0.16666666666666666,
                    "acc_norm_stderr,none": 0.021552525004661323
                },
                "inverse_scaling_redefine_math": {
                    "alias": "inverse_scaling_redefine_math",
                    "acc,none": 0.5144444444444445,
                    "acc_stderr,none": 0.01666897359719132,
                    "acc_norm,none": 0.5144444444444445,
                    "acc_norm_stderr,none": 0.01666897359719132
                },
                "inverse_scaling_repetitive_algebra": {
                    "alias": "inverse_scaling_repetitive_algebra",
                    "acc,none": 0.485,
                    "acc_stderr,none": 0.01581217964181488,
                    "acc_norm,none": 0.484,
                    "acc_norm_stderr,none": 0.015811198373114985
                },
                "inverse_scaling_sig_figs": {
                    "alias": "inverse_scaling_sig_figs",
                    "acc,none": 0.3995788869215677,
                    "acc_stderr,none": 0.003388423337316037,
                    "acc_norm,none": 0.3995788869215677,
                    "acc_norm_stderr,none": 0.003388423337316037
                },
                "inverse_scaling_winobias_antistereotype": {
                    "alias": "inverse_scaling_winobias_antistereotype",
                    "acc,none": 0.6092233009708737,
                    "acc_stderr,none": 0.02406753831001832,
                    "acc_norm,none": 0.5121359223300971,
                    "acc_norm_stderr,none": 0.02465591529628955
                },
                "lambada_openai": {
                    "alias": "lambada_openai",
                    "perplexity,none": 52382115.35949041,
                    "perplexity_stderr,none": 5707421.275562304,
                    "acc,none": 0.0,
                    "acc_stderr,none": 0.0
                },
                "mathqa": {
                    "alias": "mathqa",
                    "acc,none": 0.19195979899497487,
                    "acc_stderr,none": 0.007209783403877376,
                    "acc_norm,none": 0.1983249581239531,
                    "acc_norm_stderr,none": 0.007299421758771587
                },
                "mnli": {
                    "alias": "mnli",
                    "acc,none": 0.34314824248599085,
                    "acc_stderr,none": 0.004792383296116337
                },
                "mnli_mismatch": {
                    "alias": "mnli_mismatch",
                    "acc,none": 0.3403173311635476,
                    "acc_stderr,none": 0.004778710514457372
                },
                "mrpc": {
                    "alias": "mrpc",
                    "acc,none": 0.4215686274509804,
                    "acc_stderr,none": 0.024477263169831738
                },
                "openbookqa": {
                    "alias": "openbookqa",
                    "acc,none": 0.166,
                    "acc_stderr,none": 0.016656616876531173,
                    "acc_norm,none": 0.266,
                    "acc_norm_stderr,none": 0.019780559675655396
                },
                "piqa": {
                    "alias": "piqa",
                    "acc,none": 0.5321001088139282,
                    "acc_stderr,none": 0.011641758014820223,
                    "acc_norm,none": 0.4961915125136017,
                    "acc_norm_stderr,none": 0.011665485744747022
                },
                "qa4mre_2011": {
                    "alias": "qa4mre_2011",
                    "acc,none": 0.14166666666666666,
                    "acc_stderr,none": 0.03196600376689893,
                    "acc_norm,none": 0.15833333333333333,
                    "acc_norm_stderr,none": 0.03346437826273889
                },
                "qa4mre_2012": {
                    "alias": "qa4mre_2012",
                    "acc,none": 0.11875,
                    "acc_stderr,none": 0.025654751481643815,
                    "acc_norm,none": 0.25,
                    "acc_norm_stderr,none": 0.03434014098717226
                },
                "qa4mre_2013": {
                    "alias": "qa4mre_2013",
                    "acc,none": 0.2112676056338028,
                    "acc_stderr,none": 0.024265434740019187,
                    "acc_norm,none": 0.1619718309859155,
                    "acc_norm_stderr,none": 0.021900591094608266
                },
                "qnli": {
                    "alias": "qnli",
                    "acc,none": 0.49478308621636463,
                    "acc_stderr,none": 0.006765042284363242
                },
                "qqp": {
                    "alias": "qqp",
                    "acc,none": 0.6000247341083353,
                    "acc_stderr,none": 0.0024364339631954856
                },
                "rte": {
                    "alias": "rte",
                    "acc,none": 0.4620938628158845,
                    "acc_stderr,none": 0.030009848912529075
                },
                "sciq": {
                    "alias": "sciq",
                    "acc,none": 0.175,
                    "acc_stderr,none": 0.012021627157731998,
                    "acc_norm,none": 0.199,
                    "acc_norm_stderr,none": 0.012631649083099107
                },
                "squad_completion": {
                    "alias": "squad_completion",
                    "contains,none": 0.0006702412868632708,
                    "contains_stderr,none": "N/A"
                },
                "sst2": {
                    "alias": "sst2",
                    "acc,none": 0.46674311926605505,
                    "acc_stderr,none": 0.016904336086101722
                },
                "swag": {
                    "alias": "swag",
                    "acc,none": 0.2654703588923323,
                    "acc_stderr,none": 0.0031220755168977136,
                    "acc_norm,none": 0.25452364290712787,
                    "acc_norm_stderr,none": 0.0030797234829182027
                },
                "tinyGSM8k": {
                    "alias": "tinyGSM8k",
                    "exact_match,strict-match": 0.0055335888559958765,
                    "exact_match_stderr,strict-match": "N/A",
                    "exact_match,flexible-extract": 0.0055335888559958765,
                    "exact_match_stderr,flexible-extract": "N/A"
                },
                "tinyMMLU": {
                    "alias": "tinyMMLU",
                    "acc_norm,none": 0.2935076551228106,
                    "acc_norm_stderr,none": "N/A"
                },
                "tinyTruthfulQA": {
                    "alias": "tinyTruthfulQA",
                    "acc,none": 0.5313489202853031,
                    "acc_stderr,none": "N/A"
                },
                "triviaqa": {
                    "alias": "triviaqa",
                    "exact_match,remove_whitespace": 0.0,
                    "exact_match_stderr,remove_whitespace": 0.0
                },
                "winogrande": {
                    "alias": "winogrande",
                    "acc,none": 0.5019731649565904,
                    "acc_stderr,none": 0.014052376259225643
                },
                "wnli": {
                    "alias": "wnli",
                    "acc,none": 0.5492957746478874,
                    "acc_stderr,none": 0.059470271877380014
                },
                "wsc273": {
                    "alias": "wsc273",
                    "acc,none": 0.4981684981684982,
                    "acc_stderr,none": 0.030316749738547345
                }
            },
            "group_subtasks": {
                "arc_challenge": [],
                "arc_easy": [],
                "blimp_principle_A_reconstruction_filtered": [],
                "blimp_causative_filtered": [],
                "blimp_wh_island_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
                "blimp_intransitive_filtered": [],
                "blimp_superlative_quantifiers_2_filtered": [],
                "blimp_wh_vs_that_no_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
                "blimp_wh_vs_that_with_gap_filtered": [],
                "blimp_principle_A_case_1_filtered": [],
                "blimp_tough_vs_raising_1_filtered": [],
                "blimp_matrix_question_npi_licensor_present_filtered": [],
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
                "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
                "blimp_principle_A_case_2_filtered": [],
                "blimp_complex_NP_island_filtered": [],
                "blimp_tough_vs_raising_2_filtered": [],
                "blimp_wh_questions_subject_gap_long_distance_filtered": [],
                "blimp_principle_A_c_command_filtered": [],
                "blimp_anaphor_gender_agreement_filtered": [],
                "blimp_determiner_noun_agreement_irregular_1_filtered": [],
                "blimp_ellipsis_n_bar_2_filtered": [],
                "blimp_sentential_negation_npi_scope_filtered": [],
                "blimp_only_npi_licensor_present_filtered": [],
                "blimp_distractor_agreement_relational_noun_filtered": [],
                "blimp_existential_there_object_raising_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_principle_A_domain_2_filtered": [],
                "blimp_passive_2_filtered": [],
                "blimp_superlative_quantifiers_1_filtered": [],
                "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_irregular_past_participle_adjectives_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_wh_questions_subject_gap_filtered": [],
                "blimp_adjunct_island_filtered": [],
                "blimp_existential_there_quantifiers_2_filtered": [],
                "blimp_determiner_noun_agreement_irregular_2_filtered": [],
                "blimp_animate_subject_trans_filtered": [],
                "blimp_anaphor_number_agreement_filtered": [],
                "blimp_sentential_negation_npi_licensor_present_filtered": [],
                "blimp_determiner_noun_agreement_2_filtered": [],
                "blimp_passive_1_filtered": [],
                "blimp_inchoative_filtered": [],
                "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
                "blimp_existential_there_subject_raising_filtered": [],
                "blimp_wh_questions_object_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_existential_there_quantifiers_1_filtered": [],
                "blimp_drop_argument_filtered": [],
                "blimp_expletive_it_object_raising_filtered": [],
                "blimp_left_branch_island_simple_question_filtered": [],
                "blimp_irregular_past_participle_verbs_filtered": [],
                "blimp_npi_present_1_filtered": [],
                "blimp_animate_subject_passive_filtered": [],
                "blimp_transitive_filtered": [],
                "blimp_principle_A_domain_3_filtered": [],
                "blimp_npi_present_2_filtered": [],
                "blimp_sentential_subject_island_filtered": [],
                "blimp_principle_A_domain_1_filtered": [],
                "blimp_only_npi_scope_filtered": [],
                "blimp_determiner_noun_agreement_1_filtered": [],
                "blimp_left_branch_island_echo_question_filtered": [],
                "blimp_ellipsis_n_bar_1_filtered": [],
                "blimp_distractor_agreement_relative_clause_filtered": [],
                "blimp_supplement_qa_congruence_tricky": [],
                "blimp_supplement_turn_taking": [],
                "blimp_supplement_hypernym": [],
                "blimp_supplement_qa_congruence_easy": [],
                "blimp_supplement_subject_aux_inversion": [],
                "cola": [],
                "sst2": [],
                "qqp": [],
                "mnli": [],
                "mnli_mismatch": [],
                "wnli": [],
                "rte": [],
                "qnli": [],
                "mrpc": [],
                "hellaswag": [],
                "inverse_scaling_into_the_unknown": [],
                "inverse_scaling_redefine_math": [],
                "inverse_scaling_modus_tollens": [],
                "inverse_scaling_pattern_matching_suppression": [],
                "inverse_scaling_sig_figs": [],
                "inverse_scaling_memo_trap": [],
                "inverse_scaling_neqa": [],
                "inverse_scaling_winobias_antistereotype": [],
                "inverse_scaling_quote_repetition": [],
                "inverse_scaling_repetitive_algebra": [],
                "inverse_scaling_hindsight_neglect_10shot": [],
                "lambada_openai": [],
                "mathqa": [],
                "openbookqa": [],
                "piqa": [],
                "qa4mre_2012": [],
                "qa4mre_2013": [],
                "qa4mre_2011": [],
                "sciq": [],
                "squad_completion": [],
                "swag": [],
                "tinyGSM8k": [],
                "tinyMMLU": [],
                "tinyTruthfulQA": [],
                "triviaqa": [],
                "winogrande": [],
                "wsc273": []
            },
            "configs": {
                "arc_challenge": {
                    "task": "arc_challenge",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Challenge",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "arc_easy": {
                    "task": "arc_easy",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Easy",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_adjunct_island_filtered": {
                    "task": "blimp_adjunct_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "task": "blimp_anaphor_gender_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "task": "blimp_anaphor_number_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_passive_filtered": {
                    "task": "blimp_animate_subject_passive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_trans_filtered": {
                    "task": "blimp_animate_subject_trans_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_causative_filtered": {
                    "task": "blimp_causative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_complex_NP_island_filtered": {
                    "task": "blimp_complex_NP_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "task": "blimp_distractor_agreement_relational_noun_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "task": "blimp_distractor_agreement_relative_clause_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_drop_argument_filtered": {
                    "task": "blimp_drop_argument_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "task": "blimp_ellipsis_n_bar_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "task": "blimp_ellipsis_n_bar_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_object_raising_filtered": {
                    "task": "blimp_existential_there_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "task": "blimp_existential_there_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "task": "blimp_existential_there_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "task": "blimp_existential_there_subject_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "task": "blimp_expletive_it_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_inchoative_filtered": {
                    "task": "blimp_inchoative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_intransitive_filtered": {
                    "task": "blimp_intransitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "task": "blimp_irregular_past_participle_adjectives_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "task": "blimp_irregular_past_participle_verbs_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "task": "blimp_left_branch_island_echo_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "task": "blimp_left_branch_island_simple_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "task": "blimp_matrix_question_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_1_filtered": {
                    "task": "blimp_npi_present_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_2_filtered": {
                    "task": "blimp_npi_present_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "task": "blimp_only_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_scope_filtered": {
                    "task": "blimp_only_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_1_filtered": {
                    "task": "blimp_passive_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_2_filtered": {
                    "task": "blimp_passive_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_c_command_filtered": {
                    "task": "blimp_principle_A_c_command_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_1_filtered": {
                    "task": "blimp_principle_A_case_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_2_filtered": {
                    "task": "blimp_principle_A_case_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_1_filtered": {
                    "task": "blimp_principle_A_domain_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_2_filtered": {
                    "task": "blimp_principle_A_domain_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_3_filtered": {
                    "task": "blimp_principle_A_domain_3_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "task": "blimp_principle_A_reconstruction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "task": "blimp_sentential_negation_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_subject_island_filtered": {
                    "task": "blimp_sentential_subject_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "task": "blimp_superlative_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "task": "blimp_superlative_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_hypernym": {
                    "task": "blimp_supplement_hypernym",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_easy": {
                    "task": "blimp_supplement_qa_congruence_easy",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "task": "blimp_supplement_qa_congruence_tricky",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_subject_aux_inversion": {
                    "task": "blimp_supplement_subject_aux_inversion",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_turn_taking": {
                    "task": "blimp_supplement_turn_taking",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "task": "blimp_tough_vs_raising_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "task": "blimp_tough_vs_raising_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_transitive_filtered": {
                    "task": "blimp_transitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_island_filtered": {
                    "task": "blimp_wh_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "task": "blimp_wh_questions_object_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "task": "blimp_wh_questions_subject_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "cola": {
                    "task": "cola",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "cola",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "mcc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "hellaswag": {
                    "task": "hellaswag",
                    "tag": [
                        "multiple_choice"
                    ],
                    "dataset_path": "hellaswag",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                    "doc_to_text": "{{query}}",
                    "doc_to_target": "{{label}}",
                    "doc_to_choice": "choices",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "task": "inverse_scaling_hindsight_neglect_10shot",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_into_the_unknown": {
                    "task": "inverse_scaling_into_the_unknown",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/into-the-unknown",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_memo_trap": {
                    "task": "inverse_scaling_memo_trap",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/memo-trap",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_modus_tollens": {
                    "task": "inverse_scaling_modus_tollens",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/modus-tollens",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_neqa": {
                    "task": "inverse_scaling_neqa",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/NeQA",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "task": "inverse_scaling_pattern_matching_suppression",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/pattern-matching-suppression",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_quote_repetition": {
                    "task": "inverse_scaling_quote_repetition",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/quote-repetition",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_redefine_math": {
                    "task": "inverse_scaling_redefine_math",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/redefine-math",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_repetitive_algebra": {
                    "task": "inverse_scaling_repetitive_algebra",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/repetitive-algebra",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_sig_figs": {
                    "task": "inverse_scaling_sig_figs",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/sig-figs",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_winobias_antistereotype": {
                    "task": "inverse_scaling_winobias_antistereotype",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "group": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "text",
                    "doc_to_target": "target",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "lambada_openai": {
                    "task": "lambada_openai",
                    "tag": [
                        "lambada"
                    ],
                    "dataset_path": "EleutherAI/lambada_openai",
                    "dataset_name": "default",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                    "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "perplexity",
                            "aggregation": "perplexity",
                            "higher_is_better": false
                        },
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "loglikelihood",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{text}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mathqa": {
                    "task": "mathqa",
                    "tag": [
                        "math_word_problems"
                    ],
                    "dataset_path": "math_qa",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{Problem}}\nAnswer:",
                    "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                    "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli": {
                    "task": "mnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_matched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli_mismatch": {
                    "task": "mnli_mismatch",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_mismatched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mrpc": {
                    "task": "mrpc",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mrpc",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "openbookqa": {
                    "task": "openbookqa",
                    "dataset_path": "openbookqa",
                    "dataset_name": "main",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "question_stem",
                    "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question_stem",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "piqa": {
                    "task": "piqa",
                    "dataset_path": "piqa",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{goal}}\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[sol1, sol2]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "goal",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2011": {
                    "task": "qa4mre_2011",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2011.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2012": {
                    "task": "qa4mre_2012",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2012.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2013": {
                    "task": "qa4mre_2013",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2013.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qnli": {
                    "task": "qnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qqp": {
                    "task": "qqp",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qqp",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "rte": {
                    "task": "rte",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "rte",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "sciq": {
                    "task": "sciq",
                    "dataset_path": "sciq",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                    "doc_to_target": 3,
                    "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{support}} {{question}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "squad_completion": {
                    "task": "squad_completion",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n\n"
                        ],
                        "do_sample": false
                    },
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "sst2": {
                    "task": "sst2",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "sst2",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "negative",
                        "positive"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "swag": {
                    "task": "swag",
                    "dataset_path": "swag",
                    "dataset_name": "regular",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "startphrase",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "tinyGSM8k": {
                    "task": "tinyGSM8k",
                    "dataset_path": "tinyBenchmarks/tinyGSM8k",
                    "dataset_name": "main",
                    "training_split": "train",
                    "test_split": "test",
                    "fewshot_split": "train",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{answer}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 5,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": false,
                            "regexes_to_ignore": [
                                ",",
                                "\\$",
                                "(?s).*#### ",
                                "\\.$"
                            ]
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "Question:",
                            "</s>",
                            "<|im_end|>"
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "strict-match",
                            "filter": [
                                {
                                    "function": "regex",
                                    "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        },
                        {
                            "name": "flexible-extract",
                            "filter": [
                                {
                                    "function": "regex",
                                    "group_select": -1,
                                    "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyMMLU": {
                    "task": "tinyMMLU",
                    "dataset_path": "tinyBenchmarks/tinyMMLU",
                    "dataset_name": "all",
                    "test_split": "test",
                    "fewshot_split": "dev",
                    "doc_to_text": "{{input_formatted}}",
                    "doc_to_target": "answer",
                    "doc_to_choice": [
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "fewshot_config": {
                        "sampler": "first_n"
                    },
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc_norm",
                            "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyTruthfulQA": {
                    "task": "tinyTruthfulQA",
                    "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                    "dataset_name": "multiple_choice",
                    "validation_split": "validation",
                    "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{mc2_targets.choices}}",
                    "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 0.0
                    }
                },
                "triviaqa": {
                    "task": "triviaqa",
                    "dataset_path": "trivia_qa",
                    "dataset_name": "rc.nocontext",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{question}}?\nAnswer:",
                    "doc_to_target": "{{answer.aliases}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "mean",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": true
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n",
                            ".",
                            ","
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "remove_whitespace",
                            "filter": [
                                {
                                    "function": "remove_whitespace"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 3.0
                    }
                },
                "winogrande": {
                    "task": "winogrande",
                    "dataset_path": "winogrande",
                    "dataset_name": "winogrande_xl",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                    "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                    "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "wnli": {
                    "task": "wnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "wnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "False",
                        "True"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "wsc273": {
                    "task": "wsc273",
                    "dataset_path": "winograd_wsc",
                    "dataset_name": "wsc273",
                    "test_split": "test",
                    "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                    "doc_to_text": "label",
                    "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                    "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "text",
                    "metadata": {
                        "version": 1.0
                    }
                }
            },
            "versions": {
                "arc_challenge": 1.0,
                "arc_easy": 1.0,
                "blimp_adjunct_island_filtered": 1.0,
                "blimp_anaphor_gender_agreement_filtered": 1.0,
                "blimp_anaphor_number_agreement_filtered": 1.0,
                "blimp_animate_subject_passive_filtered": 1.0,
                "blimp_animate_subject_trans_filtered": 1.0,
                "blimp_causative_filtered": 1.0,
                "blimp_complex_NP_island_filtered": 1.0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
                "blimp_determiner_noun_agreement_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
                "blimp_distractor_agreement_relational_noun_filtered": 1.0,
                "blimp_distractor_agreement_relative_clause_filtered": 1.0,
                "blimp_drop_argument_filtered": 1.0,
                "blimp_ellipsis_n_bar_1_filtered": 1.0,
                "blimp_ellipsis_n_bar_2_filtered": 1.0,
                "blimp_existential_there_object_raising_filtered": 1.0,
                "blimp_existential_there_quantifiers_1_filtered": 1.0,
                "blimp_existential_there_quantifiers_2_filtered": 1.0,
                "blimp_existential_there_subject_raising_filtered": 1.0,
                "blimp_expletive_it_object_raising_filtered": 1.0,
                "blimp_inchoative_filtered": 1.0,
                "blimp_intransitive_filtered": 1.0,
                "blimp_irregular_past_participle_adjectives_filtered": 1.0,
                "blimp_irregular_past_participle_verbs_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_left_branch_island_echo_question_filtered": 1.0,
                "blimp_left_branch_island_simple_question_filtered": 1.0,
                "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
                "blimp_npi_present_1_filtered": 1.0,
                "blimp_npi_present_2_filtered": 1.0,
                "blimp_only_npi_licensor_present_filtered": 1.0,
                "blimp_only_npi_scope_filtered": 1.0,
                "blimp_passive_1_filtered": 1.0,
                "blimp_passive_2_filtered": 1.0,
                "blimp_principle_A_c_command_filtered": 1.0,
                "blimp_principle_A_case_1_filtered": 1.0,
                "blimp_principle_A_case_2_filtered": 1.0,
                "blimp_principle_A_domain_1_filtered": 1.0,
                "blimp_principle_A_domain_2_filtered": 1.0,
                "blimp_principle_A_domain_3_filtered": 1.0,
                "blimp_principle_A_reconstruction_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
                "blimp_sentential_negation_npi_scope_filtered": 1.0,
                "blimp_sentential_subject_island_filtered": 1.0,
                "blimp_superlative_quantifiers_1_filtered": 1.0,
                "blimp_superlative_quantifiers_2_filtered": 1.0,
                "blimp_supplement_hypernym": 1.0,
                "blimp_supplement_qa_congruence_easy": 1.0,
                "blimp_supplement_qa_congruence_tricky": 1.0,
                "blimp_supplement_subject_aux_inversion": 1.0,
                "blimp_supplement_turn_taking": 1.0,
                "blimp_tough_vs_raising_1_filtered": 1.0,
                "blimp_tough_vs_raising_2_filtered": 1.0,
                "blimp_transitive_filtered": 1.0,
                "blimp_wh_island_filtered": 1.0,
                "blimp_wh_questions_object_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
                "cola": 1.0,
                "hellaswag": 1.0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 1.0,
                "mathqa": 1.0,
                "mnli": 1.0,
                "mnli_mismatch": 1.0,
                "mrpc": 1.0,
                "openbookqa": 1.0,
                "piqa": 1.0,
                "qa4mre_2011": 1.0,
                "qa4mre_2012": 1.0,
                "qa4mre_2013": 1.0,
                "qnli": 1.0,
                "qqp": 2.0,
                "rte": 1.0,
                "sciq": 1.0,
                "squad_completion": 0,
                "sst2": 1.0,
                "swag": 1.0,
                "tinyGSM8k": 0.0,
                "tinyMMLU": 0.0,
                "tinyTruthfulQA": 0.0,
                "triviaqa": 3.0,
                "winogrande": 1.0,
                "wnli": 2.0,
                "wsc273": 1.0
            },
            "n-shot": {
                "arc_challenge": 0,
                "arc_easy": 0,
                "blimp_adjunct_island_filtered": 0,
                "blimp_anaphor_gender_agreement_filtered": 0,
                "blimp_anaphor_number_agreement_filtered": 0,
                "blimp_animate_subject_passive_filtered": 0,
                "blimp_animate_subject_trans_filtered": 0,
                "blimp_causative_filtered": 0,
                "blimp_complex_NP_island_filtered": 0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
                "blimp_determiner_noun_agreement_1_filtered": 0,
                "blimp_determiner_noun_agreement_2_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
                "blimp_distractor_agreement_relational_noun_filtered": 0,
                "blimp_distractor_agreement_relative_clause_filtered": 0,
                "blimp_drop_argument_filtered": 0,
                "blimp_ellipsis_n_bar_1_filtered": 0,
                "blimp_ellipsis_n_bar_2_filtered": 0,
                "blimp_existential_there_object_raising_filtered": 0,
                "blimp_existential_there_quantifiers_1_filtered": 0,
                "blimp_existential_there_quantifiers_2_filtered": 0,
                "blimp_existential_there_subject_raising_filtered": 0,
                "blimp_expletive_it_object_raising_filtered": 0,
                "blimp_inchoative_filtered": 0,
                "blimp_intransitive_filtered": 0,
                "blimp_irregular_past_participle_adjectives_filtered": 0,
                "blimp_irregular_past_participle_verbs_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_left_branch_island_echo_question_filtered": 0,
                "blimp_left_branch_island_simple_question_filtered": 0,
                "blimp_matrix_question_npi_licensor_present_filtered": 0,
                "blimp_npi_present_1_filtered": 0,
                "blimp_npi_present_2_filtered": 0,
                "blimp_only_npi_licensor_present_filtered": 0,
                "blimp_only_npi_scope_filtered": 0,
                "blimp_passive_1_filtered": 0,
                "blimp_passive_2_filtered": 0,
                "blimp_principle_A_c_command_filtered": 0,
                "blimp_principle_A_case_1_filtered": 0,
                "blimp_principle_A_case_2_filtered": 0,
                "blimp_principle_A_domain_1_filtered": 0,
                "blimp_principle_A_domain_2_filtered": 0,
                "blimp_principle_A_domain_3_filtered": 0,
                "blimp_principle_A_reconstruction_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 0,
                "blimp_sentential_negation_npi_scope_filtered": 0,
                "blimp_sentential_subject_island_filtered": 0,
                "blimp_superlative_quantifiers_1_filtered": 0,
                "blimp_superlative_quantifiers_2_filtered": 0,
                "blimp_supplement_hypernym": 0,
                "blimp_supplement_qa_congruence_easy": 0,
                "blimp_supplement_qa_congruence_tricky": 0,
                "blimp_supplement_subject_aux_inversion": 0,
                "blimp_supplement_turn_taking": 0,
                "blimp_tough_vs_raising_1_filtered": 0,
                "blimp_tough_vs_raising_2_filtered": 0,
                "blimp_transitive_filtered": 0,
                "blimp_wh_island_filtered": 0,
                "blimp_wh_questions_object_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_no_gap_filtered": 0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_with_gap_filtered": 0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
                "cola": 0,
                "hellaswag": 0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 0,
                "mathqa": 0,
                "mnli": 0,
                "mnli_mismatch": 0,
                "mrpc": 0,
                "openbookqa": 0,
                "piqa": 0,
                "qa4mre_2011": 0,
                "qa4mre_2012": 0,
                "qa4mre_2013": 0,
                "qnli": 0,
                "qqp": 0,
                "rte": 0,
                "sciq": 0,
                "squad_completion": 0,
                "sst2": 0,
                "swag": 0,
                "tinyGSM8k": 5,
                "tinyMMLU": 0,
                "tinyTruthfulQA": 0,
                "triviaqa": 0,
                "winogrande": 0,
                "wnli": 0,
                "wsc273": 0
            },
            "higher_is_better": {
                "arc_challenge": {
                    "acc": true,
                    "acc_norm": true
                },
                "arc_easy": {
                    "acc": true,
                    "acc_norm": true
                },
                "blimp_adjunct_island_filtered": {
                    "acc": true
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "acc": true
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_passive_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_trans_filtered": {
                    "acc": true
                },
                "blimp_causative_filtered": {
                    "acc": true
                },
                "blimp_complex_NP_island_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "acc": true
                },
                "blimp_drop_argument_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_object_raising_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "acc": true
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "acc": true
                },
                "blimp_inchoative_filtered": {
                    "acc": true
                },
                "blimp_intransitive_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "acc": true
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_npi_present_1_filtered": {
                    "acc": true
                },
                "blimp_npi_present_2_filtered": {
                    "acc": true
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_only_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_passive_1_filtered": {
                    "acc": true
                },
                "blimp_passive_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_c_command_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_3_filtered": {
                    "acc": true
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_sentential_subject_island_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_supplement_hypernym": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_easy": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "acc": true
                },
                "blimp_supplement_subject_aux_inversion": {
                    "acc": true
                },
                "blimp_supplement_turn_taking": {
                    "acc": true
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "acc": true
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "acc": true
                },
                "blimp_transitive_filtered": {
                    "acc": true
                },
                "blimp_wh_island_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "acc": true
                },
                "cola": {
                    "mcc": true
                },
                "hellaswag": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_into_the_unknown": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_memo_trap": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_modus_tollens": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_neqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_quote_repetition": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_redefine_math": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_repetitive_algebra": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_sig_figs": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_winobias_antistereotype": {
                    "acc": true,
                    "acc_norm": true
                },
                "lambada_openai": {
                    "perplexity": false,
                    "acc": true
                },
                "mathqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "mnli": {
                    "acc": true
                },
                "mnli_mismatch": {
                    "acc": true
                },
                "mrpc": {
                    "acc": true
                },
                "openbookqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "piqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2011": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2012": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2013": {
                    "acc": true,
                    "acc_norm": true
                },
                "qnli": {
                    "acc": true
                },
                "qqp": {
                    "acc": true
                },
                "rte": {
                    "acc": true
                },
                "sciq": {
                    "acc": true,
                    "acc_norm": true
                },
                "squad_completion": {
                    "contains": true
                },
                "sst2": {
                    "acc": true
                },
                "swag": {
                    "acc": true,
                    "acc_norm": true
                },
                "tinyGSM8k": {
                    "exact_match": true
                },
                "tinyMMLU": {
                    "acc_norm": true
                },
                "tinyTruthfulQA": {
                    "acc": true
                },
                "triviaqa": {
                    "exact_match": true
                },
                "winogrande": {
                    "acc": true
                },
                "wnli": {
                    "acc": true
                },
                "wsc273": {
                    "acc": true
                }
            },
            "n-samples": {
                "wsc273": {
                    "original": 273,
                    "effective": 273
                },
                "winogrande": {
                    "original": 1267,
                    "effective": 1267
                },
                "triviaqa": {
                    "original": 17944,
                    "effective": 17944
                },
                "tinyTruthfulQA": {
                    "original": 100,
                    "effective": 100
                },
                "tinyMMLU": {
                    "original": 100,
                    "effective": 100
                },
                "tinyGSM8k": {
                    "original": 100,
                    "effective": 100
                },
                "swag": {
                    "original": 20006,
                    "effective": 20006
                },
                "squad_completion": {
                    "original": 2984,
                    "effective": 2984
                },
                "sciq": {
                    "original": 1000,
                    "effective": 1000
                },
                "qa4mre_2011": {
                    "original": 120,
                    "effective": 120
                },
                "qa4mre_2013": {
                    "original": 284,
                    "effective": 284
                },
                "qa4mre_2012": {
                    "original": 160,
                    "effective": 160
                },
                "piqa": {
                    "original": 1838,
                    "effective": 1838
                },
                "openbookqa": {
                    "original": 500,
                    "effective": 500
                },
                "mathqa": {
                    "original": 2985,
                    "effective": 2985
                },
                "lambada_openai": {
                    "original": 5153,
                    "effective": 5153
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "original": 315,
                    "effective": 315
                },
                "inverse_scaling_repetitive_algebra": {
                    "original": 1000,
                    "effective": 1000
                },
                "inverse_scaling_quote_repetition": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_winobias_antistereotype": {
                    "original": 412,
                    "effective": 412
                },
                "inverse_scaling_neqa": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_memo_trap": {
                    "original": 936,
                    "effective": 936
                },
                "inverse_scaling_sig_figs": {
                    "original": 20897,
                    "effective": 20897
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "original": 1428,
                    "effective": 1428
                },
                "inverse_scaling_modus_tollens": {
                    "original": 1236,
                    "effective": 1236
                },
                "inverse_scaling_redefine_math": {
                    "original": 900,
                    "effective": 900
                },
                "inverse_scaling_into_the_unknown": {
                    "original": 1824,
                    "effective": 1824
                },
                "hellaswag": {
                    "original": 10042,
                    "effective": 10042
                },
                "mrpc": {
                    "original": 408,
                    "effective": 408
                },
                "qnli": {
                    "original": 5463,
                    "effective": 5463
                },
                "rte": {
                    "original": 277,
                    "effective": 277
                },
                "wnli": {
                    "original": 71,
                    "effective": 71
                },
                "mnli_mismatch": {
                    "original": 9832,
                    "effective": 9832
                },
                "mnli": {
                    "original": 9815,
                    "effective": 9815
                },
                "qqp": {
                    "original": 40430,
                    "effective": 40430
                },
                "sst2": {
                    "original": 872,
                    "effective": 872
                },
                "cola": {
                    "original": 1043,
                    "effective": 1043
                },
                "blimp_supplement_subject_aux_inversion": {
                    "original": 3867,
                    "effective": 3867
                },
                "blimp_supplement_qa_congruence_easy": {
                    "original": 64,
                    "effective": 64
                },
                "blimp_supplement_hypernym": {
                    "original": 842,
                    "effective": 842
                },
                "blimp_supplement_turn_taking": {
                    "original": 280,
                    "effective": 280
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "original": 165,
                    "effective": 165
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "original": 802,
                    "effective": 802
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "original": 947,
                    "effective": 947
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_only_npi_scope_filtered": {
                    "original": 837,
                    "effective": 837
                },
                "blimp_principle_A_domain_1_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_sentential_subject_island_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_npi_present_2_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_principle_A_domain_3_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_transitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_animate_subject_passive_filtered": {
                    "original": 895,
                    "effective": 895
                },
                "blimp_npi_present_1_filtered": {
                    "original": 909,
                    "effective": 909
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "original": 942,
                    "effective": 942
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "original": 951,
                    "effective": 951
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "original": 759,
                    "effective": 759
                },
                "blimp_drop_argument_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "original": 930,
                    "effective": 930
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "original": 890,
                    "effective": 890
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "original": 933,
                    "effective": 933
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "original": 859,
                    "effective": 859
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "original": 924,
                    "effective": 924
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "original": 910,
                    "effective": 910
                },
                "blimp_inchoative_filtered": {
                    "original": 855,
                    "effective": 855
                },
                "blimp_passive_1_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_animate_subject_trans_filtered": {
                    "original": 923,
                    "effective": 923
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "original": 820,
                    "effective": 820
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "original": 911,
                    "effective": 911
                },
                "blimp_adjunct_island_filtered": {
                    "original": 928,
                    "effective": 928
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "original": 898,
                    "effective": 898
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "original": 804,
                    "effective": 804
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "original": 945,
                    "effective": 945
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "original": 949,
                    "effective": 949
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "original": 979,
                    "effective": 979
                },
                "blimp_passive_2_filtered": {
                    "original": 903,
                    "effective": 903
                },
                "blimp_principle_A_domain_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "original": 892,
                    "effective": 892
                },
                "blimp_existential_there_object_raising_filtered": {
                    "original": 812,
                    "effective": 812
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "original": 788,
                    "effective": 788
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "original": 882,
                    "effective": 882
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "original": 828,
                    "effective": 828
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "original": 681,
                    "effective": 681
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "original": 971,
                    "effective": 971
                },
                "blimp_principle_A_c_command_filtered": {
                    "original": 946,
                    "effective": 946
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "original": 857,
                    "effective": 857
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_complex_NP_island_filtered": {
                    "original": 846,
                    "effective": 846
                },
                "blimp_principle_A_case_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "original": 875,
                    "effective": 875
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "original": 906,
                    "effective": 906
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "original": 948,
                    "effective": 948
                },
                "blimp_principle_A_case_1_filtered": {
                    "original": 912,
                    "effective": 912
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "original": 718,
                    "effective": 718
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "original": 861,
                    "effective": 861
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "original": 986,
                    "effective": 986
                },
                "blimp_intransitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_wh_island_filtered": {
                    "original": 960,
                    "effective": 960
                },
                "blimp_causative_filtered": {
                    "original": 818,
                    "effective": 818
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "original": 967,
                    "effective": 967
                },
                "arc_easy": {
                    "original": 2376,
                    "effective": 2376
                },
                "arc_challenge": {
                    "original": 1172,
                    "effective": 1172
                }
            },
            "config": {
                "model": "modis",
                "model_args": "pretrained=evo_exp_full_a/14M/spectralhmamba_14M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
                "model_num_parameters": 6141836,
                "model_dtype": "torch.bfloat16",
                "model_revision": "main",
                "batch_size": "auto",
                "batch_sizes": [
                    64
                ],
                "device": null,
                "use_cache": null,
                "limit": null,
                "bootstrap_iters": 100000,
                "gen_kwargs": null,
                "random_seed": 0,
                "numpy_seed": 1234,
                "torch_seed": 1234,
                "fewshot_seed": 1234
            },
            "date": 1730318595.0213463,
            "tokenizer_pad_token": [
                "</s>",
                "2"
            ],
            "tokenizer_eos_token": [
                "</s>",
                "2"
            ],
            "tokenizer_bos_token": [
                "<s>",
                "1"
            ],
            "eot_token_id": 2,
            "max_length": 2048,
            "task_hashes": {},
            "model_source": "modis",
            "model_name": "evo_exp_full_a/14M/spectralhmamba_14M",
            "model_name_sanitized": "evo_exp_full_a__14M__spectralhmamba_14M",
            "system_instruction": null,
            "system_instruction_sha": null,
            "fewshot_as_multiturn": false,
            "chat_template": null,
            "chat_template_sha": null,
            "start_time": 2945768.25579973,
            "end_time": 2946213.965574917,
            "total_evaluation_time_seconds": "445.70977518707514"
        }
    }
}