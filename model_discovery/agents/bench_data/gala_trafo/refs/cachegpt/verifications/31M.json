{
    "scale": "31M",
    "verification_report": {
        "wandb_ids.json": {
            "pretrain": {
                "id": "w2qk380i",
                "name": "evo_exp_full_a_cachegpt_31M_20241106140934"
            },
            "project": "model_discovery",
            "entity": "aristo",
            "evaluate": {
                "name": "evo_exp_full_a_cachegpt_31M_eval_20241106141705"
            }
        },
        "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,48.576607847,6.0133,8.75,0.0007142857142857143,9.675546668386763e-05,1730931023.5363846,15\n1,50.015308291,5.0922,7.59375,0.0009523809523809524,0.00012900728891182352,1730931024.9751992,20\n2,51.460995558,3.8078,4.3125,0.000999964111912758,0.0001612591111397794,1730931026.420861,25\n3,52.903626085,3.0432,1.28125,0.0009998183263688746,0.00019351093336773527,1730931027.863508,30\n4,54.345231685,2.851,0.380859375,0.0009995604366677606,0.00022576275559569117,1730931029.3051088,35\n5,55.803667274,2.7227,0.275390625,0.000999190507080936,0.00025801457782364704,1730931030.763512,40\n6,57.251975927,2.6838,0.1748046875,0.000998708629802609,0.0002902664000516029,1730931032.2118433,45\n7,58.712377202,2.5914,0.1826171875,0.0009981149249267,0.0003225182222795588,1730931033.672244,50\n8,60.317879379,2.4541,0.1318359375,0.0009974095404169105,0.00035477004450751466,1730931035.277771,55\n9,61.798536549,2.4029,0.11572265625,0.0009965926520698492,0.00038702186673547054,1730931036.7584476,60\n10,63.276949363,2.5043,0.10986328125,0.0009956644634712174,0.0004192736889634264,1730931038.2368612,65\n11,64.744117702,2.4145,0.119140625,0.0009946252059450733,0.00045152551119138234,1730931039.704004,70\n12,66.223953431,2.4695,0.1142578125,0.0009934751384961804,0.0004837773334193382,1730931041.1838367,75\n13,67.707582211,2.4768,0.134765625,0.0009922145477454572,0.0005160291556472941,1730931042.6675143,80\n14,69.198033115,2.3559,0.1279296875,0.000990843747858547,0.0005482809778752499,1730931044.1578739,85\n15,70.693394798,2.3863,0.10400390625,0.00098936308046752,0.0005805328001032058,1730931045.6532893,90\n16,72.19027553,2.3969,0.119140625,0.0009877729145857316,0.0006127846223311618,1730931047.1501777,95\n17,73.706575444,2.2504,0.1123046875,0.0009860736465158572,0.0006450364445591176,1730931048.6664274,100\n18,75.398975039,2.301,0.1103515625,0.000984265699751124,0.0006772882667870735,1730931050.3588574,105\n19,76.896574793,2.3828,0.11669921875,0.0009823495248697694,0.0007095400890150293,1730931051.856441,110\n20,78.412611947,2.2313,0.1162109375,0.000980325599422745,0.0007417919112429853,1730931053.372474,115\n21,79.946296406,2.2969,0.1015625,0.000978194427814704,0.0007740437334709411,1730931054.9062045,120\n22,81.473975465,2.2691,0.11474609375,0.0009759565411782899,0.000806295555698897,1730931056.433887,125\n23,83.012558818,2.2264,0.10107421875,0.0009736124972417694,0.0008385473779268528,1730931057.9723966,130\n24,84.546514188,2.2281,0.1025390625,0.0009711628801900334,0.0008707992001548088,1730931059.5063782,135\n25,86.086752062,2.1148,0.107421875,0.0009686083005190067,0.0009030510223827647,1730931061.0466511,140\n26,87.609409941,2.2025,0.10791015625,0.0009659493948834994,0.0009353028446107205,1730931062.5692675,145\n27,89.143487305,2.1955,0.1005859375,0.000963186825938539,0.0009675546668386764,1730931064.103384,150\n28,90.845624934,2.165,0.09326171875,0.0009603212821742229,0.0009998064890666322,1730931065.805496,155\n29,92.41067788,2.275,0.0888671875,0.0009573534777441323,0.0010320583112945882,1730931067.370577,160\n30,93.987750459,2.2219,0.0966796875,0.0009542841522873502,0.001064310133522544,1730931068.9476109,165\n31,95.539288454,2.1865,0.1025390625,0.0009511140707441283,0.0010965619557504998,1730931070.4991984,170\n32,97.123088875,2.1918,0.099609375,0.0009478440231652464,0.0011288137779784557,1730931072.082988,175\n33,98.691295675,2.1334,0.09912109375,0.000944474824515117,0.0011610656002064117,1730931073.6511774,180\n34,100.253994179,2.1477,0.09765625,0.000941007314468678,0.0011933174224343676,1730931075.2138934,185\n35,101.854558928,2.1609,0.10302734375,0.0009374423572021278,0.0012255692446623235,1730931076.814459,190\n36,103.440382482,2.1939,0.09130859375,0.0009337808411775559,0.0012578210668902792,1730931078.400264,195\n37,105.055473455,2.1586,0.0927734375,0.0009300236789215177,0.0012900728891182352,1730931080.0153692,200\n38,106.774286967,2.1844,0.0986328125,0.0009261718067976156,0.001322324711346191,1730931081.7341464,205\n39,108.375077971,2.1871,0.0966796875,0.0009222261847731359,0.001354576533574147,1730931083.3349695,210\n40,110.026525255,2.1469,0.09521484375,0.0009181877961798058,0.0013868283558021027,1730931084.986425,215\n41,111.650164034,2.1441,0.08984375,0.0009140576474687263,0.0014190801780300587,1730931086.6100605,220\n42,113.257514279,2.2484,0.103515625,0.0009098367679595436,0.0014513320002580146,1730931088.2173483,225\n43,114.880202406,2.1982,0.09375,0.0009055262095839209,0.0014835838224859705,1730931089.8400965,230\n44,116.489347368,2.124,0.0810546875,0.0009011270466233745,0.0015158356447139264,1730931091.4492428,235\n45,118.121274132,2.1742,0.09912109375,0.0008966403754415417,0.0015480874669418822,1730931093.0811703,240\n46,119.737291993,2.1969,0.083984375,0.0008920673142109422,0.001580339289169838,1730931094.6971898,245\n47,121.375418196,2.1721,0.091796875,0.0008874090026343081,0.001612591111397794,1730931096.3353162,250\n48,123.170540882,2.2512,0.0966796875,0.0008826666016605435,0.00164484293362575,1730931098.1304386,255\n49,124.836143127,2.1914,0.0966796875,0.0008778412931953945,0.0016770947558537056,1730931099.7960315,260\n50,126.482926002,2.1676,0.08203125,0.0008729342798068918,0.0017093465780816616,1730931101.4428236,265\n51,128.197078187,2.1295,0.08935546875,0.0008679467844256455,0.0017415984003096175,1730931103.1569748,270\n52,129.885340066,2.1758,0.08642578125,0.0008628800500400661,0.0017738502225375734,1730931104.845239,275\n53,131.533805805,2.2439,0.0869140625,0.0008577353393865849,0.0018061020447655294,1730931106.4937224,280\n54,133.178362589,2.2309,0.09912109375,0.0008525139346349539,0.001838353866993485,1730931108.1382685,285\n55,134.868053027,2.1336,0.083984375,0.0008472171370687024,0.001870605689221441,1730931109.827893,290\n56,136.51713916,2.1842,0.08740234375,0.0008418462667608296,0.001902857511449397,1730931111.477038,295\n57,138.213725726,2.1475,0.0859375,0.0008364026622448147,0.0019351093336773529,1730931113.1735997,300\n58,140.437908285,2.1324,0.0888671875,0.0008308876801810269,0.0019673611559053086,1730931115.3977678,305\n59,143.184600522,2.1066,0.08544921875,0.0008253026950186161,0.0019996129781332645,1730931118.144452,310\n60,144.886723018,2.1178,0.07861328125,0.0008196490986529722,0.0020318648003612204,1730931119.8466146,315\n61,146.578815418,2.1363,0.0810546875,0.0008139283000788356,0.0020641166225891763,1730931121.5387099,320\n62,148.298773357,2.0641,0.07958984375,0.0008081417250391453,0.0020963684448171323,1730931123.2586613,325\n63,150.04301246,2.0986,0.08349609375,0.0008022908156697152,0.002128620267045088,1730931125.0029066,330\n64,151.759614417,2.1285,0.08544921875,0.0007963770301398227,0.002160872089273044,1730931126.7194958,335\n65,153.467544204,2.0805,0.08349609375,0.0007904018422888028,0.0021931239115009996,1730931128.4274457,340\n66,155.176583457,2.2287,0.0810546875,0.0007843667412587349,0.0022253757337289556,1730931130.1364603,345\n67,156.93646445,2.1873,0.0791015625,0.0007782732311233207,0.0022576275559569115,1730931131.896333,350\n68,158.807323543,2.1195,0.08544921875,0.0007721228305130341,0.0022898793781848674,1730931133.7672248,355\n69,160.555639951,2.0193,0.07373046875,0.0007659170722366482,0.0023221312004128233,1730931135.5155408,360\n70,162.307647877,2.0891,0.07421875,0.0007596575028992275,0.0023543830226407793,1730931137.2675328,365\n71,164.052456547,2.0877,0.08544921875,0.0007533456825166806,0.002386634844868735,1730931139.0123324,370\n72,165.841164399,2.0707,0.08154296875,0.0007469831841269727,0.002418886667096691,1730931140.8010175,375\n73,167.613257632,2.075,0.0849609375,0.0007405715933980894,0.002451138489324647,1730931142.573155,380\n74,169.398472426,2.0809,0.0771484375,0.000734112508232858,0.0024833903115526025,1730931144.3583481,385\n75,171.122602473,2.0938,0.07373046875,0.0007276075383707141,0.0025156421337805585,1730931146.082472,390\n76,172.92220023,2.1027,0.087890625,0.0007210583049865222,0.0025478939560085144,1730931147.8821032,395\n77,174.763374251,2.123,0.07421875,0.0007144664402865438,0.0025801457782364703,1730931149.723288,400\n78,176.706445999,2.0541,0.08544921875,0.000707833587101659,0.0026123976004644263,1730931151.6663535,405\n79,178.582568945,2.035,0.083984375,0.0007011613984779369,0.002644649422692382,1730931153.542465,410\n80,180.386287496,2.1314,0.08203125,0.0006944515372646629,0.002676901244920338,1730931155.3461947,415\n81,182.181309347,2.1084,0.0830078125,0.0006877056756999218,0.002709153067148294,1730931157.1412203,420\n82,184.000234195,2.1348,0.083984375,0.0006809254949938397,0.00274140488937625,1730931158.9601686,425\n83,185.851477953,2.0578,0.07763671875,0.0006741126849095935,0.0027736567116042055,1730931160.8113964,430\n84,187.746480993,2.1508,0.0869140625,0.0006672689433422847,0.0028059085338321614,1730931162.7063959,435\n85,189.573262775,2.2129,0.076171875,0.000660395975895788,0.0028381603560601173,1730931164.5332,440\n86,191.394575199,2.1838,0.07861328125,0.0006534954954576815,0.0028704121782880732,1730931166.3544893,445\n87,193.273225904,2.0742,0.07958984375,0.0006465692217723562,0.002902664000516029,1730931168.2331228,450\n88,195.23106784,2.1352,0.0859375,0.0006396188810124222,0.002934915822743985,1730931170.1909707,455\n89,197.057118523,2.0965,0.0732421875,0.0006326462053485079,0.002967167644971941,1730931172.0170279,460\n90,199.001697783,2.0809,0.0751953125,0.0006256529325175693,0.002999419467199897,1730931173.9615738,465\n91,200.858309379,2.1199,0.078125,0.0006186408053898073,0.003031671289427853,1730931175.8181963,470\n92,202.779970297,2.2137,0.07763671875,0.0006116115715343092,0.0030639231116558084,1730931177.7398806,475\n93,204.637232961,2.1213,0.07275390625,0.0006045669827835177,0.0030961749338837643,1730931179.597079,480\n94,206.594489971,2.0543,0.080078125,0.0005975087947966368,0.0031284267561117202,1730931181.5543253,485\n95,208.436607194,2.1004,0.07861328125,0.0005904387666220856,0.003160678578339676,1730931183.3965049,490\n96,210.310305427,2.1648,0.080078125,0.0005833586602591064,0.003192930400567632,1730931185.2702196,495\n97,212.185711822,2.0701,0.07666015625,0.0005762702402186365,0.003225182222795588,1730931187.1455963,500\n98,214.262103119,2.1479,0.07666015625,0.000569175273083557,0.003257434045023544,1730931189.2220042,505\n99,216.18856331,2.0406,0.0712890625,0.0005620755270684213,0.0032896858672515,1730931191.1484513,510\n100,218.105458138,2.1285,0.0791015625,0.0005549727715787808,0.003321937689479456,1730931193.0653517,515\n101,220.027757003,2.1064,0.078125,0.00054786877677021,0.0033541895117074113,1730931194.9876575,520\n102,222.004070415,2.1354,0.07470703125,0.0005407653131071488,0.0033864413339353672,1730931196.9639719,525\n103,223.892635362,2.2199,0.08447265625,0.0005336641509216634,0.003418693156163323,1730931198.8525362,530\n104,225.789999837,2.0666,0.07373046875,0.0005265670599722442,0.003450944978391279,1730931200.7499032,535\n105,227.774066882,2.1061,0.07470703125,0.0005194758090027443,0.003483196800619235,1730931202.733976,540\n106,229.705344058,2.0812,0.07958984375,0.0005123921653015707,0.003515448622847191,1730931204.6652431,545\n107,231.626513079,2.0854,0.076171875,0.0005053178942612407,0.003547700445075147,1730931206.5864046,550\n108,233.704121472,2.0996,0.0732421875,0.0004982547589384071,0.003579952267303103,1730931208.6640258,555\n109,235.694092848,2.1588,0.08154296875,0.0004912045196144684,0.0036122040895310587,1730931210.6539593,560\n110,237.610331471,2.1293,0.07275390625,0.00048416893335687084,0.003644455911759014,1730931212.570202,565\n111,239.553337618,2.1545,0.07421875,0.00047714975358120813,0.00367670773398697,1730931214.5132205,570\n112,241.538451574,2.157,0.0908203125,0.0004701487296142358,0.003708959556214926,1730931216.4982772,575\n113,243.503244419,2.1244,0.08154296875,0.0004631676062579001,0.003741211378442882,1730931218.4631314,580\n114,245.527422253,2.0988,0.07666015625,0.0004562081233544989,0.003773463200670838,1730931220.4873214,585\n115,247.468410194,2.0598,0.07568359375,0.00044927201535307473,0.003805715022898794,1730931222.428303,590\n116,249.50742168,2.1752,0.08349609375,0.0004423610108771553,0.0038379668451267498,1730931224.4673243,595\n117,251.481054764,2.0902,0.072265625,0.00043547683229394266,0.0038702186673547057,1730931226.4409509,600\n118,253.624350098,2.0145,0.07666015625,0.0004286211952850647,0.0039024704895826616,1730931228.5842483,605\n119,255.618471031,2.0908,0.07275390625,0.00042179580841899026,0.003934722311810617,1730931230.5783315,610\n120,257.604395227,2.0898,0.076171875,0.000415002372725218,0.0039669741340385735,1730931232.564303,615\n121,259.625154341,2.0709,0.0859375,0.0004082425812703456,0.003999225956266529,1730931234.5850616,620\n122,261.682037842,2.1178,0.07275390625,0.00040151811873612034,0.004031477778494485,1730931236.6418922,625\n123,263.832321368,2.0775,0.0732421875,0.000394830660999582,0.004063729600722441,1730931238.7921925,630\n124,265.893219425,2.2555,0.07958984375,0.000388181874715399,0.004095981422950396,1730931240.853125,635\n125,267.925734314,2.1299,0.07080078125,0.00038157341690050285,0.004128233245178353,1730931242.8856266,640\n126,269.962926394,2.0836,0.068359375,0.00037500693452112546,0.004160485067406308,1730931244.922825,645\n127,271.960318493,2.0189,0.07275390625,0.00036848406408233994,0.0041927368896342646,1730931246.9201639,650\n128,274.240276528,2.1146,0.07373046875,0.00036200643122020993,0.00422498871186222,1730931249.2000806,655\n129,276.289249858,2.1717,0.07470703125,0.00035557565029664554,0.004257240534090176,1730931251.2491307,660\n130,278.309193334,2.0963,0.07275390625,0.0003491933239970725,0.004289492356318132,1730931253.269076,665\n131,280.443828863,2.0936,0.07470703125,0.0003428610429310082,0.004321744178546088,1730931255.4037008,670\n132,282.571179675,2.0883,0.0703125,0.00033658038523564883,0.004353996000774044,1730931257.5310404,675\n133,284.669950706,2.1357,0.07470703125,0.0003303529161825638,0.004386247823001999,1730931259.6298666,680\n134,286.714666694,2.0762,0.07666015625,0.00032418018778759784,0.004418499645229956,1730931261.674566,685\n135,288.895995708,2.0979,0.080078125,0.00031806373842407665,0.004450751467457911,1730931263.8558033,690\n136,291.01035937,2.1129,0.07080078125,0.00031200509243941085,0.0044830032896858675,1730931265.970262,695\n137,293.230567691,2.141,0.0830078125,0.0003060057597751977,0.004515255111913823,1730931268.1904643,700\n138,295.499318252,2.1152,0.08984375,0.0003000672355909111,0.004547506934141779,1730931270.4592164,705\n139,297.623519689,2.1338,0.06982421875,0.0002941909998912768,0.004579758756369735,1730931272.5834243,710\n140,299.69165472,2.1414,0.07080078125,0.0002883785171574249,0.004612010578597691,1730931274.6515605,715\n141,301.747716771,2.0955,0.07080078125,0.0002826312359819096,0.004644262400825647,1730931276.7075822,720\n142,303.874119661,2.1775,0.0732421875,0.0002769505887076894,0.004676514223053602,1730931278.834022,725\n143,306.015459006,2.0973,0.07861328125,0.00027133799107115854,0.0047087660452815585,1730931280.9753568,730\n144,308.166805834,2.102,0.0732421875,0.00026579484184931386,0.004741017867509514,1730931283.126674,735\n145,310.387530756,2.0506,0.068359375,0.0002603225225111521,0.00477326968973747,1730931285.3474014,740\n146,312.541438116,2.0932,0.07470703125,0.0002549223968733779,0.004805521511965426,1730931287.5013394,745\n147,314.650119825,2.1416,0.072265625,0.0002495958107605118,0.004837773334193382,1730931289.61003,750\n148,316.997653882,2.1141,0.07421875,0.0002443440916694837,0.004870025156421338,1730931291.9575572,755\n149,319.123633629,2.0516,0.06982421875,0.00023916854843879134,0.004902276978649294,1730931294.0835333,760\n150,321.316159548,2.1232,0.076171875,0.00023407047092231169,0.00493452880087725,1730931296.276067,765\n151,323.575404638,2.0811,0.07080078125,0.00022905112966784151,0.004966780623105205,1730931298.5352948,770\n152,325.792408164,2.0881,0.07421875,0.00022411177560045003,0.0049990324453331614,1730931300.7523098,775\n153,328.005290717,2.0018,0.0712890625,0.00021925363971072323,0.005031284267561117,1730931302.9651146,780\n154,330.237129363,2.1545,0.07177734375,0.00021447793274797372,0.005063536089789073,1730931305.1970215,785\n155,332.42976647,2.1201,0.0712890625,0.00020978584491849805,0.005095787912017029,1730931307.3896537,790\n156,334.696157259,2.0361,0.07177734375,0.00020517854558895157,0.005128039734244985,1730931309.6560526,795\n157,336.903018168,2.1459,0.0693359375,0.00020065718299491748,0.005160291556472941,1730931311.862932,800\n158,339.254880151,2.1305,0.0732421875,0.00019622288395474346,0.005192543378700897,1730931314.2147872,805\n159,341.501533198,2.023,0.07666015625,0.00019187675358871376,0.0052247952009288525,1730931316.461411,810\n160,343.811292199,2.1096,0.06982421875,0.00018761987504363093,0.005257047023156808,1730931318.771197,815\n161,346.09142276,2.116,0.072265625,0.00018345330922287274,0.005289298845384764,1730931321.051333,820\n162,348.42485428,2.1229,0.0703125,0.00017937809452199207,0.00532155066761272,1730931323.3847604,825\n163,350.60909434,2.0938,0.07861328125,0.0001753952465699283,0.005353802489840676,1730931325.568979,830\n164,352.875229464,2.024,0.068359375,0.00017150575797589003,0.005386054312068632,1730931327.8351371,835\n165,355.347194671,2.0459,0.0712890625,0.00016771059808197702,0.005418306134296588,1730931330.307098,840\n166,357.536448233,2.1475,0.07177734375,0.00016401071272159894,0.005450557956524544,1730931332.4963703,845\n167,359.81911743,2.0709,0.0703125,0.00016040702398375457,0.0054828097787525,1730931334.7790222,850\n168,362.312056378,2.0793,0.0732421875,0.00015690042998322764,0.005515061600980455,1730931337.2719653,855\n169,364.572073601,2.1037,0.07470703125,0.00015349180463675784,0.005547313423208411,1730931339.5319839,860\n170,366.949868439,2.0736,0.07080078125,0.00015018199744524217,0.005579565245436367,1730931341.909774,865\n171,369.259166829,2.0979,0.07373046875,0.00014697183328202164,0.005611817067664323,1730931344.2190595,870\n172,371.48848171,2.0154,0.07275390625,0.00014386211218730605,0.005644068889892279,1730931346.4483938,875\n173,373.794549547,2.1561,0.072265625,0.00014085360916878638,0.005676320712120235,1730931348.7544222,880\n174,376.139249257,2.0979,0.0693359375,0.0001379470740084873,0.005708572534348191,1730931351.099163,885\n175,378.426662029,2.0492,0.06884765625,0.0001351432310759053,0.0057408243565761465,1730931353.386533,890\n176,380.742366163,2.0699,0.072265625,0.00013244277914748075,0.005773076178804103,1730931355.7022715,895\n177,383.034829402,2.0904,0.06982421875,0.00012984639123244843,0.005805328001032058,1730931357.9947224,900\n178,385.403120901,2.0631,0.07080078125,0.00012735471440510922,0.005837579823260014,1730931360.3629508,905\n179,387.776991564,2.1285,0.0693359375,0.0001249683696435658,0.00586983164548797,1730931362.7368846,910\n180,390.110410732,2.0654,0.076171875,0.00012268795167496164,0.005902083467715926,1730931365.0702498,915\n181,392.478498416,2.1855,0.07470703125,0.00012051402882726269,0.005934335289943882,1730931367.4384015,920\n182,394.869744614,2.0824,0.06982421875,0.00011844714288761824,0.0059665871121718375,1730931369.8296504,925\n183,397.283872841,2.1369,0.07421875,0.00011648780896733607,0.005998838934399794,1730931372.2437954,930\n184,399.649018631,2.025,0.0732421875,0.00011463651537350614,0.006031090756627749,1730931374.6088433,935\n185,402.038662261,2.1377,0.07666015625,0.00011289372348730345,0.006063342578855706,1730931376.9984875,940\n186,404.275060002,2.1023,0.0751953125,0.00011125986764900337,0.006095594401083661,1730931379.2349575,945\n187,406.565688205,2.0801,0.068359375,0.00010973535504973395,0.006127846223311617,1730931381.5255702,950\n188,409.063084852,2.168,0.07421875,0.00010832056562999605,0.006160098045539573,1730931384.022959,955\n189,411.398594208,2.1352,0.07080078125,0.00010701585198497347,0.006192349867767529,1730931386.3584898,960\n190,413.840904782,2.0707,0.07080078125,0.00010582153927665954,0.006224601689995485,1730931388.8008037,965\n191,416.202754639,2.1113,0.0732421875,0.00010473792515281961,0.0062568535122234405,1730931391.1626406,970\n192,418.654742935,2.15,0.07275390625,0.0001037652796728109,0.006289105334451397,1730931393.6145732,975\n193,421.061378987,2.0777,0.07470703125,0.00010290384524027827,0.006321357156679352,1730931396.0212636,980\n194,423.424629601,2.0926,0.07763671875,0.00010215383654274204,0.006353608978907309,1730931398.3845115,985\n195,425.863934808,2.0756,0.0703125,0.00010151544049809325,0.006385860801135264,1730931400.8238366,990\n196,428.305592987,2.0859,0.0771484375,0.00010098881620801006,0.00641811262336322,1730931403.2654915,995\n197,430.880587648,2.125,0.0712890625,0.00010057409491830603,0.006450364445591176,1730931405.84048,1000\n198,433.613291478,2.0578,0.0703125,0.00010027137998622113,0.0064826162678191315,1730931408.573161,1005\n199,436.068378303,2.1029,0.07275390625,0.00010008074685466265,0.006514868090047088,1730931411.0282862,1010\n200,438.718099567,2.1549,0.07568359375,0.00010000224303340362,0.006547119912275043,1730931413.6780086,1015\n201,442.200925695,,,,0.006553570276720635,1730931417.1608012,1016\n",
        "system_metrics.csv": "system.memory_percent,_runtime,Process Memory In Use (non-swap) (%),system.gpu.1.correctedMemoryErrors,system.gpu.1.pcieLinkGen,system.gpu.3.correctedMemoryErrors,system.gpu.4.uncorrectedMemoryErrors,system.gpu.7.pcieLinkGen,GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),system.gpu.0.smClock,system.gpu.3.pcieLinkGen,system.gpu.7.uncorrectedMemoryErrors,system.gpu.5.smClock,system.gpu.7.correctedMemoryErrors,GPU 6 Time Spent Accessing Memory (%),GPU 7 Utilization (%),system.gpu.3.uncorrectedMemoryErrors,system.gpu.7.smClock,system.gpu.2.correctedMemoryErrors,system.gpu.7.memoryClock,GPU 2 Time Spent Accessing Memory (%),system.gpu.3.memoryClock,GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),system.gpu.4.enforcedPowerLimitWatts,system.gpu.0.correctedMemoryErrors,system.gpu.1.memoryClock,GPU 6 Memory Allocated (%),system.gpu.1.uncorrectedMemoryErrors,GPU 1 Memory Allocated (%),system.gpu.6.pcieLinkGen,system.gpu.5.enforcedPowerLimitWatts,system.gpu.3.smClock,system.gpu.1.enforcedPowerLimitWatts,system.gpu.4.correctedMemoryErrors,GPU 4 Memory Allocated (%),system.gpu.4.memoryClock,GPU 1 Utilization (%),system.gpu.7.enforcedPowerLimitWatts,system.gpu.4.smClock,system.gpu.0.pcieLinkGen,system.gpu.6.correctedMemoryErrors,GPU 4 Utilization (%),system.gpu.2.enforcedPowerLimitWatts,GPU 2 Memory Allocated (%),GPU 5 Utilization (%),system.gpu.6.smClock,system.gpu.2.smClock,system.gpu.0.uncorrectedMemoryErrors,GPU 5 Memory Allocated (%),system.gpu.2.memoryClock,system.gpu.5.uncorrectedMemoryErrors,GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),system.gpu.5.pcieLinkGen,system.gpu.4.pcieLinkGen,system.gpu.2.uncorrectedMemoryErrors,system.gpu.3.enforcedPowerLimitWatts,system.gpu.6.uncorrectedMemoryErrors,system.gpu.5.memoryClock,system.gpu.2.pcieLinkGen,GPU 0 Memory Allocated (%),system.gpu.0.memoryClock,system.gpu.0.enforcedPowerLimitWatts,system.gpu.5.correctedMemoryErrors,GPU 7 Time Spent Accessing Memory (%),GPU 6 Utilization (%),system.gpu.6.enforcedPowerLimitWatts,system.gpu.6.memoryClock,system.gpu.1.smClock,GPU 7 Memory Allocated (%),Process CPU Utilization (%),Process CPU Threads In Use\n2.608168027304962,10.275208196,0.15224277337068837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.275358564,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.2772939,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.313756052,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,1.0,16.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,9.87005622123817,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,\n,10.322293863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.4139696465607402,170.0\n,20.275929876,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.460258564716459,20.276008295,0.15224277337068837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.277250283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.298893124,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.30989731896486317,170.0\n,20.309648496,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.593855821828601,350.0,0.0,9000.0,2.593855821828601,0.0,2.593855821828601,4.0,350.0,2520.0,350.0,0.0,2.667659763827386,9000.0,0.0,350.0,2520.0,4.0,0.0,78.0,350.0,2.667659763827386,0.0,2520.0,2520.0,0.0,2.667659763827386,9000.0,0.0,0.0,9.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.282490014760787,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,2.624245680298689,,\n2.46216022803,30.275601808,0.15224958755002796,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.275967751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.277685311,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.298451987,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.25071738394765325,44.0\n,30.369883094,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,300.0,0.0,0.0,0.0,0.0,330.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,1.0309488147955197,350.0,0.0,9000.0,1.0309488147955197,0.0,1.0309488147955197,4.0,350.0,255.0,350.0,0.0,1.0309488147955197,9000.0,0.0,350.0,345.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,285.0,285.0,0.0,1.0309488147955197,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,1.0613386732656074,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,225.0,1.0309488147955197,,\n3.1658139648708685,40.275739008,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.275828737,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.277462628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.298355471,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.20894521304431546,45.0\n,40.311677507,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.658976947121646,350.0,0.0,9000.0,2.658976947121646,0.0,2.658976947121646,4.0,350.0,2520.0,350.0,0.0,2.658976947121646,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,2.658976947121646,0.0,2520.0,2520.0,0.0,2.658976947121646,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.347611140053834,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,2.6155628635929498,,\n4.808012257436651,50.275183112,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.2752938,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.277111508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.298366874,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.17905772976065815,45.0\n,50.316422436,,0.0,4.0,0.0,0.0,4.0,51.0,0.0,2445.0,4.0,0.0,2520.0,0.0,33.0,21.0,0.0,2520.0,0.0,9000.0,25.0,9000.0,45.0,3.0,8.0,7.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,3.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,44.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,51.0,28.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,36.0,350.0,9000.0,2520.0,39.569630763219585,,\n,60.275014494,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.8386416150026,60.275344628,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.276738654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.298570359,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.1566746117860289,45.0\n,60.316398065,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,39.569630763219585,,\n,70.275299468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.858063918948032,70.275357817,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.276225772,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.300469884,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.1393286921925658,45.0\n,70.31371608,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2490.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2520.0,4.0,0.0,96.0,350.0,39.61304484674829,97.0,2490.0,2520.0,0.0,39.61304484674829,9000.0,0.0,99.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n,80.276060046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.870688321871183,80.276245953,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.277559809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.298312383,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.12542423103876565,45.0\n,80.312726699,,0.0,4.0,0.0,0.0,4.0,21.0,0.0,2520.0,4.0,0.0,2520.0,0.0,2.0,47.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,11.0,14.0,15.0,14.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,38.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,14.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,19.0,4.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,6.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.870371083966373,90.275733472,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.27585053,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.277221936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.298276555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.11402129886499288,45.0\n,90.366298423,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,99.0,96.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,96.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n,100.27543193,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.760390607990874,100.27545713,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.276410863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.298151978,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.1045898847441046,45.0\n,100.32182348,,0.0,4.0,0.0,0.0,4.0,78.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,99.0,9000.0,74.0,100.0,100.0,100.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,39.61304484674829,71.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,82.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.771443585445211,110.275630804,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.27585967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.277383663,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.298308622,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0965828676546342,45.0\n,110.316285774,,0.0,4.0,0.0,0.0,4.0,30.0,0.0,2520.0,4.0,0.0,2520.0,0.0,49.0,16.0,0.0,2520.0,0.0,9000.0,41.0,9000.0,0.0,0.0,0.0,0.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,0.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,43.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,11.0,51.0,350.0,9000.0,2520.0,39.569630763219585,,\n,120.276017014,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.782319394236719,120.276750591,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.278277424,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.298412977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.08972246247154282,45.0\n,120.319362715,,0.0,4.0,0.0,0.0,4.0,100.0,21.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2505.0,0.0,9000.0,0.0,9000.0,58.0,19.0,45.0,43.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,18.0,350.0,2505.0,4.0,0.0,100.0,350.0,39.61304484674829,100.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,50.0,15.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,85.0,350.0,9000.0,2490.0,39.569630763219585,,\n,130.276008704,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.794671987117324,130.276599524,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.277809372,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.298829749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.08375303135072917,45.0\n,130.313918011,,0.0,4.0,0.0,0.0,4.0,34.0,0.0,2505.0,4.0,0.0,2520.0,0.0,0.0,68.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,48.0,49.0,46.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,64.0,350.0,2520.0,4.0,0.0,27.0,350.0,39.61304484674829,16.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.80650708093364,140.276153738,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.276189937,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.27716669,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.298477021,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07855596259801273,45.0\n,140.315802594,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,99.0,100.0,0.0,2505.0,0.0,9000.0,99.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,96.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.8168775047574615,150.276429519,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.276458339,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.278170308,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.302437317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07397148694697013,45.0\n,150.312079796,,0.0,4.0,0.0,0.0,4.0,0.0,2.0,2505.0,4.0,0.0,2520.0,0.0,67.0,30.0,0.0,2520.0,0.0,9000.0,58.0,9000.0,0.0,5.0,3.0,8.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,9.0,350.0,2505.0,4.0,0.0,7.0,350.0,39.61304484674829,0.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,58.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,28.0,65.0,350.0,9000.0,2520.0,39.569630763219585,,\n,160.27529002,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.82569656708497,160.275446177,0.15225261607417886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.276927351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.299233394,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0699416438978168,45.0\n,160.326199994,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2475.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,96.0,350.0,39.61304484674829,100.0,2505.0,2505.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.837206094555059,170.275974855,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.276207091,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.277770133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.298523164,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.06629472691652762,45.0\n,170.31890949,,0.0,4.0,0.0,0.0,4.0,97.0,71.0,2505.0,4.0,0.0,2520.0,0.0,100.0,99.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,71.0,45.0,45.0,96.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,70.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.845977836192708,180.275816176,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.276073921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.277118002,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.298323474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.06301346970607168,45.0\n,180.315800913,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.8532932362792796,190.275983514,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.276034333,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.277613495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.298361415,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.060063850688883307,45.0\n,190.323623944,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2520.0,0.0,42.0,6.0,0.0,2520.0,0.0,9000.0,14.0,9000.0,34.0,67.0,68.0,62.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,93.0,350.0,2475.0,4.0,0.0,0.0,350.0,39.61304484674829,100.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,98.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2505.0,39.569630763219585,,\n,200.275824835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.863576211468244,200.275858184,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.277681391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.302682775,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.057365038551969234,45.0\n,200.32983688,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n,210.276088589,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.872391109575044,210.276216366,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.277234708,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.298802133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.05488407716958625,45.0\n,210.327247244,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,96.0,350.0,39.61304484674829,100.0,2505.0,2505.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.8809262477634014,220.275809954,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.275943822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.27767277,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.298822952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.05264295581078925,45.0\n,220.335447957,,0.0,4.0,0.0,0.0,4.0,16.0,5.0,2520.0,4.0,0.0,2520.0,0.0,0.0,34.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,7.0,6.0,11.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,13.0,350.0,2520.0,4.0,0.0,10.0,350.0,39.61304484674829,0.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,31.0,0.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.88885038120431,230.275221771,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.275271971,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.276758964,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.2982325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.05056582143450788,45.0\n,230.312310067,,0.0,4.0,0.0,0.0,4.0,37.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,100.0,100.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,0.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.899589527843507,240.275919666,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.276095773,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.277704764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.298272555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0486483900814867,45.0\n,240.315062294,,0.0,4.0,0.0,0.0,4.0,95.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2520.0,4.0,0.0,16.0,350.0,39.61304484674829,100.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.907601488484792,250.275804317,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.27615233,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.277507586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.298453981,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04687333800339064,45.0\n,250.320718201,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2505.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,38.0,350.0,2520.0,4.0,0.0,100.0,350.0,39.61304484674829,100.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,73.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.914960423606033,260.275561035,0.15225413033625435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.275608624,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.277252844,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.298338746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.045225307062376686,45.0\n,260.310560947,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,76.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,71.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n,270.275159054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.923601560139674,270.275265452,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.277130728,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.298552813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.043691031319023965,45.0\n,270.311970422,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,9.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,2.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,0.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,3.0,0.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.93281508773784,280.275498139,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.275540948,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.276749557,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.297952245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04225903559219933,45.0\n,280.314448519,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2445.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2460.0,4.0,0.0,100.0,350.0,39.61304484674829,96.0,2490.0,2490.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,96.0,350.0,9000.0,2490.0,39.569630763219585,,\n4.939681130553517,290.275392396,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.275401276,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.276982108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.298160676,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.040919617537872384,45.0\n,290.317589367,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,100.0,62.0,64.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,95.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,39.569630763219585,,\n,300.275425747,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.9468382902532015,300.275429787,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.277345863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.298278685,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03967628966897027,45.0\n,300.319644611,,0.0,4.0,0.0,0.0,4.0,26.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,13.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,0.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.952878303106713,310.275390357,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.275568633,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.276976778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.298644028,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.038496468546423655,45.0\n,310.318314734,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,1252.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.960233831138284,320.27532745,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.275635954,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.277098907,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.298802966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03738613294507032,45.0\n,320.319368485,,0.0,4.0,0.0,0.0,4.0,100.0,19.0,2520.0,4.0,0.0,2520.0,0.0,65.0,100.0,0.0,2520.0,0.0,9000.0,74.0,9000.0,56.0,0.0,0.0,100.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2400.0,4.0,0.0,100.0,350.0,39.61304484674829,100.0,2475.0,2505.0,0.0,39.61304484674829,9000.0,0.0,48.0,67.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.969881951952108,330.27551111,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.275651568,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.276597731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.298351708,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.036339282592498356,45.0\n,330.310919461,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2505.0,0.0,94.0,97.0,0.0,2520.0,0.0,9000.0,86.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,39.61304484674829,98.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,83.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,90.0,350.0,9000.0,2505.0,39.569630763219585,,\n,340.275882793,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.974484930096003,340.275977342,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.277602572,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.298929407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03536156688770417,45.0\n,340.311947612,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2505.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,29.0,0.0,0.0,100.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,100.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,87.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.981410029132624,350.275825652,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.276004829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.277339225,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.299036133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03441552282258914,45.0\n,350.324909636,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,96.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,39.569630763219585,,\n4.9859319942554805,360.275286441,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,360.275495607,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,360.277244015,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,360.29802747,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.033540038747961694,45.0\n,360.313215376,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,74.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,39.569630763219585,,\n,370.27601815,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.991775910170218,370.276373144,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,370.277778508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,370.298237077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03269934628057615,45.0\n,370.316762743,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,67.0,69.0,63.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,39.61304484674829,33.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,2.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n4.998728644489716,380.275627534,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,380.275777721,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,380.276589307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,380.298211925,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.031890970891548756,45.0\n,380.315475533,,0.0,4.0,0.0,0.0,4.0,97.0,99.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2490.0,0.0,9000.0,100.0,9000.0,100.0,99.0,99.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,97.0,350.0,2505.0,4.0,0.0,96.0,350.0,39.61304484674829,97.0,2520.0,2505.0,0.0,39.61304484674829,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,39.569630763219585,,\n5.0044862474661524,390.275404042,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,390.275452852,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,390.276950164,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,390.298272848,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.031141205489356602,45.0\n,390.313779617,,0.0,4.0,0.0,0.0,4.0,52.0,82.0,2505.0,4.0,0.0,2520.0,0.0,34.0,2.0,0.0,2520.0,0.0,9000.0,26.0,9000.0,43.0,84.0,83.0,79.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,80.0,350.0,2505.0,4.0,0.0,77.0,350.0,39.61304484674829,44.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,52.0,29.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,36.0,350.0,9000.0,2520.0,39.569630763219585,,\n,400.275545684,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.0102654286771635,400.275711801,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,400.276999647,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,400.301988165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.030417816832362093,45.0\n,400.310317814,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2505.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,62.0,64.0,59.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2520.0,4.0,0.0,2.0,350.0,39.61304484674829,0.0,2520.0,2520.0,0.0,39.61304484674829,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2505.0,39.569630763219585,,\n,410.276155569,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.015887126632328,410.276383765,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,410.2777266,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,410.302229005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.029728045434178584,45.0\n,410.318443972,,0.0,4.0,0.0,0.0,4.0,74.0,0.0,2520.0,4.0,0.0,2505.0,0.0,5.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,100.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2520.0,4.0,0.0,0.0,350.0,39.61304484674829,100.0,2490.0,2520.0,0.0,39.61304484674829,9000.0,0.0,80.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,42.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n5.02170605722282,420.275667588,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,420.275672678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,420.277369117,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,420.298242658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.029069729942355873,45.0\n,420.320506433,,0.0,4.0,0.0,0.0,4.0,97.0,14.0,2520.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,66.0,9000.0,100.0,11.0,13.0,97.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,96.0,350.0,2520.0,4.0,0.0,97.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,41.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2475.0,39.569630763219585,,\n5.026387776994639,430.275165253,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,430.275251551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,430.276738474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,430.29846731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.028440707261648036,45.0\n,430.317812228,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,99.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2505.0,350.0,0.0,39.61304484674829,9000.0,98.0,350.0,2505.0,4.0,0.0,100.0,350.0,39.61304484674829,97.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,96.0,350.0,9000.0,2505.0,39.569630763219585,,\n5.0314136128231075,440.275311094,0.1522704086535656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,440.27606526,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,440.276928144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,440.327082774,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.027847499465678594,45.0\n,440.356125835,,0.0,4.0,0.0,0.0,4.0,71.0,74.0,2520.0,4.0,0.0,2520.0,0.0,94.0,95.0,0.0,2520.0,0.0,9000.0,42.0,9000.0,86.0,0.0,0.0,100.0,39.61304484674829,350.0,0.0,9000.0,39.61304484674829,0.0,39.61304484674829,4.0,350.0,2520.0,350.0,0.0,39.61304484674829,9000.0,100.0,350.0,2505.0,4.0,0.0,71.0,350.0,39.61304484674829,100.0,2505.0,2520.0,0.0,39.61304484674829,9000.0,0.0,77.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,47.149729747330035,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,39.569630763219585,,\n",
        "trainer_state.json": {},
        "eval_results.json": {
            "results": {
                "arc_challenge": {
                    "alias": "arc_challenge",
                    "acc,none": 0.20648464163822525,
                    "acc_stderr,none": 0.01182886561900235,
                    "acc_norm,none": 0.2790102389078498,
                    "acc_norm_stderr,none": 0.013106784883601296
                },
                "arc_easy": {
                    "alias": "arc_easy",
                    "acc,none": 0.25841750841750843,
                    "acc_stderr,none": 0.008982741341291388,
                    "acc_norm,none": 0.26557239057239057,
                    "acc_norm_stderr,none": 0.00906221062697191
                },
                "blimp_adjunct_island_filtered": {
                    "alias": "blimp_adjunct_island_filtered",
                    "acc,none": 0.7122844827586207,
                    "acc_stderr,none": 0.014868546559271568
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "alias": "blimp_anaphor_gender_agreement_filtered",
                    "acc,none": 0.6755921730175077,
                    "acc_stderr,none": 0.01503149232856474
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "alias": "blimp_anaphor_number_agreement_filtered",
                    "acc,none": 0.6970998925886144,
                    "acc_stderr,none": 0.015068004710599978
                },
                "blimp_animate_subject_passive_filtered": {
                    "alias": "blimp_animate_subject_passive_filtered",
                    "acc,none": 0.6536312849162011,
                    "acc_stderr,none": 0.015913546784020217
                },
                "blimp_animate_subject_trans_filtered": {
                    "alias": "blimp_animate_subject_trans_filtered",
                    "acc,none": 0.7681473456121344,
                    "acc_stderr,none": 0.013898337149915403
                },
                "blimp_causative_filtered": {
                    "alias": "blimp_causative_filtered",
                    "acc,none": 0.4572127139364303,
                    "acc_stderr,none": 0.017428618123172337
                },
                "blimp_complex_NP_island_filtered": {
                    "alias": "blimp_complex_NP_island_filtered",
                    "acc,none": 0.7387706855791962,
                    "acc_stderr,none": 0.015112538769407767
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "acc,none": 0.7472406181015453,
                    "acc_stderr,none": 0.014446398421750741
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "acc,none": 0.6164383561643836,
                    "acc_stderr,none": 0.015792767572829863
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_1_filtered",
                    "acc,none": 0.5855758880516685,
                    "acc_stderr,none": 0.01617112047037628
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_2_filtered",
                    "acc,none": 0.6723952738990333,
                    "acc_stderr,none": 0.01539025908720402
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "acc,none": 0.618208516886931,
                    "acc_stderr,none": 0.018630570486962938
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "acc,none": 0.6097560975609756,
                    "acc_stderr,none": 0.01704528189791737
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "acc,none": 0.6865037194473964,
                    "acc_stderr,none": 0.015131212022451813
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "acc,none": 0.6908077994428969,
                    "acc_stderr,none": 0.017259702410433828
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "acc,none": 0.6928571428571428,
                    "acc_stderr,none": 0.015926160159070717
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "acc,none": 0.5712754555198285,
                    "acc_stderr,none": 0.01621078329716887
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "alias": "blimp_distractor_agreement_relational_noun_filtered",
                    "acc,none": 0.684010152284264,
                    "acc_stderr,none": 0.01657221169849772
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "alias": "blimp_distractor_agreement_relative_clause_filtered",
                    "acc,none": 0.7083811710677382,
                    "acc_stderr,none": 0.015409255598407574
                },
                "blimp_drop_argument_filtered": {
                    "alias": "blimp_drop_argument_filtered",
                    "acc,none": 0.7771739130434783,
                    "acc_stderr,none": 0.01372727608579951
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "alias": "blimp_ellipsis_n_bar_1_filtered",
                    "acc,none": 0.8017456359102244,
                    "acc_stderr,none": 0.014086834824303463
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "alias": "blimp_ellipsis_n_bar_2_filtered",
                    "acc,none": 0.39009661835748793,
                    "acc_stderr,none": 0.016961484454536987
                },
                "blimp_existential_there_object_raising_filtered": {
                    "alias": "blimp_existential_there_object_raising_filtered",
                    "acc,none": 0.7401477832512315,
                    "acc_stderr,none": 0.015399691022871231
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "alias": "blimp_existential_there_quantifiers_1_filtered",
                    "acc,none": 0.6204301075268818,
                    "acc_stderr,none": 0.01592151732364236
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "alias": "blimp_existential_there_quantifiers_2_filtered",
                    "acc,none": 0.6333699231613611,
                    "acc_stderr,none": 0.01597430848030993
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "alias": "blimp_existential_there_subject_raising_filtered",
                    "acc,none": 0.7391774891774892,
                    "acc_stderr,none": 0.014452602275577434
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "alias": "blimp_expletive_it_object_raising_filtered",
                    "acc,none": 0.6534914361001317,
                    "acc_stderr,none": 0.01728392343459
                },
                "blimp_inchoative_filtered": {
                    "alias": "blimp_inchoative_filtered",
                    "acc,none": 0.45380116959064326,
                    "acc_stderr,none": 0.01703645588496573
                },
                "blimp_intransitive_filtered": {
                    "alias": "blimp_intransitive_filtered",
                    "acc,none": 0.6359447004608295,
                    "acc_stderr,none": 0.01634119476617136
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "alias": "blimp_irregular_past_participle_adjectives_filtered",
                    "acc,none": 0.5733610822060354,
                    "acc_stderr,none": 0.015962787181492594
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "alias": "blimp_irregular_past_participle_verbs_filtered",
                    "acc,none": 0.6645435244161358,
                    "acc_stderr,none": 0.015391643418178088
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.6119402985074627,
                    "acc_stderr,none": 0.01719673611369205
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.6513452914798207,
                    "acc_stderr,none": 0.015964839409120954
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "alias": "blimp_left_branch_island_echo_question_filtered",
                    "acc,none": 0.6092925026399155,
                    "acc_stderr,none": 0.01586328845409776
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "alias": "blimp_left_branch_island_simple_question_filtered",
                    "acc,none": 0.6288117770767613,
                    "acc_stderr,none": 0.01567456961841215
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                    "acc,none": 0.6458557588805167,
                    "acc_stderr,none": 0.015699429541627646
                },
                "blimp_npi_present_1_filtered": {
                    "alias": "blimp_npi_present_1_filtered",
                    "acc,none": 0.7172717271727173,
                    "acc_stderr,none": 0.014944574419970469
                },
                "blimp_npi_present_2_filtered": {
                    "alias": "blimp_npi_present_2_filtered",
                    "acc,none": 0.737417943107221,
                    "acc_stderr,none": 0.014563105128596982
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "alias": "blimp_only_npi_licensor_present_filtered",
                    "acc,none": 0.9421768707482994,
                    "acc_stderr,none": 0.0078637384551981
                },
                "blimp_only_npi_scope_filtered": {
                    "alias": "blimp_only_npi_scope_filtered",
                    "acc,none": 0.7072879330943848,
                    "acc_stderr,none": 0.015736759179254753
                },
                "blimp_passive_1_filtered": {
                    "alias": "blimp_passive_1_filtered",
                    "acc,none": 0.6238095238095238,
                    "acc_stderr,none": 0.016724337315959528
                },
                "blimp_passive_2_filtered": {
                    "alias": "blimp_passive_2_filtered",
                    "acc,none": 0.6112956810631229,
                    "acc_stderr,none": 0.01623050669031237
                },
                "blimp_principle_A_c_command_filtered": {
                    "alias": "blimp_principle_A_c_command_filtered",
                    "acc,none": 0.7251585623678647,
                    "acc_stderr,none": 0.014522510233567047
                },
                "blimp_principle_A_case_1_filtered": {
                    "alias": "blimp_principle_A_case_1_filtered",
                    "acc,none": 0.8804824561403509,
                    "acc_stderr,none": 0.010747736114179047
                },
                "blimp_principle_A_case_2_filtered": {
                    "alias": "blimp_principle_A_case_2_filtered",
                    "acc,none": 0.5683060109289617,
                    "acc_stderr,none": 0.01638347518564402
                },
                "blimp_principle_A_domain_1_filtered": {
                    "alias": "blimp_principle_A_domain_1_filtered",
                    "acc,none": 0.9332603938730853,
                    "acc_stderr,none": 0.00825957780526894
                },
                "blimp_principle_A_domain_2_filtered": {
                    "alias": "blimp_principle_A_domain_2_filtered",
                    "acc,none": 0.7005464480874317,
                    "acc_stderr,none": 0.015149911792086558
                },
                "blimp_principle_A_domain_3_filtered": {
                    "alias": "blimp_principle_A_domain_3_filtered",
                    "acc,none": 0.6567481402763018,
                    "acc_stderr,none": 0.015486096046643688
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "alias": "blimp_principle_A_reconstruction_filtered",
                    "acc,none": 0.6235780765253361,
                    "acc_stderr,none": 0.015588140466097451
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.549438202247191,
                    "acc_stderr,none": 0.016687286747281996
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.5671957671957671,
                    "acc_stderr,none": 0.016125984691750524
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "acc,none": 0.9205658324265505,
                    "acc_stderr,none": 0.008925031541253932
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "alias": "blimp_sentential_negation_npi_scope_filtered",
                    "acc,none": 0.9276693455797933,
                    "acc_stderr,none": 0.00878209587029864
                },
                "blimp_sentential_subject_island_filtered": {
                    "alias": "blimp_sentential_subject_island_filtered",
                    "acc,none": 0.7107180020811654,
                    "acc_stderr,none": 0.014634360380586405
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "alias": "blimp_superlative_quantifiers_1_filtered",
                    "acc,none": 0.6629213483146067,
                    "acc_stderr,none": 0.015115662940074623
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "alias": "blimp_superlative_quantifiers_2_filtered",
                    "acc,none": 0.6602434077079108,
                    "acc_stderr,none": 0.015090994735865662
                },
                "blimp_supplement_hypernym": {
                    "alias": "blimp_supplement_hypernym",
                    "acc,none": 0.6318289786223278,
                    "acc_stderr,none": 0.01663131440330803
                },
                "blimp_supplement_qa_congruence_easy": {
                    "alias": "blimp_supplement_qa_congruence_easy",
                    "acc,none": 0.4375,
                    "acc_stderr,none": 0.0625
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "alias": "blimp_supplement_qa_congruence_tricky",
                    "acc,none": 0.43636363636363634,
                    "acc_stderr,none": 0.03872592983524754
                },
                "blimp_supplement_subject_aux_inversion": {
                    "alias": "blimp_supplement_subject_aux_inversion",
                    "acc,none": 0.7121799844840963,
                    "acc_stderr,none": 0.0072815603481007985
                },
                "blimp_supplement_turn_taking": {
                    "alias": "blimp_supplement_turn_taking",
                    "acc,none": 0.7464285714285714,
                    "acc_stderr,none": 0.026046068862062243
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "alias": "blimp_tough_vs_raising_1_filtered",
                    "acc,none": 0.4430379746835443,
                    "acc_stderr,none": 0.016142034813872046
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "alias": "blimp_tough_vs_raising_2_filtered",
                    "acc,none": 0.758695652173913,
                    "acc_stderr,none": 0.014114276319538332
                },
                "blimp_transitive_filtered": {
                    "alias": "blimp_transitive_filtered",
                    "acc,none": 0.5714285714285714,
                    "acc_stderr,none": 0.016806722689075633
                },
                "blimp_wh_island_filtered": {
                    "alias": "blimp_wh_island_filtered",
                    "acc,none": 0.7052083333333333,
                    "acc_stderr,none": 0.014723362859770692
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "alias": "blimp_wh_questions_object_gap_filtered",
                    "acc,none": 0.6821885913853318,
                    "acc_stderr,none": 0.015896200201610564
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_filtered",
                    "acc,none": 0.7516703786191536,
                    "acc_stderr,none": 0.014425529384461181
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "acc,none": 0.7432905484247374,
                    "acc_stderr,none": 0.014930121855046292
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_filtered",
                    "acc,none": 0.775842044134727,
                    "acc_stderr,none": 0.014220488277341879
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "acc,none": 0.8,
                    "acc_stderr,none": 0.013530201829834767
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_filtered",
                    "acc,none": 0.8117519042437432,
                    "acc_stderr,none": 0.012901957688694822
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "acc,none": 0.8428571428571429,
                    "acc_stderr,none": 0.012070975453369956
                },
                "cola": {
                    "alias": "cola",
                    "mcc,none": 0.0,
                    "mcc_stderr,none": 0.0
                },
                "hellaswag": {
                    "alias": "hellaswag",
                    "acc,none": 0.25423222465644296,
                    "acc_stderr,none": 0.00434538861452022,
                    "acc_norm,none": 0.261700856403107,
                    "acc_norm_stderr,none": 0.004386622589118801
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "alias": "inverse_scaling_hindsight_neglect_10shot",
                    "acc,none": 0.4507936507936508,
                    "acc_stderr,none": 0.028079660068225168,
                    "acc_norm,none": 0.4507936507936508,
                    "acc_norm_stderr,none": 0.028079660068225168
                },
                "inverse_scaling_into_the_unknown": {
                    "alias": "inverse_scaling_into_the_unknown",
                    "acc,none": 0.5087719298245614,
                    "acc_stderr,none": 0.011708730895408954,
                    "acc_norm,none": 0.5087719298245614,
                    "acc_norm_stderr,none": 0.011708730895408954
                },
                "inverse_scaling_memo_trap": {
                    "alias": "inverse_scaling_memo_trap",
                    "acc,none": 0.5576923076923077,
                    "acc_stderr,none": 0.016242533377423703,
                    "acc_norm,none": 0.5448717948717948,
                    "acc_norm_stderr,none": 0.016285767613615523
                },
                "inverse_scaling_modus_tollens": {
                    "alias": "inverse_scaling_modus_tollens",
                    "acc,none": 1.0,
                    "acc_stderr,none": 0.0,
                    "acc_norm,none": 1.0,
                    "acc_norm_stderr,none": 0.0
                },
                "inverse_scaling_neqa": {
                    "alias": "inverse_scaling_neqa",
                    "acc,none": 0.5433333333333333,
                    "acc_stderr,none": 0.028806947219396185,
                    "acc_norm,none": 0.5433333333333333,
                    "acc_norm_stderr,none": 0.028806947219396185
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "alias": "inverse_scaling_pattern_matching_suppression",
                    "acc,none": 0.5833333333333334,
                    "acc_stderr,none": 0.013050909844199616,
                    "acc_norm,none": 0.4166666666666667,
                    "acc_norm_stderr,none": 0.013050909844199616
                },
                "inverse_scaling_quote_repetition": {
                    "alias": "inverse_scaling_quote_repetition",
                    "acc,none": 0.13666666666666666,
                    "acc_stderr,none": 0.019864834973508133,
                    "acc_norm,none": 0.18,
                    "acc_norm_stderr,none": 0.02221813414645417
                },
                "inverse_scaling_redefine_math": {
                    "alias": "inverse_scaling_redefine_math",
                    "acc,none": 0.31777777777777777,
                    "acc_stderr,none": 0.015529048517617184,
                    "acc_norm,none": 0.31777777777777777,
                    "acc_norm_stderr,none": 0.015529048517617184
                },
                "inverse_scaling_repetitive_algebra": {
                    "alias": "inverse_scaling_repetitive_algebra",
                    "acc,none": 0.503,
                    "acc_stderr,none": 0.01581901517924682,
                    "acc_norm,none": 0.506,
                    "acc_norm_stderr,none": 0.015818160898606836
                },
                "inverse_scaling_sig_figs": {
                    "alias": "inverse_scaling_sig_figs",
                    "acc,none": 0.3956070249318084,
                    "acc_stderr,none": 0.0033826738149039083,
                    "acc_norm,none": 0.3956070249318084,
                    "acc_norm_stderr,none": 0.0033826738149039083
                },
                "inverse_scaling_winobias_antistereotype": {
                    "alias": "inverse_scaling_winobias_antistereotype",
                    "acc,none": 0.7184466019417476,
                    "acc_stderr,none": 0.02218486157199594,
                    "acc_norm,none": 0.5072815533980582,
                    "acc_norm_stderr,none": 0.024660565710627035
                },
                "lambada_openai": {
                    "alias": "lambada_openai",
                    "perplexity,none": 55589627.17878117,
                    "perplexity_stderr,none": 6077440.329317925,
                    "acc,none": 0.0,
                    "acc_stderr,none": 0.0
                },
                "mathqa": {
                    "alias": "mathqa",
                    "acc,none": 0.19061976549413737,
                    "acc_stderr,none": 0.007190529184427973,
                    "acc_norm,none": 0.19798994974874373,
                    "acc_norm_stderr,none": 0.007294777814322586
                },
                "mnli": {
                    "alias": "mnli",
                    "acc,none": 0.3273560876209883,
                    "acc_stderr,none": 0.004736742673109893
                },
                "mnli_mismatch": {
                    "alias": "mnli_mismatch",
                    "acc,none": 0.3295362082994304,
                    "acc_stderr,none": 0.004740677221523527
                },
                "mrpc": {
                    "alias": "mrpc",
                    "acc,none": 0.6838235294117647,
                    "acc_stderr,none": 0.023048336668420145
                },
                "openbookqa": {
                    "alias": "openbookqa",
                    "acc,none": 0.156,
                    "acc_stderr,none": 0.016243636028391108,
                    "acc_norm,none": 0.272,
                    "acc_norm_stderr,none": 0.019920483209566107
                },
                "piqa": {
                    "alias": "piqa",
                    "acc,none": 0.5255712731229597,
                    "acc_stderr,none": 0.01165055784457337,
                    "acc_norm,none": 0.4972796517954298,
                    "acc_norm_stderr,none": 0.011665651503000776
                },
                "qa4mre_2011": {
                    "alias": "qa4mre_2011",
                    "acc,none": 0.1,
                    "acc_stderr,none": 0.02750095491084634,
                    "acc_norm,none": 0.14166666666666666,
                    "acc_norm_stderr,none": 0.03196600376689893
                },
                "qa4mre_2012": {
                    "alias": "qa4mre_2012",
                    "acc,none": 0.15,
                    "acc_stderr,none": 0.028317605697742707,
                    "acc_norm,none": 0.2625,
                    "acc_norm_stderr,none": 0.03489370652018758
                },
                "qa4mre_2013": {
                    "alias": "qa4mre_2013",
                    "acc,none": 0.25,
                    "acc_stderr,none": 0.02573993336454676,
                    "acc_norm,none": 0.176056338028169,
                    "acc_norm_stderr,none": 0.022640258076127132
                },
                "qnli": {
                    "alias": "qnli",
                    "acc,none": 0.4946000366099213,
                    "acc_stderr,none": 0.006765015986877416
                },
                "qqp": {
                    "alias": "qqp",
                    "acc,none": 0.36816720257234725,
                    "acc_stderr,none": 0.0023987066106141842
                },
                "rte": {
                    "alias": "rte",
                    "acc,none": 0.4729241877256318,
                    "acc_stderr,none": 0.030052303463143734
                },
                "sciq": {
                    "alias": "sciq",
                    "acc,none": 0.174,
                    "acc_stderr,none": 0.011994493230973449,
                    "acc_norm,none": 0.197,
                    "acc_norm_stderr,none": 0.012583693787968194
                },
                "squad_completion": {
                    "alias": "squad_completion",
                    "contains,none": 0.0013404825737265416,
                    "contains_stderr,none": "N/A"
                },
                "sst2": {
                    "alias": "sst2",
                    "acc,none": 0.5091743119266054,
                    "acc_stderr,none": 0.016939001525351462
                },
                "swag": {
                    "alias": "swag",
                    "acc,none": 0.2668199540137959,
                    "acc_stderr,none": 0.0031271246506253073,
                    "acc_norm,none": 0.2532740177946616,
                    "acc_norm_stderr,none": 0.0030747277924218232
                },
                "tinyGSM8k": {
                    "alias": "tinyGSM8k",
                    "exact_match,strict-match": 0.005531037620360234,
                    "exact_match_stderr,strict-match": "N/A",
                    "exact_match,flexible-extract": 0.005531037620360234,
                    "exact_match_stderr,flexible-extract": "N/A"
                },
                "tinyMMLU": {
                    "alias": "tinyMMLU",
                    "acc_norm,none": 0.2961118502368148,
                    "acc_norm_stderr,none": "N/A"
                },
                "tinyTruthfulQA": {
                    "alias": "tinyTruthfulQA",
                    "acc,none": 0.5350492258861903,
                    "acc_stderr,none": "N/A"
                },
                "triviaqa": {
                    "alias": "triviaqa",
                    "exact_match,remove_whitespace": 0.0,
                    "exact_match_stderr,remove_whitespace": 0.0
                },
                "winogrande": {
                    "alias": "winogrande",
                    "acc,none": 0.4988161010260458,
                    "acc_stderr,none": 0.014052446290528871
                },
                "wnli": {
                    "alias": "wnli",
                    "acc,none": 0.5633802816901409,
                    "acc_stderr,none": 0.05927935558412972
                },
                "wsc273": {
                    "alias": "wsc273",
                    "acc,none": 0.5018315018315018,
                    "acc_stderr,none": 0.030316749738547345
                }
            },
            "group_subtasks": {
                "arc_challenge": [],
                "arc_easy": [],
                "blimp_principle_A_reconstruction_filtered": [],
                "blimp_causative_filtered": [],
                "blimp_wh_island_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
                "blimp_intransitive_filtered": [],
                "blimp_superlative_quantifiers_2_filtered": [],
                "blimp_wh_vs_that_no_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
                "blimp_wh_vs_that_with_gap_filtered": [],
                "blimp_principle_A_case_1_filtered": [],
                "blimp_tough_vs_raising_1_filtered": [],
                "blimp_matrix_question_npi_licensor_present_filtered": [],
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
                "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
                "blimp_principle_A_case_2_filtered": [],
                "blimp_complex_NP_island_filtered": [],
                "blimp_tough_vs_raising_2_filtered": [],
                "blimp_wh_questions_subject_gap_long_distance_filtered": [],
                "blimp_principle_A_c_command_filtered": [],
                "blimp_anaphor_gender_agreement_filtered": [],
                "blimp_determiner_noun_agreement_irregular_1_filtered": [],
                "blimp_ellipsis_n_bar_2_filtered": [],
                "blimp_sentential_negation_npi_scope_filtered": [],
                "blimp_only_npi_licensor_present_filtered": [],
                "blimp_distractor_agreement_relational_noun_filtered": [],
                "blimp_existential_there_object_raising_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_principle_A_domain_2_filtered": [],
                "blimp_passive_2_filtered": [],
                "blimp_superlative_quantifiers_1_filtered": [],
                "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_irregular_past_participle_adjectives_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_wh_questions_subject_gap_filtered": [],
                "blimp_adjunct_island_filtered": [],
                "blimp_existential_there_quantifiers_2_filtered": [],
                "blimp_determiner_noun_agreement_irregular_2_filtered": [],
                "blimp_animate_subject_trans_filtered": [],
                "blimp_anaphor_number_agreement_filtered": [],
                "blimp_sentential_negation_npi_licensor_present_filtered": [],
                "blimp_determiner_noun_agreement_2_filtered": [],
                "blimp_passive_1_filtered": [],
                "blimp_inchoative_filtered": [],
                "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
                "blimp_existential_there_subject_raising_filtered": [],
                "blimp_wh_questions_object_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_existential_there_quantifiers_1_filtered": [],
                "blimp_drop_argument_filtered": [],
                "blimp_expletive_it_object_raising_filtered": [],
                "blimp_left_branch_island_simple_question_filtered": [],
                "blimp_irregular_past_participle_verbs_filtered": [],
                "blimp_npi_present_1_filtered": [],
                "blimp_animate_subject_passive_filtered": [],
                "blimp_transitive_filtered": [],
                "blimp_principle_A_domain_3_filtered": [],
                "blimp_npi_present_2_filtered": [],
                "blimp_sentential_subject_island_filtered": [],
                "blimp_principle_A_domain_1_filtered": [],
                "blimp_only_npi_scope_filtered": [],
                "blimp_determiner_noun_agreement_1_filtered": [],
                "blimp_left_branch_island_echo_question_filtered": [],
                "blimp_ellipsis_n_bar_1_filtered": [],
                "blimp_distractor_agreement_relative_clause_filtered": [],
                "blimp_supplement_qa_congruence_tricky": [],
                "blimp_supplement_turn_taking": [],
                "blimp_supplement_hypernym": [],
                "blimp_supplement_qa_congruence_easy": [],
                "blimp_supplement_subject_aux_inversion": [],
                "cola": [],
                "sst2": [],
                "qqp": [],
                "mnli": [],
                "mnli_mismatch": [],
                "wnli": [],
                "rte": [],
                "qnli": [],
                "mrpc": [],
                "hellaswag": [],
                "inverse_scaling_into_the_unknown": [],
                "inverse_scaling_redefine_math": [],
                "inverse_scaling_modus_tollens": [],
                "inverse_scaling_pattern_matching_suppression": [],
                "inverse_scaling_sig_figs": [],
                "inverse_scaling_memo_trap": [],
                "inverse_scaling_neqa": [],
                "inverse_scaling_winobias_antistereotype": [],
                "inverse_scaling_quote_repetition": [],
                "inverse_scaling_repetitive_algebra": [],
                "inverse_scaling_hindsight_neglect_10shot": [],
                "lambada_openai": [],
                "mathqa": [],
                "openbookqa": [],
                "piqa": [],
                "qa4mre_2012": [],
                "qa4mre_2013": [],
                "qa4mre_2011": [],
                "sciq": [],
                "squad_completion": [],
                "swag": [],
                "tinyGSM8k": [],
                "tinyMMLU": [],
                "tinyTruthfulQA": [],
                "triviaqa": [],
                "winogrande": [],
                "wsc273": []
            },
            "configs": {
                "arc_challenge": {
                    "task": "arc_challenge",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Challenge",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "arc_easy": {
                    "task": "arc_easy",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Easy",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_adjunct_island_filtered": {
                    "task": "blimp_adjunct_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "task": "blimp_anaphor_gender_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "task": "blimp_anaphor_number_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_passive_filtered": {
                    "task": "blimp_animate_subject_passive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_trans_filtered": {
                    "task": "blimp_animate_subject_trans_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_causative_filtered": {
                    "task": "blimp_causative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_complex_NP_island_filtered": {
                    "task": "blimp_complex_NP_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "task": "blimp_distractor_agreement_relational_noun_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "task": "blimp_distractor_agreement_relative_clause_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_drop_argument_filtered": {
                    "task": "blimp_drop_argument_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "task": "blimp_ellipsis_n_bar_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "task": "blimp_ellipsis_n_bar_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_object_raising_filtered": {
                    "task": "blimp_existential_there_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "task": "blimp_existential_there_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "task": "blimp_existential_there_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "task": "blimp_existential_there_subject_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "task": "blimp_expletive_it_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_inchoative_filtered": {
                    "task": "blimp_inchoative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_intransitive_filtered": {
                    "task": "blimp_intransitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "task": "blimp_irregular_past_participle_adjectives_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "task": "blimp_irregular_past_participle_verbs_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "task": "blimp_left_branch_island_echo_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "task": "blimp_left_branch_island_simple_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "task": "blimp_matrix_question_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_1_filtered": {
                    "task": "blimp_npi_present_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_2_filtered": {
                    "task": "blimp_npi_present_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "task": "blimp_only_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_scope_filtered": {
                    "task": "blimp_only_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_1_filtered": {
                    "task": "blimp_passive_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_2_filtered": {
                    "task": "blimp_passive_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_c_command_filtered": {
                    "task": "blimp_principle_A_c_command_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_1_filtered": {
                    "task": "blimp_principle_A_case_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_2_filtered": {
                    "task": "blimp_principle_A_case_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_1_filtered": {
                    "task": "blimp_principle_A_domain_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_2_filtered": {
                    "task": "blimp_principle_A_domain_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_3_filtered": {
                    "task": "blimp_principle_A_domain_3_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "task": "blimp_principle_A_reconstruction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "task": "blimp_sentential_negation_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_subject_island_filtered": {
                    "task": "blimp_sentential_subject_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "task": "blimp_superlative_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "task": "blimp_superlative_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_hypernym": {
                    "task": "blimp_supplement_hypernym",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_easy": {
                    "task": "blimp_supplement_qa_congruence_easy",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "task": "blimp_supplement_qa_congruence_tricky",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_subject_aux_inversion": {
                    "task": "blimp_supplement_subject_aux_inversion",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_turn_taking": {
                    "task": "blimp_supplement_turn_taking",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "task": "blimp_tough_vs_raising_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "task": "blimp_tough_vs_raising_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_transitive_filtered": {
                    "task": "blimp_transitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_island_filtered": {
                    "task": "blimp_wh_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "task": "blimp_wh_questions_object_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "task": "blimp_wh_questions_subject_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "cola": {
                    "task": "cola",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "cola",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "mcc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "hellaswag": {
                    "task": "hellaswag",
                    "tag": [
                        "multiple_choice"
                    ],
                    "dataset_path": "hellaswag",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                    "doc_to_text": "{{query}}",
                    "doc_to_target": "{{label}}",
                    "doc_to_choice": "choices",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "task": "inverse_scaling_hindsight_neglect_10shot",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_into_the_unknown": {
                    "task": "inverse_scaling_into_the_unknown",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/into-the-unknown",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_memo_trap": {
                    "task": "inverse_scaling_memo_trap",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/memo-trap",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_modus_tollens": {
                    "task": "inverse_scaling_modus_tollens",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/modus-tollens",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_neqa": {
                    "task": "inverse_scaling_neqa",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/NeQA",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "task": "inverse_scaling_pattern_matching_suppression",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/pattern-matching-suppression",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_quote_repetition": {
                    "task": "inverse_scaling_quote_repetition",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/quote-repetition",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_redefine_math": {
                    "task": "inverse_scaling_redefine_math",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/redefine-math",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_repetitive_algebra": {
                    "task": "inverse_scaling_repetitive_algebra",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/repetitive-algebra",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_sig_figs": {
                    "task": "inverse_scaling_sig_figs",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/sig-figs",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_winobias_antistereotype": {
                    "task": "inverse_scaling_winobias_antistereotype",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "group": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "text",
                    "doc_to_target": "target",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "lambada_openai": {
                    "task": "lambada_openai",
                    "tag": [
                        "lambada"
                    ],
                    "dataset_path": "EleutherAI/lambada_openai",
                    "dataset_name": "default",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                    "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "perplexity",
                            "aggregation": "perplexity",
                            "higher_is_better": false
                        },
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "loglikelihood",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{text}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mathqa": {
                    "task": "mathqa",
                    "tag": [
                        "math_word_problems"
                    ],
                    "dataset_path": "math_qa",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{Problem}}\nAnswer:",
                    "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                    "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli": {
                    "task": "mnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_matched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli_mismatch": {
                    "task": "mnli_mismatch",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_mismatched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mrpc": {
                    "task": "mrpc",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mrpc",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "openbookqa": {
                    "task": "openbookqa",
                    "dataset_path": "openbookqa",
                    "dataset_name": "main",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "question_stem",
                    "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question_stem",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "piqa": {
                    "task": "piqa",
                    "dataset_path": "piqa",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{goal}}\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[sol1, sol2]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "goal",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2011": {
                    "task": "qa4mre_2011",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2011.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2012": {
                    "task": "qa4mre_2012",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2012.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2013": {
                    "task": "qa4mre_2013",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2013.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qnli": {
                    "task": "qnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qqp": {
                    "task": "qqp",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qqp",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "rte": {
                    "task": "rte",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "rte",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "sciq": {
                    "task": "sciq",
                    "dataset_path": "sciq",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                    "doc_to_target": 3,
                    "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{support}} {{question}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "squad_completion": {
                    "task": "squad_completion",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n\n"
                        ],
                        "do_sample": false
                    },
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "sst2": {
                    "task": "sst2",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "sst2",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "negative",
                        "positive"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "swag": {
                    "task": "swag",
                    "dataset_path": "swag",
                    "dataset_name": "regular",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "startphrase",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "tinyGSM8k": {
                    "task": "tinyGSM8k",
                    "dataset_path": "tinyBenchmarks/tinyGSM8k",
                    "dataset_name": "main",
                    "training_split": "train",
                    "test_split": "test",
                    "fewshot_split": "train",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{answer}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 5,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": false,
                            "regexes_to_ignore": [
                                ",",
                                "\\$",
                                "(?s).*#### ",
                                "\\.$"
                            ]
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "Question:",
                            "</s>",
                            "<|im_end|>"
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "strict-match",
                            "filter": [
                                {
                                    "function": "regex",
                                    "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        },
                        {
                            "name": "flexible-extract",
                            "filter": [
                                {
                                    "function": "regex",
                                    "group_select": -1,
                                    "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyMMLU": {
                    "task": "tinyMMLU",
                    "dataset_path": "tinyBenchmarks/tinyMMLU",
                    "dataset_name": "all",
                    "test_split": "test",
                    "fewshot_split": "dev",
                    "doc_to_text": "{{input_formatted}}",
                    "doc_to_target": "answer",
                    "doc_to_choice": [
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "fewshot_config": {
                        "sampler": "first_n"
                    },
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc_norm",
                            "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyTruthfulQA": {
                    "task": "tinyTruthfulQA",
                    "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                    "dataset_name": "multiple_choice",
                    "validation_split": "validation",
                    "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{mc2_targets.choices}}",
                    "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 0.0
                    }
                },
                "triviaqa": {
                    "task": "triviaqa",
                    "dataset_path": "trivia_qa",
                    "dataset_name": "rc.nocontext",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{question}}?\nAnswer:",
                    "doc_to_target": "{{answer.aliases}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "mean",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": true
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n",
                            ".",
                            ","
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "remove_whitespace",
                            "filter": [
                                {
                                    "function": "remove_whitespace"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 3.0
                    }
                },
                "winogrande": {
                    "task": "winogrande",
                    "dataset_path": "winogrande",
                    "dataset_name": "winogrande_xl",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                    "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                    "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "wnli": {
                    "task": "wnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "wnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "False",
                        "True"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "wsc273": {
                    "task": "wsc273",
                    "dataset_path": "winograd_wsc",
                    "dataset_name": "wsc273",
                    "test_split": "test",
                    "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                    "doc_to_text": "label",
                    "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                    "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "text",
                    "metadata": {
                        "version": 1.0
                    }
                }
            },
            "versions": {
                "arc_challenge": 1.0,
                "arc_easy": 1.0,
                "blimp_adjunct_island_filtered": 1.0,
                "blimp_anaphor_gender_agreement_filtered": 1.0,
                "blimp_anaphor_number_agreement_filtered": 1.0,
                "blimp_animate_subject_passive_filtered": 1.0,
                "blimp_animate_subject_trans_filtered": 1.0,
                "blimp_causative_filtered": 1.0,
                "blimp_complex_NP_island_filtered": 1.0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
                "blimp_determiner_noun_agreement_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
                "blimp_distractor_agreement_relational_noun_filtered": 1.0,
                "blimp_distractor_agreement_relative_clause_filtered": 1.0,
                "blimp_drop_argument_filtered": 1.0,
                "blimp_ellipsis_n_bar_1_filtered": 1.0,
                "blimp_ellipsis_n_bar_2_filtered": 1.0,
                "blimp_existential_there_object_raising_filtered": 1.0,
                "blimp_existential_there_quantifiers_1_filtered": 1.0,
                "blimp_existential_there_quantifiers_2_filtered": 1.0,
                "blimp_existential_there_subject_raising_filtered": 1.0,
                "blimp_expletive_it_object_raising_filtered": 1.0,
                "blimp_inchoative_filtered": 1.0,
                "blimp_intransitive_filtered": 1.0,
                "blimp_irregular_past_participle_adjectives_filtered": 1.0,
                "blimp_irregular_past_participle_verbs_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_left_branch_island_echo_question_filtered": 1.0,
                "blimp_left_branch_island_simple_question_filtered": 1.0,
                "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
                "blimp_npi_present_1_filtered": 1.0,
                "blimp_npi_present_2_filtered": 1.0,
                "blimp_only_npi_licensor_present_filtered": 1.0,
                "blimp_only_npi_scope_filtered": 1.0,
                "blimp_passive_1_filtered": 1.0,
                "blimp_passive_2_filtered": 1.0,
                "blimp_principle_A_c_command_filtered": 1.0,
                "blimp_principle_A_case_1_filtered": 1.0,
                "blimp_principle_A_case_2_filtered": 1.0,
                "blimp_principle_A_domain_1_filtered": 1.0,
                "blimp_principle_A_domain_2_filtered": 1.0,
                "blimp_principle_A_domain_3_filtered": 1.0,
                "blimp_principle_A_reconstruction_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
                "blimp_sentential_negation_npi_scope_filtered": 1.0,
                "blimp_sentential_subject_island_filtered": 1.0,
                "blimp_superlative_quantifiers_1_filtered": 1.0,
                "blimp_superlative_quantifiers_2_filtered": 1.0,
                "blimp_supplement_hypernym": 1.0,
                "blimp_supplement_qa_congruence_easy": 1.0,
                "blimp_supplement_qa_congruence_tricky": 1.0,
                "blimp_supplement_subject_aux_inversion": 1.0,
                "blimp_supplement_turn_taking": 1.0,
                "blimp_tough_vs_raising_1_filtered": 1.0,
                "blimp_tough_vs_raising_2_filtered": 1.0,
                "blimp_transitive_filtered": 1.0,
                "blimp_wh_island_filtered": 1.0,
                "blimp_wh_questions_object_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
                "cola": 1.0,
                "hellaswag": 1.0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 1.0,
                "mathqa": 1.0,
                "mnli": 1.0,
                "mnli_mismatch": 1.0,
                "mrpc": 1.0,
                "openbookqa": 1.0,
                "piqa": 1.0,
                "qa4mre_2011": 1.0,
                "qa4mre_2012": 1.0,
                "qa4mre_2013": 1.0,
                "qnli": 1.0,
                "qqp": 2.0,
                "rte": 1.0,
                "sciq": 1.0,
                "squad_completion": 0,
                "sst2": 1.0,
                "swag": 1.0,
                "tinyGSM8k": 0.0,
                "tinyMMLU": 0.0,
                "tinyTruthfulQA": 0.0,
                "triviaqa": 3.0,
                "winogrande": 1.0,
                "wnli": 2.0,
                "wsc273": 1.0
            },
            "n-shot": {
                "arc_challenge": 0,
                "arc_easy": 0,
                "blimp_adjunct_island_filtered": 0,
                "blimp_anaphor_gender_agreement_filtered": 0,
                "blimp_anaphor_number_agreement_filtered": 0,
                "blimp_animate_subject_passive_filtered": 0,
                "blimp_animate_subject_trans_filtered": 0,
                "blimp_causative_filtered": 0,
                "blimp_complex_NP_island_filtered": 0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
                "blimp_determiner_noun_agreement_1_filtered": 0,
                "blimp_determiner_noun_agreement_2_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
                "blimp_distractor_agreement_relational_noun_filtered": 0,
                "blimp_distractor_agreement_relative_clause_filtered": 0,
                "blimp_drop_argument_filtered": 0,
                "blimp_ellipsis_n_bar_1_filtered": 0,
                "blimp_ellipsis_n_bar_2_filtered": 0,
                "blimp_existential_there_object_raising_filtered": 0,
                "blimp_existential_there_quantifiers_1_filtered": 0,
                "blimp_existential_there_quantifiers_2_filtered": 0,
                "blimp_existential_there_subject_raising_filtered": 0,
                "blimp_expletive_it_object_raising_filtered": 0,
                "blimp_inchoative_filtered": 0,
                "blimp_intransitive_filtered": 0,
                "blimp_irregular_past_participle_adjectives_filtered": 0,
                "blimp_irregular_past_participle_verbs_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_left_branch_island_echo_question_filtered": 0,
                "blimp_left_branch_island_simple_question_filtered": 0,
                "blimp_matrix_question_npi_licensor_present_filtered": 0,
                "blimp_npi_present_1_filtered": 0,
                "blimp_npi_present_2_filtered": 0,
                "blimp_only_npi_licensor_present_filtered": 0,
                "blimp_only_npi_scope_filtered": 0,
                "blimp_passive_1_filtered": 0,
                "blimp_passive_2_filtered": 0,
                "blimp_principle_A_c_command_filtered": 0,
                "blimp_principle_A_case_1_filtered": 0,
                "blimp_principle_A_case_2_filtered": 0,
                "blimp_principle_A_domain_1_filtered": 0,
                "blimp_principle_A_domain_2_filtered": 0,
                "blimp_principle_A_domain_3_filtered": 0,
                "blimp_principle_A_reconstruction_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 0,
                "blimp_sentential_negation_npi_scope_filtered": 0,
                "blimp_sentential_subject_island_filtered": 0,
                "blimp_superlative_quantifiers_1_filtered": 0,
                "blimp_superlative_quantifiers_2_filtered": 0,
                "blimp_supplement_hypernym": 0,
                "blimp_supplement_qa_congruence_easy": 0,
                "blimp_supplement_qa_congruence_tricky": 0,
                "blimp_supplement_subject_aux_inversion": 0,
                "blimp_supplement_turn_taking": 0,
                "blimp_tough_vs_raising_1_filtered": 0,
                "blimp_tough_vs_raising_2_filtered": 0,
                "blimp_transitive_filtered": 0,
                "blimp_wh_island_filtered": 0,
                "blimp_wh_questions_object_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_no_gap_filtered": 0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_with_gap_filtered": 0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
                "cola": 0,
                "hellaswag": 0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 0,
                "mathqa": 0,
                "mnli": 0,
                "mnli_mismatch": 0,
                "mrpc": 0,
                "openbookqa": 0,
                "piqa": 0,
                "qa4mre_2011": 0,
                "qa4mre_2012": 0,
                "qa4mre_2013": 0,
                "qnli": 0,
                "qqp": 0,
                "rte": 0,
                "sciq": 0,
                "squad_completion": 0,
                "sst2": 0,
                "swag": 0,
                "tinyGSM8k": 5,
                "tinyMMLU": 0,
                "tinyTruthfulQA": 0,
                "triviaqa": 0,
                "winogrande": 0,
                "wnli": 0,
                "wsc273": 0
            },
            "higher_is_better": {
                "arc_challenge": {
                    "acc": true,
                    "acc_norm": true
                },
                "arc_easy": {
                    "acc": true,
                    "acc_norm": true
                },
                "blimp_adjunct_island_filtered": {
                    "acc": true
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "acc": true
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_passive_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_trans_filtered": {
                    "acc": true
                },
                "blimp_causative_filtered": {
                    "acc": true
                },
                "blimp_complex_NP_island_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "acc": true
                },
                "blimp_drop_argument_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_object_raising_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "acc": true
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "acc": true
                },
                "blimp_inchoative_filtered": {
                    "acc": true
                },
                "blimp_intransitive_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "acc": true
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_npi_present_1_filtered": {
                    "acc": true
                },
                "blimp_npi_present_2_filtered": {
                    "acc": true
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_only_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_passive_1_filtered": {
                    "acc": true
                },
                "blimp_passive_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_c_command_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_3_filtered": {
                    "acc": true
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_sentential_subject_island_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_supplement_hypernym": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_easy": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "acc": true
                },
                "blimp_supplement_subject_aux_inversion": {
                    "acc": true
                },
                "blimp_supplement_turn_taking": {
                    "acc": true
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "acc": true
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "acc": true
                },
                "blimp_transitive_filtered": {
                    "acc": true
                },
                "blimp_wh_island_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "acc": true
                },
                "cola": {
                    "mcc": true
                },
                "hellaswag": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_into_the_unknown": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_memo_trap": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_modus_tollens": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_neqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_quote_repetition": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_redefine_math": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_repetitive_algebra": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_sig_figs": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_winobias_antistereotype": {
                    "acc": true,
                    "acc_norm": true
                },
                "lambada_openai": {
                    "perplexity": false,
                    "acc": true
                },
                "mathqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "mnli": {
                    "acc": true
                },
                "mnli_mismatch": {
                    "acc": true
                },
                "mrpc": {
                    "acc": true
                },
                "openbookqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "piqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2011": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2012": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2013": {
                    "acc": true,
                    "acc_norm": true
                },
                "qnli": {
                    "acc": true
                },
                "qqp": {
                    "acc": true
                },
                "rte": {
                    "acc": true
                },
                "sciq": {
                    "acc": true,
                    "acc_norm": true
                },
                "squad_completion": {
                    "contains": true
                },
                "sst2": {
                    "acc": true
                },
                "swag": {
                    "acc": true,
                    "acc_norm": true
                },
                "tinyGSM8k": {
                    "exact_match": true
                },
                "tinyMMLU": {
                    "acc_norm": true
                },
                "tinyTruthfulQA": {
                    "acc": true
                },
                "triviaqa": {
                    "exact_match": true
                },
                "winogrande": {
                    "acc": true
                },
                "wnli": {
                    "acc": true
                },
                "wsc273": {
                    "acc": true
                }
            },
            "n-samples": {
                "wsc273": {
                    "original": 273,
                    "effective": 273
                },
                "winogrande": {
                    "original": 1267,
                    "effective": 1267
                },
                "triviaqa": {
                    "original": 17944,
                    "effective": 17944
                },
                "tinyTruthfulQA": {
                    "original": 100,
                    "effective": 100
                },
                "tinyMMLU": {
                    "original": 100,
                    "effective": 100
                },
                "tinyGSM8k": {
                    "original": 100,
                    "effective": 100
                },
                "swag": {
                    "original": 20006,
                    "effective": 20006
                },
                "squad_completion": {
                    "original": 2984,
                    "effective": 2984
                },
                "sciq": {
                    "original": 1000,
                    "effective": 1000
                },
                "qa4mre_2011": {
                    "original": 120,
                    "effective": 120
                },
                "qa4mre_2013": {
                    "original": 284,
                    "effective": 284
                },
                "qa4mre_2012": {
                    "original": 160,
                    "effective": 160
                },
                "piqa": {
                    "original": 1838,
                    "effective": 1838
                },
                "openbookqa": {
                    "original": 500,
                    "effective": 500
                },
                "mathqa": {
                    "original": 2985,
                    "effective": 2985
                },
                "lambada_openai": {
                    "original": 5153,
                    "effective": 5153
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "original": 315,
                    "effective": 315
                },
                "inverse_scaling_repetitive_algebra": {
                    "original": 1000,
                    "effective": 1000
                },
                "inverse_scaling_quote_repetition": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_winobias_antistereotype": {
                    "original": 412,
                    "effective": 412
                },
                "inverse_scaling_neqa": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_memo_trap": {
                    "original": 936,
                    "effective": 936
                },
                "inverse_scaling_sig_figs": {
                    "original": 20897,
                    "effective": 20897
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "original": 1428,
                    "effective": 1428
                },
                "inverse_scaling_modus_tollens": {
                    "original": 1236,
                    "effective": 1236
                },
                "inverse_scaling_redefine_math": {
                    "original": 900,
                    "effective": 900
                },
                "inverse_scaling_into_the_unknown": {
                    "original": 1824,
                    "effective": 1824
                },
                "hellaswag": {
                    "original": 10042,
                    "effective": 10042
                },
                "mrpc": {
                    "original": 408,
                    "effective": 408
                },
                "qnli": {
                    "original": 5463,
                    "effective": 5463
                },
                "rte": {
                    "original": 277,
                    "effective": 277
                },
                "wnli": {
                    "original": 71,
                    "effective": 71
                },
                "mnli_mismatch": {
                    "original": 9832,
                    "effective": 9832
                },
                "mnli": {
                    "original": 9815,
                    "effective": 9815
                },
                "qqp": {
                    "original": 40430,
                    "effective": 40430
                },
                "sst2": {
                    "original": 872,
                    "effective": 872
                },
                "cola": {
                    "original": 1043,
                    "effective": 1043
                },
                "blimp_supplement_subject_aux_inversion": {
                    "original": 3867,
                    "effective": 3867
                },
                "blimp_supplement_qa_congruence_easy": {
                    "original": 64,
                    "effective": 64
                },
                "blimp_supplement_hypernym": {
                    "original": 842,
                    "effective": 842
                },
                "blimp_supplement_turn_taking": {
                    "original": 280,
                    "effective": 280
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "original": 165,
                    "effective": 165
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "original": 802,
                    "effective": 802
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "original": 947,
                    "effective": 947
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_only_npi_scope_filtered": {
                    "original": 837,
                    "effective": 837
                },
                "blimp_principle_A_domain_1_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_sentential_subject_island_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_npi_present_2_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_principle_A_domain_3_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_transitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_animate_subject_passive_filtered": {
                    "original": 895,
                    "effective": 895
                },
                "blimp_npi_present_1_filtered": {
                    "original": 909,
                    "effective": 909
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "original": 942,
                    "effective": 942
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "original": 951,
                    "effective": 951
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "original": 759,
                    "effective": 759
                },
                "blimp_drop_argument_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "original": 930,
                    "effective": 930
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "original": 890,
                    "effective": 890
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "original": 933,
                    "effective": 933
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "original": 859,
                    "effective": 859
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "original": 924,
                    "effective": 924
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "original": 910,
                    "effective": 910
                },
                "blimp_inchoative_filtered": {
                    "original": 855,
                    "effective": 855
                },
                "blimp_passive_1_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_animate_subject_trans_filtered": {
                    "original": 923,
                    "effective": 923
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "original": 820,
                    "effective": 820
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "original": 911,
                    "effective": 911
                },
                "blimp_adjunct_island_filtered": {
                    "original": 928,
                    "effective": 928
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "original": 898,
                    "effective": 898
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "original": 804,
                    "effective": 804
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "original": 945,
                    "effective": 945
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "original": 949,
                    "effective": 949
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "original": 979,
                    "effective": 979
                },
                "blimp_passive_2_filtered": {
                    "original": 903,
                    "effective": 903
                },
                "blimp_principle_A_domain_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "original": 892,
                    "effective": 892
                },
                "blimp_existential_there_object_raising_filtered": {
                    "original": 812,
                    "effective": 812
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "original": 788,
                    "effective": 788
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "original": 882,
                    "effective": 882
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "original": 828,
                    "effective": 828
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "original": 681,
                    "effective": 681
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "original": 971,
                    "effective": 971
                },
                "blimp_principle_A_c_command_filtered": {
                    "original": 946,
                    "effective": 946
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "original": 857,
                    "effective": 857
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_complex_NP_island_filtered": {
                    "original": 846,
                    "effective": 846
                },
                "blimp_principle_A_case_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "original": 875,
                    "effective": 875
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "original": 906,
                    "effective": 906
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "original": 948,
                    "effective": 948
                },
                "blimp_principle_A_case_1_filtered": {
                    "original": 912,
                    "effective": 912
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "original": 718,
                    "effective": 718
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "original": 861,
                    "effective": 861
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "original": 986,
                    "effective": 986
                },
                "blimp_intransitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_wh_island_filtered": {
                    "original": 960,
                    "effective": 960
                },
                "blimp_causative_filtered": {
                    "original": 818,
                    "effective": 818
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "original": 967,
                    "effective": 967
                },
                "arc_easy": {
                    "original": 2376,
                    "effective": 2376
                },
                "arc_challenge": {
                    "original": 1172,
                    "effective": 1172
                }
            },
            "config": {
                "model": "modis",
                "model_args": "pretrained=evo_exp_full_a/31M/cachegpt_31M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
                "model_num_parameters": 13312000,
                "model_dtype": "torch.bfloat16",
                "model_revision": "main",
                "batch_size": "auto",
                "batch_sizes": [
                    64
                ],
                "device": null,
                "use_cache": null,
                "limit": null,
                "bootstrap_iters": 100000,
                "gen_kwargs": null,
                "random_seed": 0,
                "numpy_seed": 1234,
                "torch_seed": 1234,
                "fewshot_seed": 1234
            },
            "date": 1730931432.6708252,
            "tokenizer_pad_token": [
                "</s>",
                "2"
            ],
            "tokenizer_eos_token": [
                "</s>",
                "2"
            ],
            "tokenizer_bos_token": [
                "<s>",
                "1"
            ],
            "eot_token_id": 2,
            "max_length": 2048,
            "task_hashes": {},
            "model_source": "modis",
            "model_name": "evo_exp_full_a/31M/cachegpt_31M",
            "model_name_sanitized": "evo_exp_full_a__31M__cachegpt_31M",
            "system_instruction": null,
            "system_instruction_sha": null,
            "fewshot_as_multiturn": false,
            "chat_template": null,
            "chat_template_sha": null,
            "start_time": 3558606.025516652,
            "end_time": 3558830.402311685,
            "total_evaluation_time_seconds": "224.37679503299296"
        }
    }
}