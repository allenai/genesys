{
    "scale": "31M",
    "verification_report": {
        "wandb_ids.json": {
            "pretrain": {
                "id": "8e14v6e8",
                "name": "evo_exp_full_a_hieraroute_gpt_31M_20241106173519"
            },
            "project": "model_discovery",
            "entity": "aristo",
            "evaluate": {
                "name": "evo_exp_full_a_hieraroute_gpt_31M_eval_20241106174315"
            }
        },
        "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,49.84782138,6.0117,8.75,0.0007142857142857143,9.675546668386763e-05,1730943369.6850977,15\n1,51.371091799,5.0922,7.59375,0.0009523809523809524,0.00012900728891182352,1730943371.208459,20\n2,52.882910887,3.8066,4.28125,0.000999964111912758,0.0001612591111397794,1730943372.7202966,25\n3,54.434961616,3.0432,1.25,0.0009998183263688746,0.00019351093336773527,1730943374.2723055,30\n4,55.973056594,2.8516,0.375,0.0009995604366677606,0.00022576275559569117,1730943375.8104324,35\n5,57.51093338,2.723,0.294921875,0.000999190507080936,0.00025801457782364704,1730943377.3483202,40\n6,59.05912054,2.6861,0.1630859375,0.000998708629802609,0.0002902664000516029,1730943378.8964868,45\n7,60.613932778,2.5949,0.51171875,0.0009981149249267,0.0003225182222795588,1730943380.4512765,50\n8,62.307162501,2.4594,0.15234375,0.0009974095404169105,0.00035477004450751466,1730943382.1445086,55\n9,63.874483423,2.4059,0.1298828125,0.0009965926520698492,0.00038702186673547054,1730943383.7118492,60\n10,65.452346812,2.509,0.11376953125,0.0009956644634712174,0.0004192736889634264,1730943385.2897272,65\n11,67.025433064,2.4182,0.125,0.0009946252059450733,0.00045152551119138234,1730943386.8628073,70\n12,68.620454932,2.4725,0.11962890625,0.0009934751384961804,0.0004837773334193382,1730943388.4578245,75\n13,70.234312898,2.4797,0.1328125,0.0009922145477454572,0.0005160291556472941,1730943390.0716233,80\n14,71.84127515,2.3582,0.1337890625,0.000990843747858547,0.0005482809778752499,1730943391.6786292,85\n15,73.443774197,2.3873,0.107421875,0.00098936308046752,0.0005805328001032058,1730943393.281144,90\n16,75.042145613,2.3996,0.115234375,0.0009877729145857316,0.0006127846223311618,1730943394.8795204,95\n17,76.631290071,2.2523,0.10498046875,0.0009860736465158572,0.0006450364445591176,1730943396.468622,100\n18,78.371657347,2.3031,0.10986328125,0.000984265699751124,0.0006772882667870735,1730943398.2089987,105\n19,79.978470824,2.384,0.11181640625,0.0009823495248697694,0.0007095400890150293,1730943399.815811,110\n20,81.602891374,2.2313,0.11865234375,0.000980325599422745,0.0007417919112429853,1730943401.4402485,115\n21,83.233864116,2.298,0.1005859375,0.000978194427814704,0.0007740437334709411,1730943403.0712323,120\n22,84.899505005,2.2705,0.119140625,0.0009759565411782899,0.000806295555698897,1730943404.7368417,125\n23,86.552951797,2.2281,0.09912109375,0.0009736124972417694,0.0008385473779268528,1730943406.3902538,130\n24,88.236281973,2.2297,0.1025390625,0.0009711628801900334,0.0008707992001548088,1730943408.0736122,135\n25,89.872420247,2.1152,0.103515625,0.0009686083005190067,0.0009030510223827647,1730943409.7097974,140\n26,91.528286462,2.2031,0.109375,0.0009659493948834994,0.0009353028446107205,1730943411.3656223,145\n27,93.223199606,2.1963,0.107421875,0.000963186825938539,0.0009675546668386764,1730943413.06057,150\n28,95.037716196,2.1654,0.09521484375,0.0009603212821742229,0.0009998064890666322,1730943414.8750327,155\n29,96.712152866,2.2758,0.08935546875,0.0009573534777441323,0.0010320583112945882,1730943416.5494816,160\n30,98.37483589,2.2242,0.09521484375,0.0009542841522873502,0.001064310133522544,1730943418.2121553,165\n31,100.070918638,2.1877,0.1025390625,0.0009511140707441283,0.0010965619557504998,1730943419.908323,170\n32,101.768642337,2.1918,0.09765625,0.0009478440231652464,0.0011288137779784557,1730943421.6060197,175\n33,103.50809204,2.1332,0.10009765625,0.000944474824515117,0.0011610656002064117,1730943423.3454323,180\n34,105.180650741,2.1486,0.099609375,0.000941007314468678,0.0011933174224343676,1730943425.0180044,185\n35,106.906182987,2.1623,0.1025390625,0.0009374423572021278,0.0012255692446623235,1730943426.7435591,190\n36,108.607300984,2.1951,0.0888671875,0.0009337808411775559,0.0012578210668902792,1730943428.4446783,195\n37,110.345753936,2.1594,0.09326171875,0.0009300236789215177,0.0012900728891182352,1730943430.183121,200\n38,112.234548371,2.185,0.099609375,0.0009261718067976156,0.001322324711346191,1730943432.071881,205\n39,114.006783555,2.1873,0.0947265625,0.0009222261847731359,0.001354576533574147,1730943433.8441603,210\n40,115.726342495,2.1469,0.09375,0.0009181877961798058,0.0013868283558021027,1730943435.5637136,215\n41,117.452601094,2.1451,0.09033203125,0.0009140576474687263,0.0014190801780300587,1730943437.2899761,220\n42,119.190587508,2.2484,0.1015625,0.0009098367679595436,0.0014513320002580146,1730943439.0279622,225\n43,120.900372831,2.1994,0.0908203125,0.0009055262095839209,0.0014835838224859705,1730943440.7377396,230\n44,122.638933282,2.1246,0.0810546875,0.0009011270466233745,0.0015158356447139264,1730943442.4763176,235\n45,124.415472456,2.1756,0.09619140625,0.0008966403754415417,0.0015480874669418822,1730943444.2528632,240\n46,126.173196327,2.1979,0.08349609375,0.0008920673142109422,0.001580339289169838,1730943446.0105624,245\n47,127.914699602,2.1727,0.08935546875,0.0008874090026343081,0.001612591111397794,1730943447.7520897,250\n48,129.831440419,2.2518,0.09619140625,0.0008826666016605435,0.00164484293362575,1730943449.6688247,255\n49,131.615133135,2.1922,0.09716796875,0.0008778412931953945,0.0016770947558537056,1730943451.452502,260\n50,133.40307685,2.1684,0.0830078125,0.0008729342798068918,0.0017093465780816616,1730943453.2403991,265\n51,135.188774546,2.1293,0.08935546875,0.0008679467844256455,0.0017415984003096175,1730943455.0261054,270\n52,136.995030098,2.1762,0.0859375,0.0008628800500400661,0.0017738502225375734,1730943456.8323858,275\n53,138.809917699,2.2447,0.0869140625,0.0008577353393865849,0.0018061020447655294,1730943458.6473033,280\n54,140.624785776,2.2313,0.09716796875,0.0008525139346349539,0.001838353866993485,1730943460.4621532,285\n55,142.432437534,2.1336,0.083984375,0.0008472171370687024,0.001870605689221441,1730943462.2697945,290\n56,144.298827753,2.1854,0.08740234375,0.0008418462667608296,0.001902857511449397,1730943464.136212,295\n57,146.11681512,2.1479,0.0849609375,0.0008364026622448147,0.0019351093336773529,1730943465.9541817,300\n58,148.522870551,2.1324,0.0888671875,0.0008308876801810269,0.0019673611559053086,1730943468.36026,305\n59,151.934731711,2.1064,0.08544921875,0.0008253026950186161,0.0019996129781332645,1730943471.772115,310\n60,153.767776503,2.1186,0.07958984375,0.0008196490986529722,0.0020318648003612204,1730943473.6051676,315\n61,155.675713938,2.1363,0.0810546875,0.0008139283000788356,0.0020641166225891763,1730943475.513104,320\n62,157.521469051,2.0668,0.080078125,0.0008081417250391453,0.0020963684448171323,1730943477.3588483,325\n63,159.34494918,2.1,0.083984375,0.0008022908156697152,0.002128620267045088,1730943479.182338,330\n64,161.15681212,2.1287,0.08544921875,0.0007963770301398227,0.002160872089273044,1730943480.9942021,335\n65,163.008440258,2.0807,0.08349609375,0.0007904018422888028,0.0021931239115009996,1730943482.845831,340\n66,164.862861363,2.2293,0.07958984375,0.0007843667412587349,0.0022253757337289556,1730943484.7002182,345\n67,166.767659671,2.1877,0.07958984375,0.0007782732311233207,0.0022576275559569115,1730943486.6050422,350\n68,168.813054184,2.1197,0.08544921875,0.0007721228305130341,0.0022898793781848674,1730943488.6504297,355\n69,170.631897635,2.0197,0.07470703125,0.0007659170722366482,0.0023221312004128233,1730943490.4692767,360\n70,172.563645592,2.0912,0.07421875,0.0007596575028992275,0.0023543830226407793,1730943492.400976,365\n71,174.44378212,2.0881,0.08447265625,0.0007533456825166806,0.002386634844868735,1730943494.2811632,370\n72,176.307853318,2.0715,0.08154296875,0.0007469831841269727,0.002418886667096691,1730943496.1452336,375\n73,178.198540794,2.0746,0.08544921875,0.0007405715933980894,0.002451138489324647,1730943498.0359185,380\n74,180.083152445,2.0809,0.07861328125,0.000734112508232858,0.0024833903115526025,1730943499.9205368,385\n75,182.011247191,2.0939,0.076171875,0.0007276075383707141,0.0025156421337805585,1730943501.8486278,390\n76,183.99957828,2.1037,0.08740234375,0.0007210583049865222,0.0025478939560085144,1730943503.8369818,395\n77,185.94668505,2.1232,0.07470703125,0.0007144664402865438,0.0025801457782364703,1730943505.7840557,400\n78,188.071440558,2.0551,0.08544921875,0.000707833587101659,0.0026123976004644263,1730943507.9088333,405\n79,189.970119169,2.0348,0.083984375,0.0007011613984779369,0.002644649422692382,1730943509.8075068,410\n80,191.928502725,2.1324,0.08251953125,0.0006944515372646629,0.002676901244920338,1730943511.7658646,415\n81,193.893168331,2.1092,0.0830078125,0.0006877056756999218,0.002709153067148294,1730943513.7305596,420\n82,195.843269015,2.1354,0.0849609375,0.0006809254949938397,0.00274140488937625,1730943515.6806567,425\n83,197.795631789,2.0582,0.07861328125,0.0006741126849095935,0.0027736567116042055,1730943517.6330128,430\n84,199.704471868,2.1512,0.09033203125,0.0006672689433422847,0.0028059085338321614,1730943519.5418537,435\n85,201.583861117,2.2141,0.076171875,0.000660395975895788,0.0028381603560601173,1730943521.4212477,440\n86,203.520485923,2.1846,0.080078125,0.0006534954954576815,0.0028704121782880732,1730943523.3578558,445\n87,205.469240719,2.075,0.0791015625,0.0006465692217723562,0.002902664000516029,1730943525.3065965,450\n88,207.614322148,2.1355,0.08544921875,0.0006396188810124222,0.002934915822743985,1730943527.451709,455\n89,209.616200219,2.0965,0.07275390625,0.0006326462053485079,0.002967167644971941,1730943529.4535203,460\n90,211.619607954,2.0812,0.07421875,0.0006256529325175693,0.002999419467199897,1730943531.4569926,465\n91,213.496454824,2.1211,0.07861328125,0.0006186408053898073,0.003031671289427853,1730943533.3338375,470\n92,215.486144886,2.2145,0.07763671875,0.0006116115715343092,0.0030639231116558084,1730943535.3235323,475\n93,217.47894474,2.1225,0.07421875,0.0006045669827835177,0.0030961749338837643,1730943537.316331,480\n94,219.456676484,2.0549,0.07958984375,0.0005975087947966368,0.0031284267561117202,1730943539.294067,485\n95,221.440168686,2.1002,0.0771484375,0.0005904387666220856,0.003160678578339676,1730943541.2775495,490\n96,223.522905997,2.1652,0.08154296875,0.0005833586602591064,0.003192930400567632,1730943543.360276,495\n97,225.621355966,2.0707,0.07666015625,0.0005762702402186365,0.003225182222795588,1730943545.4587588,500\n98,227.856261264,2.1479,0.07763671875,0.000569175273083557,0.003257434045023544,1730943547.6936512,505\n99,229.894194266,2.0414,0.07177734375,0.0005620755270684213,0.0032896858672515,1730943549.7315552,510\n100,231.826996077,2.1285,0.0791015625,0.0005549727715787808,0.003321937689479456,1730943551.6643827,515\n101,233.914710003,2.1068,0.07763671875,0.00054786877677021,0.0033541895117074113,1730943553.7520647,520\n102,235.917078049,2.1367,0.07470703125,0.0005407653131071488,0.0033864413339353672,1730943555.7544067,525\n103,237.960278904,2.2215,0.0849609375,0.0005336641509216634,0.003418693156163323,1730943557.7976594,530\n104,239.994598064,2.067,0.07470703125,0.0005265670599722442,0.003450944978391279,1730943559.8319824,535\n105,242.111482742,2.1064,0.07470703125,0.0005194758090027443,0.003483196800619235,1730943561.9488437,540\n106,244.195840612,2.0811,0.07861328125,0.0005123921653015707,0.003515448622847191,1730943564.0332165,545\n107,246.267673779,2.0861,0.07763671875,0.0005053178942612407,0.003547700445075147,1730943566.105054,550\n108,248.476331232,2.1006,0.072265625,0.0004982547589384071,0.003579952267303103,1730943568.3137085,555\n109,250.596957075,2.1596,0.08154296875,0.0004912045196144684,0.0036122040895310587,1730943570.434339,560\n110,252.66816218,2.1295,0.072265625,0.00048416893335687084,0.003644455911759014,1730943572.5055466,565\n111,254.796401431,2.1549,0.07421875,0.00047714975358120813,0.00367670773398697,1730943574.633794,570\n112,256.867299122,2.1572,0.0908203125,0.0004701487296142358,0.003708959556214926,1730943576.7046952,575\n113,258.920240741,2.1252,0.08203125,0.0004631676062579001,0.003741211378442882,1730943578.7575955,580\n114,261.067742708,2.0986,0.076171875,0.0004562081233544989,0.003773463200670838,1730943580.9050765,585\n115,263.186656546,2.0602,0.07470703125,0.00044927201535307473,0.003805715022898794,1730943583.0240362,590\n116,265.273479507,2.1758,0.08349609375,0.0004423610108771553,0.0038379668451267498,1730943585.1108437,595\n117,267.411927731,2.0904,0.0712890625,0.00043547683229394266,0.0038702186673547057,1730943587.2493052,600\n118,269.716785037,2.0148,0.07763671875,0.0004286211952850647,0.0039024704895826616,1730943589.5541508,605\n119,271.828773655,2.0912,0.0732421875,0.00042179580841899026,0.003934722311810617,1730943591.666143,610\n120,273.971312933,2.0898,0.07666015625,0.000415002372725218,0.0039669741340385735,1730943593.808692,615\n121,276.120891634,2.0717,0.08642578125,0.0004082425812703456,0.003999225956266529,1730943595.9582787,620\n122,278.338559908,2.1187,0.0732421875,0.00040151811873612034,0.004031477778494485,1730943598.175972,625\n123,280.486364785,2.0779,0.07421875,0.000394830660999582,0.004063729600722441,1730943600.3237526,630\n124,282.64098646,2.2555,0.080078125,0.000388181874715399,0.004095981422950396,1730943602.4783564,635\n125,284.77772227,2.1299,0.07080078125,0.00038157341690050285,0.004128233245178353,1730943604.6150975,640\n126,287.052062213,2.0838,0.068359375,0.00037500693452112546,0.004160485067406308,1730943606.8894563,645\n127,289.372391047,2.0201,0.07275390625,0.00036848406408233994,0.0041927368896342646,1730943609.2097676,650\n128,291.75463058,2.1145,0.07470703125,0.00036200643122020993,0.00422498871186222,1730943611.5919945,655\n129,293.930493253,2.1723,0.0751953125,0.00035557565029664554,0.004257240534090176,1730943613.7678738,660\n130,296.131525945,2.0963,0.072265625,0.0003491933239970725,0.004289492356318132,1730943615.9683576,665\n131,298.338502072,2.0936,0.07470703125,0.0003428610429310082,0.004321744178546088,1730943618.1758814,670\n132,300.526249871,2.0893,0.06982421875,0.00033658038523564883,0.004353996000774044,1730943620.3636355,675\n133,302.760828203,2.1357,0.07568359375,0.0003303529161825638,0.004386247823001999,1730943622.598221,680\n134,304.939737349,2.077,0.0771484375,0.00032418018778759784,0.004418499645229956,1730943624.777099,685\n135,307.165959829,2.0984,0.080078125,0.00031806373842407665,0.004450751467457911,1730943627.0033677,690\n136,309.403722892,2.1131,0.07080078125,0.00031200509243941085,0.0044830032896858675,1730943629.2405512,695\n137,311.660575317,2.1414,0.08349609375,0.0003060057597751977,0.004515255111913823,1730943631.4979322,700\n138,314.112155431,2.1146,0.0859375,0.0003000672355909111,0.004547506934141779,1730943633.9495373,705\n139,316.335363052,2.1342,0.06982421875,0.0002941909998912768,0.004579758756369735,1730943636.17269,710\n140,318.686624075,2.1418,0.07080078125,0.0002883785171574249,0.004612010578597691,1730943638.524006,715\n141,321.035194157,2.0953,0.0703125,0.0002826312359819096,0.004644262400825647,1730943640.8725746,720\n142,323.243997254,2.1781,0.07373046875,0.0002769505887076894,0.004676514223053602,1730943643.081406,725\n143,325.534284488,2.0982,0.0791015625,0.00027133799107115854,0.0047087660452815585,1730943645.3716793,730\n144,327.814025168,2.1035,0.0732421875,0.00026579484184931386,0.004741017867509514,1730943647.6514056,735\n145,330.055562083,2.0504,0.068359375,0.0002603225225111521,0.00477326968973747,1730943649.892949,740\n146,332.342257534,2.0932,0.0751953125,0.0002549223968733779,0.004805521511965426,1730943652.1796181,745\n147,334.821298707,2.143,0.07275390625,0.0002495958107605118,0.004837773334193382,1730943654.658679,750\n148,337.255697833,2.1135,0.07373046875,0.0002443440916694837,0.004870025156421338,1730943657.093101,755\n149,339.576064804,2.0516,0.0703125,0.00023916854843879134,0.004902276978649294,1730943659.413424,760\n150,341.872711347,2.124,0.07568359375,0.00023407047092231169,0.00493452880087725,1730943661.7100587,765\n151,344.0629862,2.0814,0.07080078125,0.00022905112966784151,0.004966780623105205,1730943663.9003284,770\n152,346.350974887,2.0885,0.07373046875,0.00022411177560045003,0.0049990324453331614,1730943666.1883368,775\n153,348.804754821,2.002,0.072265625,0.00021925363971072323,0.005031284267561117,1730943668.642161,780\n154,351.149317232,2.1549,0.07275390625,0.00021447793274797372,0.005063536089789073,1730943670.9866648,785\n155,353.417544881,2.1211,0.07177734375,0.00020978584491849805,0.005095787912017029,1730943673.2549298,790\n156,355.727056636,2.0367,0.07177734375,0.00020517854558895157,0.005128039734244985,1730943675.5644116,795\n157,357.994096838,2.1469,0.0693359375,0.00020065718299491748,0.005160291556472941,1730943677.831476,800\n158,360.56147207,2.1301,0.07421875,0.00019622288395474346,0.005192543378700897,1730943680.3988562,805\n159,362.941549515,2.0238,0.0771484375,0.00019187675358871376,0.0052247952009288525,1730943682.7788846,810\n160,365.27998642,2.1102,0.0703125,0.00018761987504363093,0.005257047023156808,1730943685.117384,815\n161,367.61544637,2.117,0.0732421875,0.00018345330922287274,0.005289298845384764,1730943687.4528506,820\n162,370.015843903,2.1227,0.0703125,0.00017937809452199207,0.00532155066761272,1730943689.8532035,825\n163,372.350631396,2.0949,0.07421875,0.0001753952465699283,0.005353802489840676,1730943692.18795,830\n164,374.747869473,2.024,0.068359375,0.00017150575797589003,0.005386054312068632,1730943694.5852528,835\n165,377.218591451,2.0467,0.07177734375,0.00016771059808197702,0.005418306134296588,1730943697.0559783,840\n166,379.755862062,2.1484,0.0712890625,0.00016401071272159894,0.005450557956524544,1730943699.593233,845\n167,382.206550392,2.0715,0.0703125,0.00016040702398375457,0.0054828097787525,1730943702.0439196,850\n168,384.746750345,2.0795,0.07421875,0.00015690042998322764,0.005515061600980455,1730943704.5841355,855\n169,387.165656914,2.1033,0.0751953125,0.00015349180463675784,0.005547313423208411,1730943707.003052,860\n170,389.698635853,2.0738,0.07080078125,0.00015018199744524217,0.005579565245436367,1730943709.5359824,865\n171,392.083378666,2.0984,0.07421875,0.00014697183328202164,0.005611817067664323,1730943711.9207659,870\n172,394.664449642,2.0156,0.0732421875,0.00014386211218730605,0.005644068889892279,1730943714.5018213,875\n173,397.13688525,2.1572,0.0732421875,0.00014085360916878638,0.005676320712120235,1730943716.9742498,880\n174,399.716263102,2.0975,0.06982421875,0.0001379470740084873,0.005708572534348191,1730943719.5536494,885\n175,402.139249111,2.0494,0.06884765625,0.0001351432310759053,0.0057408243565761465,1730943721.9766717,890\n176,404.590478428,2.0688,0.072265625,0.00013244277914748075,0.005773076178804103,1730943724.4278338,895\n177,407.122103172,2.0906,0.0693359375,0.00012984639123244843,0.005805328001032058,1730943726.9594347,900\n178,409.793873736,2.0641,0.06982421875,0.00012735471440510922,0.005837579823260014,1730943729.6312706,905\n179,412.17565731,2.1285,0.0693359375,0.0001249683696435658,0.00586983164548797,1730943732.0130224,910\n180,414.583371971,2.0654,0.0771484375,0.00012268795167496164,0.005902083467715926,1730943734.4207456,915\n181,417.063471056,2.1854,0.07470703125,0.00012051402882726269,0.005934335289943882,1730943736.9008124,920\n182,419.577331072,2.0836,0.0703125,0.00011844714288761824,0.0059665871121718375,1730943739.414693,925\n183,421.96539056,2.1369,0.07373046875,0.00011648780896733607,0.005998838934399794,1730943741.8027706,930\n184,424.500711926,2.026,0.07373046875,0.00011463651537350614,0.006031090756627749,1730943744.3381011,935\n185,427.011366031,2.1377,0.07666015625,0.00011289372348730345,0.006063342578855706,1730943746.8487418,940\n186,429.519491432,2.1016,0.0751953125,0.00011125986764900337,0.006095594401083661,1730943749.3568842,945\n187,432.081424052,2.0801,0.06884765625,0.00010973535504973395,0.006127846223311617,1730943751.918803,950\n188,434.763007614,2.168,0.07421875,0.00010832056562999605,0.006160098045539573,1730943754.6003802,955\n189,437.189896625,2.135,0.0712890625,0.00010701585198497347,0.006192349867767529,1730943757.0272958,960\n190,439.678223203,2.0707,0.0712890625,0.00010582153927665954,0.006224601689995485,1730943759.5156095,965\n191,442.214968197,2.1109,0.07373046875,0.00010473792515281961,0.0062568535122234405,1730943762.0523543,970\n192,444.959190799,2.1496,0.07275390625,0.0001037652796728109,0.006289105334451397,1730943764.7965517,975\n193,447.462491752,2.0777,0.07470703125,0.00010290384524027827,0.006321357156679352,1730943767.2998805,980\n194,450.057770741,2.093,0.07861328125,0.00010215383654274204,0.006353608978907309,1730943769.8951342,985\n195,452.563159282,2.0758,0.06982421875,0.00010151544049809325,0.006385860801135264,1730943772.4004755,990\n196,455.115880393,2.0863,0.0771484375,0.00010098881620801006,0.00641811262336322,1730943774.9532595,995\n197,457.634159437,2.1254,0.072265625,0.00010057409491830603,0.006450364445591176,1730943777.471554,1000\n198,460.40097984,2.0582,0.0703125,0.00010027137998622113,0.0064826162678191315,1730943780.2383687,1005\n199,462.954250355,2.1035,0.072265625,0.00010008074685466265,0.006514868090047088,1730943782.7916217,1010\n200,465.519602153,2.1545,0.0751953125,0.00010000224303340362,0.006547119912275043,1730943785.3569984,1015\n201,468.305910494,,,,0.006553570276720635,1730943788.1433191,1016\n",
        "system_metrics.csv": "system.memory_percent,_runtime,Process Memory In Use (non-swap) (%),Process CPU Utilization (%),Process CPU Threads In Use,system.gpu.1.correctedMemoryErrors,system.gpu.1.pcieLinkGen,system.gpu.3.correctedMemoryErrors,system.gpu.4.uncorrectedMemoryErrors,system.gpu.7.pcieLinkGen,GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),system.gpu.0.smClock,system.gpu.3.pcieLinkGen,system.gpu.7.uncorrectedMemoryErrors,system.gpu.5.smClock,system.gpu.7.correctedMemoryErrors,GPU 6 Time Spent Accessing Memory (%),GPU 7 Utilization (%),system.gpu.3.uncorrectedMemoryErrors,system.gpu.7.smClock,system.gpu.2.correctedMemoryErrors,system.gpu.7.memoryClock,GPU 2 Time Spent Accessing Memory (%),system.gpu.3.memoryClock,GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),system.gpu.4.enforcedPowerLimitWatts,system.gpu.0.correctedMemoryErrors,system.gpu.1.memoryClock,GPU 6 Memory Allocated (%),system.gpu.1.uncorrectedMemoryErrors,GPU 1 Memory Allocated (%),system.gpu.6.pcieLinkGen,system.gpu.5.enforcedPowerLimitWatts,system.gpu.3.smClock,system.gpu.1.enforcedPowerLimitWatts,system.gpu.4.correctedMemoryErrors,GPU 4 Memory Allocated (%),system.gpu.4.memoryClock,GPU 1 Utilization (%),system.gpu.7.enforcedPowerLimitWatts,system.gpu.4.smClock,system.gpu.0.pcieLinkGen,system.gpu.6.correctedMemoryErrors,GPU 4 Utilization (%),system.gpu.2.enforcedPowerLimitWatts,GPU 2 Memory Allocated (%),GPU 5 Utilization (%),system.gpu.6.smClock,system.gpu.2.smClock,system.gpu.0.uncorrectedMemoryErrors,GPU 5 Memory Allocated (%),system.gpu.2.memoryClock,system.gpu.5.uncorrectedMemoryErrors,GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),system.gpu.5.pcieLinkGen,system.gpu.4.pcieLinkGen,system.gpu.2.uncorrectedMemoryErrors,system.gpu.3.enforcedPowerLimitWatts,system.gpu.6.uncorrectedMemoryErrors,system.gpu.5.memoryClock,system.gpu.2.pcieLinkGen,GPU 0 Memory Allocated (%),system.gpu.0.memoryClock,system.gpu.0.enforcedPowerLimitWatts,system.gpu.5.correctedMemoryErrors,GPU 7 Time Spent Accessing Memory (%),GPU 6 Utilization (%),system.gpu.6.enforcedPowerLimitWatts,system.gpu.6.memoryClock,system.gpu.1.smClock,GPU 7 Memory Allocated (%)\n2.630012014874581,10.25383651,0.1529643192496474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.254756322,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.256156273,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.285795704,,0.3986150695262343,170.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.29088591,,,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,1.0,10.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,10.408390856994009,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197\n,20.252610109,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.526543494242342,20.252701447,0.1529643192496474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.253697437,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.277010759,,0.3017812974524672,170.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.286746859,,,,0.0,4.0,0.0,0.0,4.0,63.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.667659763827386,350.0,0.0,9000.0,2.667659763827386,0.0,2.667659763827386,4.0,350.0,2520.0,350.0,0.0,2.593855821828601,9000.0,37.0,350.0,2520.0,4.0,0.0,0.0,350.0,2.667659763827386,100.0,2520.0,2520.0,0.0,2.667659763827386,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.282490014760787,9000.0,350.0,0.0,0.0,22.0,350.0,9000.0,2520.0,2.624245680298689\n,30.253026286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n2.525588880716038,30.253558035,0.1529980115808265,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.254887608,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.277486174,,0.2465838778689488,44.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.297593432,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,315.0,0.0,0.0,0.0,0.0,210.0,0.0,9000.0,0.0,9000.0,0.0,0.0,1.0,7.0,1.0309488147955197,350.0,0.0,9000.0,1.0309488147955197,0.0,1.0309488147955197,4.0,350.0,210.0,350.0,0.0,1.0309488147955197,9000.0,0.0,350.0,330.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,255.0,0.0,1.0309488147955197,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,3.40135777546236,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,315.0,1.0309488147955197\n,40.252664604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n3.118044674872733,40.252791171,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.254155553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.277153862,,0.20638666875174405,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.283422814,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.120642311365807,350.0,0.0,9000.0,2.029472735955544,0.0,2.120642311365807,4.0,350.0,2520.0,350.0,0.0,2.120642311365807,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,2.120642311365807,0.0,2520.0,2520.0,0.0,2.120642311365807,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,9.813617912650864,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,2.120642311365807\n4.834941137055682,50.252854805,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.252878424,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.254289365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.276583329,,0.17750383677763767,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.304114315,,,,0.0,4.0,0.0,0.0,4.0,65.0,31.0,2520.0,4.0,0.0,2520.0,0.0,47.0,70.0,0.0,2520.0,0.0,9000.0,51.0,9000.0,68.0,35.0,46.0,43.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,45.0,350.0,2505.0,4.0,0.0,35.0,350.0,49.337799557176346,62.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,52.0,47.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,77.0,88.0,350.0,9000.0,2520.0,49.29438547364765\n,60.252827399,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.864686544135078,60.252885588,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.254172301,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.276741200000004,,0.15570056803982915,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.30268405,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,99.0,100.0,100.0,97.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,49.337799557176346,97.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n,70.25281257,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.883756025016927,70.252923328,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.25378422,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.278236371,,0.1386861265118714,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.286774046,,,,0.0,4.0,0.0,0.0,4.0,99.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,94.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,49.337799557176346,100.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,49.29438547364765\n4.890084504795814,80.252701217,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.252960402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.254308595,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.276779636,,0.12503943411499566,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.29908876,,,,0.0,4.0,0.0,0.0,4.0,7.0,21.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,2.0,9000.0,0.0,34.0,23.0,27.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,37.0,350.0,2520.0,4.0,0.0,25.0,350.0,49.337799557176346,35.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,7.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,4.0,350.0,9000.0,2520.0,49.29438547364765\n,90.252970117,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.906134547099185,90.253074475,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.255005785,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.277160703,,0.11385010449470141,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.349704374,,,,0.0,4.0,0.0,0.0,4.0,0.0,35.0,2520.0,4.0,0.0,2520.0,0.0,0.0,4.0,0.0,2520.0,0.0,9000.0,6.0,9000.0,0.0,100.0,6.0,5.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,49.337799557176346,9.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,5.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,44.0,350.0,9000.0,2520.0,49.29438547364765\n4.797925379186461,100.253190384,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.253222013,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.254968138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.279659735,,0.10450956459157189,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.35940574,,,,0.0,4.0,0.0,0.0,4.0,55.0,0.0,2520.0,4.0,0.0,2520.0,0.0,54.0,21.0,0.0,2520.0,0.0,9000.0,57.0,9000.0,33.0,90.0,79.0,76.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,86.0,350.0,2505.0,4.0,0.0,3.0,350.0,49.337799557176346,35.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,55.0,56.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,16.0,54.0,350.0,9000.0,2505.0,49.29438547364765\n4.8114185899754105,110.253079822,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.253140271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.254728489,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.276685662,,0.09662481839055392,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.298851171,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2460.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,2490.0,4.0,0.0,97.0,350.0,49.337799557176346,97.0,2490.0,2505.0,0.0,49.337799557176346,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2430.0,49.29438547364765\n,120.252344115,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.81902472838047,120.252513651,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.253857504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.27669464,,0.08980259242940224,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.290652906,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,49.337799557176346,97.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n,130.253212374,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.8335798154498395,130.253288152,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.254701053,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.276849193,,0.08390892110036159,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.291991595,,,,0.0,4.0,0.0,0.0,4.0,36.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,91.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,7.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,7.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,69.0,350.0,9000.0,2520.0,49.29438547364765\n4.843018210966212,140.252646936,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.252730934,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.254218744,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.279836264,,0.07877215913490418,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.292127244,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,49.337799557176346,97.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n4.849598436815145,150.252443404,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.252568922,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.253592881,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.27631765,,0.07418989612153909,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.295884742,,,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,49.29438547364765\n4.859474454071328,160.253045726,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.253135194,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.254938997,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.276810023,,0.07013527146764552,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.294032314,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,22.0,11.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,49.337799557176346,95.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n4.8687977656699655,170.252669434,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.252944709,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.254277462,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.276925343,,0.06650541338678788,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.291985946,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,49.337799557176346,97.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n,180.252832217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.877684212659831,180.252897136,0.15299839014634536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.254602971,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.276495608,,0.06323633107080263,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.320347959,,,,0.0,4.0,0.0,0.0,4.0,73.0,0.0,2505.0,4.0,0.0,2520.0,0.0,74.0,39.0,0.0,2520.0,0.0,9000.0,77.0,9000.0,53.0,100.0,98.0,95.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2505.0,4.0,0.0,0.0,350.0,49.337799557176346,54.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,75.0,75.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,36.0,73.0,350.0,9000.0,2505.0,49.29438547364765\n,190.253122588,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.88611221680635,190.253142868,0.15300066153945854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.254785915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.277417397,,0.06027725033827726,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.290358885,,,,0.0,4.0,0.0,0.0,4.0,18.0,36.0,2520.0,4.0,0.0,2520.0,0.0,14.0,23.0,0.0,2520.0,0.0,9000.0,17.0,9000.0,0.0,49.0,38.0,40.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,50.0,350.0,2520.0,4.0,0.0,38.0,350.0,49.337799557176346,1.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,15.0,20.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,18.0,350.0,9000.0,2520.0,49.29438547364765\n,200.253090255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.895881857151731,200.253158434,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.254572725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.276573801,,0.05758596426093014,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.301061505,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2460.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,41.0,0.0,0.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,51.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,36.0,350.0,9000.0,2490.0,49.29438547364765\n,210.253247956,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.903453924660093,210.253253446,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.255614088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.276636523,,0.0551444605885865,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.295167148,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,46.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,100.0,61.0,56.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2520.0,4.0,0.0,92.0,350.0,49.337799557176346,100.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,49.29438547364765\n,220.253128926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.911179689769115,220.253158656,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.25491937,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.276799278,,0.052873013283723645,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.292840044,,,,0.0,4.0,0.0,0.0,4.0,21.0,2.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2505.0,0.0,9000.0,50.0,9000.0,43.0,73.0,85.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2475.0,4.0,0.0,100.0,350.0,49.337799557176346,100.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,22.0,47.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,10.0,0.0,350.0,9000.0,2505.0,49.29438547364765\n,230.252318723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.9197727484818605,230.252391931,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.253989149,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.276780288,,0.05081402018096391,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,230.290580899,,,,0.0,4.0,0.0,0.0,4.0,0.0,1.0,2505.0,4.0,0.0,2520.0,0.0,0.0,51.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,17.0,3.0,8.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,15.0,350.0,2520.0,4.0,0.0,6.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,49.29438547364765\n,240.252740223,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.929030189680216,240.253105945,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.254409539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.276323647,,0.04889747197236755,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,240.288650118,,,,0.0,4.0,0.0,0.0,4.0,38.0,58.0,2520.0,4.0,0.0,2520.0,0.0,35.0,4.0,0.0,2520.0,0.0,9000.0,38.0,9000.0,14.0,0.0,60.0,59.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,58.0,350.0,49.337799557176346,18.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,36.0,40.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,38.0,350.0,9000.0,2520.0,49.29438547364765\n4.93596361715825,250.252322498,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.252508434,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.253937486,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.276733915,,0.04710800318545419,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,250.295625095,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2460.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,1237.0,4.0,0.0,97.0,350.0,49.337799557176346,96.0,2475.0,2505.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,96.0,350.0,9000.0,2430.0,49.29438547364765\n,260.253222822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.942082371639685,260.253435927,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.254933237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.276890264,,0.04545960427385732,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,260.296144746,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,96.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,99.0,350.0,2505.0,4.0,0.0,100.0,350.0,49.337799557176346,97.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,96.0,350.0,9000.0,2505.0,49.29438547364765\n4.948896550979278,270.253374433,0.15300217580153402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.253572269,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.254980951,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.276688783,,0.043938135533958304,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,270.290954096,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2505.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,87.0,30.0,28.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,79.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,0.0,2520.0,2505.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,89.0,350.0,9000.0,2475.0,49.29438547364765\n4.957410868064098,280.252500206,0.1530173184222887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.252552875,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.253313919,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.276743907,,0.04250481771290761,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,280.295754454,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2445.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,49.337799557176346,97.0,2505.0,2505.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n4.96390440240921,290.253020389,0.1530173184222887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.253155656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.254479799,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.279357969,,0.04115083972332088,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,290.292714159,,,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,70.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,100.0,350.0,49.337799557176346,100.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,53.0,350.0,9000.0,2520.0,49.29438547364765\n4.973793290893035,300.252708514,0.1530173184222887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.252715674,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.254082457,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.276681612,,0.039893571483388936,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,300.295621121,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,1252.0,0.0,99.0,97.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,99.0,100.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2505.0,4.0,0.0,100.0,350.0,49.337799557176346,97.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,99.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,99.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n4.97884335491471,310.252733418,0.1530173184222887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.252741138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.254903055,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.276794924,,0.038724051213339744,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,310.292362381,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2505.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,100.0,76.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,96.0,350.0,2520.0,4.0,0.0,100.0,350.0,49.337799557176346,100.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,49.29438547364765\n,320.252663295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.985051829424116,320.252666945,0.1530173184222887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.254254544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.276493347,,0.03761158139296397,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,320.3016761,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,37.0,9000.0,59.0,100.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,49.337799557176346,97.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,38.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,49.29438547364765\n4.994066610124878,330.253303629,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.253388808,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.255059114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.276405115,,0.036562479195633435,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,330.298054481,,,,0.0,4.0,0.0,0.0,4.0,83.0,0.0,2505.0,4.0,0.0,2520.0,0.0,87.0,48.0,0.0,2520.0,0.0,9000.0,90.0,9000.0,65.0,10.0,0.0,4.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,14.0,350.0,2505.0,4.0,0.0,2.0,350.0,49.337799557176346,63.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,88.0,85.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,48.0,82.0,350.0,9000.0,2505.0,49.29438547364765\n,340.253679657,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.998403835274528,340.253784075,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.254803324,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.277351542,,0.03557154840342979,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,340.295110975,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,100.0,350.0,49.337799557176346,36.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,83.0,350.0,9000.0,2520.0,49.29438547364765\n5.005190757896762,350.25262387,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.252761307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.254348915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.276738196,,0.03463406168236314,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,350.296190796,,,,0.0,4.0,0.0,0.0,4.0,100.0,59.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2505.0,0.0,9000.0,0.0,9000.0,100.0,46.0,57.0,95.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,2520.0,4.0,0.0,97.0,350.0,49.337799557176346,100.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n,360.253116376,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.008584976338916,360.253567147,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,360.254820262,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,360.276485677,,0.033745667292004476,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,360.2987596,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,49.337799557176346,97.0,2505.0,2505.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2505.0,49.29438547364765\n,370.252677754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.0155441462722345,370.252814231,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,370.254468868,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,370.276117913,,0.032902840119383936,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,370.293947726,,,,0.0,4.0,0.0,0.0,4.0,69.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,35.0,0.0,2520.0,0.0,9000.0,74.0,9000.0,49.0,0.0,0.0,0.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,1.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,49.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,72.0,71.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,33.0,0.0,350.0,9000.0,2520.0,49.29438547364765\n5.020934162129852,380.252481207,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,380.252583915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,380.254197023,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,380.277062285,,0.03210198733018904,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,380.291557414,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,30.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,49.29438547364765\n,390.25276038,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.02840439551364,390.25279954,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,390.25576465,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,390.277026794,,0.031340077535088044,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,390.290413106,,,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,12.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,49.29438547364765\n,400.253337347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.034029500558473,400.253470794,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,400.254905865,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,400.276549372,,0.03061433855170254,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,400.298893884,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2490.0,4.0,0.0,2520.0,0.0,0.0,89.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,88.0,80.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,28.0,350.0,9000.0,2520.0,49.29438547364765\n5.039961622239107,410.25329825,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,410.253603724,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,410.254878888,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,410.276344518,,0.029922320676127823,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,410.292779949,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,68.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,49.29438547364765\n5.0448935738188965,420.252829436,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,420.253091511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,420.254369335,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,420.27658512,,0.02926170246276527,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,420.296405753,,,,0.0,4.0,0.0,0.0,4.0,55.0,0.0,2505.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,0.0,76.0,87.0,79.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,100.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,59.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2505.0,49.29438547364765\n5.050084842779109,430.252784485,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,430.253076699,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,430.254348104,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,430.276399043,,0.028630330783083774,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,430.291233466,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,100.0,96.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,100.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,33.0,350.0,9000.0,2520.0,49.29438547364765\n5.056204354391582,440.253265065,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,440.253328644,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,440.254988741,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,440.276869513,,0.028026338981035275,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,440.291742496,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,100.0,100.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,31.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,49.29438547364765\n5.0617401179739625,450.252693716,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,450.252705625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,450.25451535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,450.279058259,,0.027456371991533085,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,450.291443061,,,,0.0,4.0,0.0,0.0,4.0,3.0,19.0,2505.0,4.0,0.0,2520.0,0.0,0.0,68.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,87.0,32.0,21.0,24.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,35.0,350.0,2505.0,4.0,0.0,22.0,350.0,49.337799557176346,83.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,5.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,71.0,2.0,350.0,9000.0,2505.0,49.29438547364765\n,460.252961997,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.066865137968374,460.253010036,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,460.254507317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,460.28087506,,0.026901901931489496,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,460.295449289,,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2505.0,4.0,0.0,2505.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2505.0,350.0,0.0,49.337799557176346,9000.0,97.0,350.0,2505.0,4.0,0.0,97.0,350.0,49.337799557176346,97.0,2505.0,2520.0,0.0,49.337799557176346,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2505.0,49.29438547364765\n,470.253199126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n3.2058446185323413,470.253255245,0.15301769698780754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,470.254853193,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,470.280689857,,0.026370018679031968,45.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,470.284732496,,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,49.337799557176346,350.0,0.0,9000.0,49.337799557176346,0.0,49.337799557176346,4.0,350.0,2520.0,350.0,0.0,49.337799557176346,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,49.337799557176346,0.0,2520.0,2520.0,0.0,49.337799557176346,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,56.8744844577581,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,49.29438547364765\n",
        "trainer_state.json": {},
        "eval_results.json": {
            "results": {
                "arc_challenge": {
                    "alias": "arc_challenge",
                    "acc,none": 0.20563139931740615,
                    "acc_stderr,none": 0.01181074526074251,
                    "acc_norm,none": 0.28071672354948807,
                    "acc_norm_stderr,none": 0.013131238126975468
                },
                "arc_easy": {
                    "alias": "arc_easy",
                    "acc,none": 0.25673400673400676,
                    "acc_stderr,none": 0.008963590834042483,
                    "acc_norm,none": 0.26557239057239057,
                    "acc_norm_stderr,none": 0.00906221062697191
                },
                "blimp_adjunct_island_filtered": {
                    "alias": "blimp_adjunct_island_filtered",
                    "acc,none": 0.7155172413793104,
                    "acc_stderr,none": 0.014818292387658584
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "alias": "blimp_anaphor_gender_agreement_filtered",
                    "acc,none": 0.678681771369722,
                    "acc_stderr,none": 0.014993910261436774
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "alias": "blimp_anaphor_number_agreement_filtered",
                    "acc,none": 0.6970998925886144,
                    "acc_stderr,none": 0.015068004710599978
                },
                "blimp_animate_subject_passive_filtered": {
                    "alias": "blimp_animate_subject_passive_filtered",
                    "acc,none": 0.6569832402234637,
                    "acc_stderr,none": 0.015876912673057682
                },
                "blimp_animate_subject_trans_filtered": {
                    "alias": "blimp_animate_subject_trans_filtered",
                    "acc,none": 0.771397616468039,
                    "acc_stderr,none": 0.013829741512362818
                },
                "blimp_causative_filtered": {
                    "alias": "blimp_causative_filtered",
                    "acc,none": 0.4572127139364303,
                    "acc_stderr,none": 0.017428618123172337
                },
                "blimp_complex_NP_island_filtered": {
                    "alias": "blimp_complex_NP_island_filtered",
                    "acc,none": 0.7434988179669031,
                    "acc_stderr,none": 0.015022993250730834
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "acc,none": 0.7494481236203091,
                    "acc_stderr,none": 0.014404405158855042
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "acc,none": 0.6153846153846154,
                    "acc_stderr,none": 0.015800923654187712
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_1_filtered",
                    "acc,none": 0.5877287405812702,
                    "acc_stderr,none": 0.01615868468035576
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_2_filtered",
                    "acc,none": 0.6885069817400644,
                    "acc_stderr,none": 0.01518577141887403
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "acc,none": 0.631424375917768,
                    "acc_stderr,none": 0.018499905938338983
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "acc,none": 0.6134146341463415,
                    "acc_stderr,none": 0.017016013457753443
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "acc,none": 0.6875664187035069,
                    "acc_stderr,none": 0.01511723120597256
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "acc,none": 0.6838440111420613,
                    "acc_stderr,none": 0.017364794678774064
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "acc,none": 0.705952380952381,
                    "acc_stderr,none": 0.01572952314683292
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "acc,none": 0.5712754555198285,
                    "acc_stderr,none": 0.01621078329716887
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "alias": "blimp_distractor_agreement_relational_noun_filtered",
                    "acc,none": 0.6865482233502538,
                    "acc_stderr,none": 0.016536116583730567
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "alias": "blimp_distractor_agreement_relative_clause_filtered",
                    "acc,none": 0.7141216991963261,
                    "acc_stderr,none": 0.015318529757985805
                },
                "blimp_drop_argument_filtered": {
                    "alias": "blimp_drop_argument_filtered",
                    "acc,none": 0.783695652173913,
                    "acc_stderr,none": 0.01358152656790501
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "alias": "blimp_ellipsis_n_bar_1_filtered",
                    "acc,none": 0.7955112219451371,
                    "acc_stderr,none": 0.014250878489008292
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "alias": "blimp_ellipsis_n_bar_2_filtered",
                    "acc,none": 0.392512077294686,
                    "acc_stderr,none": 0.016980191406712145
                },
                "blimp_existential_there_object_raising_filtered": {
                    "alias": "blimp_existential_there_object_raising_filtered",
                    "acc,none": 0.7389162561576355,
                    "acc_stderr,none": 0.015423292653667204
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "alias": "blimp_existential_there_quantifiers_1_filtered",
                    "acc,none": 0.6279569892473118,
                    "acc_stderr,none": 0.01585819184364343
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "alias": "blimp_existential_there_quantifiers_2_filtered",
                    "acc,none": 0.6465422612513722,
                    "acc_stderr,none": 0.0158469800106711
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "alias": "blimp_existential_there_subject_raising_filtered",
                    "acc,none": 0.7359307359307359,
                    "acc_stderr,none": 0.014510305219966184
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "alias": "blimp_expletive_it_object_raising_filtered",
                    "acc,none": 0.6534914361001317,
                    "acc_stderr,none": 0.01728392343459
                },
                "blimp_inchoative_filtered": {
                    "alias": "blimp_inchoative_filtered",
                    "acc,none": 0.45146198830409356,
                    "acc_stderr,none": 0.017028838379586818
                },
                "blimp_intransitive_filtered": {
                    "alias": "blimp_intransitive_filtered",
                    "acc,none": 0.6417050691244239,
                    "acc_stderr,none": 0.016284653349072923
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "alias": "blimp_irregular_past_participle_adjectives_filtered",
                    "acc,none": 0.5639958376690947,
                    "acc_stderr,none": 0.016004704150949095
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "alias": "blimp_irregular_past_participle_verbs_filtered",
                    "acc,none": 0.6666666666666666,
                    "acc_stderr,none": 0.015367348185252469
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.6144278606965174,
                    "acc_stderr,none": 0.0171763349281695
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.6513452914798207,
                    "acc_stderr,none": 0.015964839409120954
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "alias": "blimp_left_branch_island_echo_question_filtered",
                    "acc,none": 0.6114044350580782,
                    "acc_stderr,none": 0.015847751184309353
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "alias": "blimp_left_branch_island_simple_question_filtered",
                    "acc,none": 0.6319663512092534,
                    "acc_stderr,none": 0.015646922756097442
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                    "acc,none": 0.6501614639397201,
                    "acc_stderr,none": 0.01565562635544603
                },
                "blimp_npi_present_1_filtered": {
                    "alias": "blimp_npi_present_1_filtered",
                    "acc,none": 0.713971397139714,
                    "acc_stderr,none": 0.014996924839187714
                },
                "blimp_npi_present_2_filtered": {
                    "alias": "blimp_npi_present_2_filtered",
                    "acc,none": 0.7188183807439825,
                    "acc_stderr,none": 0.014878791637056759
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "alias": "blimp_only_npi_licensor_present_filtered",
                    "acc,none": 0.9421768707482994,
                    "acc_stderr,none": 0.0078637384551981
                },
                "blimp_only_npi_scope_filtered": {
                    "alias": "blimp_only_npi_scope_filtered",
                    "acc,none": 0.7096774193548387,
                    "acc_stderr,none": 0.015698847206202828
                },
                "blimp_passive_1_filtered": {
                    "alias": "blimp_passive_1_filtered",
                    "acc,none": 0.6190476190476191,
                    "acc_stderr,none": 0.016765495541788553
                },
                "blimp_passive_2_filtered": {
                    "alias": "blimp_passive_2_filtered",
                    "acc,none": 0.6079734219269103,
                    "acc_stderr,none": 0.016255367189961612
                },
                "blimp_principle_A_c_command_filtered": {
                    "alias": "blimp_principle_A_c_command_filtered",
                    "acc,none": 0.7304439746300211,
                    "acc_stderr,none": 0.01443451091485349
                },
                "blimp_principle_A_case_1_filtered": {
                    "alias": "blimp_principle_A_case_1_filtered",
                    "acc,none": 0.8782894736842105,
                    "acc_stderr,none": 0.010832375858487476
                },
                "blimp_principle_A_case_2_filtered": {
                    "alias": "blimp_principle_A_case_2_filtered",
                    "acc,none": 0.5770491803278689,
                    "acc_stderr,none": 0.016340985771536608
                },
                "blimp_principle_A_domain_1_filtered": {
                    "alias": "blimp_principle_A_domain_1_filtered",
                    "acc,none": 0.9387308533916849,
                    "acc_stderr,none": 0.00793699438245785
                },
                "blimp_principle_A_domain_2_filtered": {
                    "alias": "blimp_principle_A_domain_2_filtered",
                    "acc,none": 0.7136612021857923,
                    "acc_stderr,none": 0.014952473602307564
                },
                "blimp_principle_A_domain_3_filtered": {
                    "alias": "blimp_principle_A_domain_3_filtered",
                    "acc,none": 0.6588735387885228,
                    "acc_stderr,none": 0.015463037557446184
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "alias": "blimp_principle_A_reconstruction_filtered",
                    "acc,none": 0.6246122026887281,
                    "acc_stderr,none": 0.015579615834339892
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.5393258426966292,
                    "acc_stderr,none": 0.016717512627621015
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.5671957671957671,
                    "acc_stderr,none": 0.016125984691750524
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "acc,none": 0.940152339499456,
                    "acc_stderr,none": 0.007828911144553878
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "alias": "blimp_sentential_negation_npi_scope_filtered",
                    "acc,none": 0.9276693455797933,
                    "acc_stderr,none": 0.00878209587029864
                },
                "blimp_sentential_subject_island_filtered": {
                    "alias": "blimp_sentential_subject_island_filtered",
                    "acc,none": 0.7107180020811654,
                    "acc_stderr,none": 0.014634360380586405
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "alias": "blimp_superlative_quantifiers_1_filtered",
                    "acc,none": 0.6659856996935649,
                    "acc_stderr,none": 0.015081535301566295
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "alias": "blimp_superlative_quantifiers_2_filtered",
                    "acc,none": 0.6663286004056795,
                    "acc_stderr,none": 0.015024000990871015
                },
                "blimp_supplement_hypernym": {
                    "alias": "blimp_supplement_hypernym",
                    "acc,none": 0.6377672209026128,
                    "acc_stderr,none": 0.01657398620852549
                },
                "blimp_supplement_qa_congruence_easy": {
                    "alias": "blimp_supplement_qa_congruence_easy",
                    "acc,none": 0.46875,
                    "acc_stderr,none": 0.06287092313773097
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "alias": "blimp_supplement_qa_congruence_tricky",
                    "acc,none": 0.4303030303030303,
                    "acc_stderr,none": 0.03866225962879074
                },
                "blimp_supplement_subject_aux_inversion": {
                    "alias": "blimp_supplement_subject_aux_inversion",
                    "acc,none": 0.7155417636410655,
                    "acc_stderr,none": 0.007255975793767226
                },
                "blimp_supplement_turn_taking": {
                    "alias": "blimp_supplement_turn_taking",
                    "acc,none": 0.75,
                    "acc_stderr,none": 0.02592379236826063
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "alias": "blimp_tough_vs_raising_1_filtered",
                    "acc,none": 0.4462025316455696,
                    "acc_stderr,none": 0.016153495258918057
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "alias": "blimp_tough_vs_raising_2_filtered",
                    "acc,none": 0.775,
                    "acc_stderr,none": 0.013774769953388347
                },
                "blimp_transitive_filtered": {
                    "alias": "blimp_transitive_filtered",
                    "acc,none": 0.5714285714285714,
                    "acc_stderr,none": 0.016806722689075633
                },
                "blimp_wh_island_filtered": {
                    "alias": "blimp_wh_island_filtered",
                    "acc,none": 0.7125,
                    "acc_stderr,none": 0.014615108884861968
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "alias": "blimp_wh_questions_object_gap_filtered",
                    "acc,none": 0.6845168800931315,
                    "acc_stderr,none": 0.015864869377772154
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_filtered",
                    "acc,none": 0.7561247216035635,
                    "acc_stderr,none": 0.014337861680654316
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "acc,none": 0.7444574095682613,
                    "acc_stderr,none": 0.014907838953877168
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_filtered",
                    "acc,none": 0.7700348432055749,
                    "acc_stderr,none": 0.014349507059637346
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "acc,none": 0.7977142857142857,
                    "acc_stderr,none": 0.013587844719485914
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_filtered",
                    "acc,none": 0.7997823721436343,
                    "acc_stderr,none": 0.013207351280039175
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "acc,none": 0.8417582417582418,
                    "acc_stderr,none": 0.01210520913566422
                },
                "cola": {
                    "alias": "cola",
                    "mcc,none": 0.0,
                    "mcc_stderr,none": 0.0
                },
                "hellaswag": {
                    "alias": "hellaswag",
                    "acc,none": 0.25433180641306513,
                    "acc_stderr,none": 0.004345949382382736,
                    "acc_norm,none": 0.26180043815972914,
                    "acc_norm_stderr,none": 0.004387161203088004
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "alias": "inverse_scaling_hindsight_neglect_10shot",
                    "acc,none": 0.4507936507936508,
                    "acc_stderr,none": 0.028079660068225168,
                    "acc_norm,none": 0.4507936507936508,
                    "acc_norm_stderr,none": 0.028079660068225168
                },
                "inverse_scaling_into_the_unknown": {
                    "alias": "inverse_scaling_into_the_unknown",
                    "acc,none": 0.5087719298245614,
                    "acc_stderr,none": 0.011708730895408954,
                    "acc_norm,none": 0.5087719298245614,
                    "acc_norm_stderr,none": 0.011708730895408954
                },
                "inverse_scaling_memo_trap": {
                    "alias": "inverse_scaling_memo_trap",
                    "acc,none": 0.5566239316239316,
                    "acc_stderr,none": 0.016246553904196936,
                    "acc_norm,none": 0.5438034188034188,
                    "acc_norm_stderr,none": 0.01628887814854385
                },
                "inverse_scaling_modus_tollens": {
                    "alias": "inverse_scaling_modus_tollens",
                    "acc,none": 1.0,
                    "acc_stderr,none": 0.0,
                    "acc_norm,none": 1.0,
                    "acc_norm_stderr,none": 0.0
                },
                "inverse_scaling_neqa": {
                    "alias": "inverse_scaling_neqa",
                    "acc,none": 0.5433333333333333,
                    "acc_stderr,none": 0.028806947219396185,
                    "acc_norm,none": 0.5433333333333333,
                    "acc_norm_stderr,none": 0.028806947219396185
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "alias": "inverse_scaling_pattern_matching_suppression",
                    "acc,none": 0.5833333333333334,
                    "acc_stderr,none": 0.013050909844199616,
                    "acc_norm,none": 0.4166666666666667,
                    "acc_norm_stderr,none": 0.013050909844199616
                },
                "inverse_scaling_quote_repetition": {
                    "alias": "inverse_scaling_quote_repetition",
                    "acc,none": 0.13666666666666666,
                    "acc_stderr,none": 0.019864834973508133,
                    "acc_norm,none": 0.18,
                    "acc_norm_stderr,none": 0.02221813414645417
                },
                "inverse_scaling_redefine_math": {
                    "alias": "inverse_scaling_redefine_math",
                    "acc,none": 0.31777777777777777,
                    "acc_stderr,none": 0.015529048517617184,
                    "acc_norm,none": 0.31777777777777777,
                    "acc_norm_stderr,none": 0.015529048517617184
                },
                "inverse_scaling_repetitive_algebra": {
                    "alias": "inverse_scaling_repetitive_algebra",
                    "acc,none": 0.499,
                    "acc_stderr,none": 0.015819268290576817,
                    "acc_norm,none": 0.5,
                    "acc_norm_stderr,none": 0.015819299929208316
                },
                "inverse_scaling_sig_figs": {
                    "alias": "inverse_scaling_sig_figs",
                    "acc,none": 0.3956070249318084,
                    "acc_stderr,none": 0.0033826738149039083,
                    "acc_norm,none": 0.3956070249318084,
                    "acc_norm_stderr,none": 0.0033826738149039083
                },
                "inverse_scaling_winobias_antistereotype": {
                    "alias": "inverse_scaling_winobias_antistereotype",
                    "acc,none": 0.7184466019417476,
                    "acc_stderr,none": 0.02218486157199594,
                    "acc_norm,none": 0.5145631067961165,
                    "acc_norm_stderr,none": 0.02465271762756472
                },
                "lambada_openai": {
                    "alias": "lambada_openai",
                    "perplexity,none": 55634144.744731426,
                    "perplexity_stderr,none": 6082462.99151211,
                    "acc,none": 0.0,
                    "acc_stderr,none": 0.0
                },
                "mathqa": {
                    "alias": "mathqa",
                    "acc,none": 0.19061976549413737,
                    "acc_stderr,none": 0.007190529184427973,
                    "acc_norm,none": 0.1983249581239531,
                    "acc_norm_stderr,none": 0.007299421758771587
                },
                "mnli": {
                    "alias": "mnli",
                    "acc,none": 0.3273560876209883,
                    "acc_stderr,none": 0.004736742673109893
                },
                "mnli_mismatch": {
                    "alias": "mnli_mismatch",
                    "acc,none": 0.3295362082994304,
                    "acc_stderr,none": 0.004740677221523527
                },
                "mrpc": {
                    "alias": "mrpc",
                    "acc,none": 0.6838235294117647,
                    "acc_stderr,none": 0.023048336668420145
                },
                "openbookqa": {
                    "alias": "openbookqa",
                    "acc,none": 0.154,
                    "acc_stderr,none": 0.016158285192455334,
                    "acc_norm,none": 0.27,
                    "acc_norm_stderr,none": 0.019874354831287473
                },
                "piqa": {
                    "alias": "piqa",
                    "acc,none": 0.5266594124047879,
                    "acc_stderr,none": 0.01164922999434743,
                    "acc_norm,none": 0.499455930359086,
                    "acc_norm_stderr,none": 0.011665817258899291
                },
                "qa4mre_2011": {
                    "alias": "qa4mre_2011",
                    "acc,none": 0.1,
                    "acc_stderr,none": 0.02750095491084634,
                    "acc_norm,none": 0.14166666666666666,
                    "acc_norm_stderr,none": 0.03196600376689893
                },
                "qa4mre_2012": {
                    "alias": "qa4mre_2012",
                    "acc,none": 0.15,
                    "acc_stderr,none": 0.028317605697742707,
                    "acc_norm,none": 0.2625,
                    "acc_norm_stderr,none": 0.03489370652018758
                },
                "qa4mre_2013": {
                    "alias": "qa4mre_2013",
                    "acc,none": 0.25,
                    "acc_stderr,none": 0.02573993336454676,
                    "acc_norm,none": 0.176056338028169,
                    "acc_norm_stderr,none": 0.022640258076127132
                },
                "qnli": {
                    "alias": "qnli",
                    "acc,none": 0.4946000366099213,
                    "acc_stderr,none": 0.006765015986877416
                },
                "qqp": {
                    "alias": "qqp",
                    "acc,none": 0.36816720257234725,
                    "acc_stderr,none": 0.0023987066106141842
                },
                "rte": {
                    "alias": "rte",
                    "acc,none": 0.4729241877256318,
                    "acc_stderr,none": 0.030052303463143734
                },
                "sciq": {
                    "alias": "sciq",
                    "acc,none": 0.173,
                    "acc_stderr,none": 0.011967214137559927,
                    "acc_norm,none": 0.197,
                    "acc_norm_stderr,none": 0.012583693787968194
                },
                "squad_completion": {
                    "alias": "squad_completion",
                    "contains,none": 0.0006702412868632708,
                    "contains_stderr,none": "N/A"
                },
                "sst2": {
                    "alias": "sst2",
                    "acc,none": 0.5091743119266054,
                    "acc_stderr,none": 0.016939001525351462
                },
                "swag": {
                    "alias": "swag",
                    "acc,none": 0.26632010396880934,
                    "acc_stderr,none": 0.0031252589490581304,
                    "acc_norm,none": 0.253074077776667,
                    "acc_norm_stderr,none": 0.003073925371964928
                },
                "tinyGSM8k": {
                    "alias": "tinyGSM8k",
                    "exact_match,strict-match": 0.005531037620360234,
                    "exact_match_stderr,strict-match": "N/A",
                    "exact_match,flexible-extract": 0.005531037620360234,
                    "exact_match_stderr,flexible-extract": "N/A"
                },
                "tinyMMLU": {
                    "alias": "tinyMMLU",
                    "acc_norm,none": 0.2961118502368148,
                    "acc_norm_stderr,none": "N/A"
                },
                "tinyTruthfulQA": {
                    "alias": "tinyTruthfulQA",
                    "acc,none": 0.5350494952949139,
                    "acc_stderr,none": "N/A"
                },
                "triviaqa": {
                    "alias": "triviaqa",
                    "exact_match,remove_whitespace": 0.0,
                    "exact_match_stderr,remove_whitespace": 0.0
                },
                "winogrande": {
                    "alias": "winogrande",
                    "acc,none": 0.5043409629044988,
                    "acc_stderr,none": 0.014051956064076884
                },
                "wnli": {
                    "alias": "wnli",
                    "acc,none": 0.5633802816901409,
                    "acc_stderr,none": 0.05927935558412972
                },
                "wsc273": {
                    "alias": "wsc273",
                    "acc,none": 0.5018315018315018,
                    "acc_stderr,none": 0.030316749738547345
                }
            },
            "group_subtasks": {
                "arc_challenge": [],
                "arc_easy": [],
                "blimp_principle_A_reconstruction_filtered": [],
                "blimp_causative_filtered": [],
                "blimp_wh_island_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
                "blimp_intransitive_filtered": [],
                "blimp_superlative_quantifiers_2_filtered": [],
                "blimp_wh_vs_that_no_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
                "blimp_wh_vs_that_with_gap_filtered": [],
                "blimp_principle_A_case_1_filtered": [],
                "blimp_tough_vs_raising_1_filtered": [],
                "blimp_matrix_question_npi_licensor_present_filtered": [],
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
                "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
                "blimp_principle_A_case_2_filtered": [],
                "blimp_complex_NP_island_filtered": [],
                "blimp_tough_vs_raising_2_filtered": [],
                "blimp_wh_questions_subject_gap_long_distance_filtered": [],
                "blimp_principle_A_c_command_filtered": [],
                "blimp_anaphor_gender_agreement_filtered": [],
                "blimp_determiner_noun_agreement_irregular_1_filtered": [],
                "blimp_ellipsis_n_bar_2_filtered": [],
                "blimp_sentential_negation_npi_scope_filtered": [],
                "blimp_only_npi_licensor_present_filtered": [],
                "blimp_distractor_agreement_relational_noun_filtered": [],
                "blimp_existential_there_object_raising_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_principle_A_domain_2_filtered": [],
                "blimp_passive_2_filtered": [],
                "blimp_superlative_quantifiers_1_filtered": [],
                "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_irregular_past_participle_adjectives_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_wh_questions_subject_gap_filtered": [],
                "blimp_adjunct_island_filtered": [],
                "blimp_existential_there_quantifiers_2_filtered": [],
                "blimp_determiner_noun_agreement_irregular_2_filtered": [],
                "blimp_animate_subject_trans_filtered": [],
                "blimp_anaphor_number_agreement_filtered": [],
                "blimp_sentential_negation_npi_licensor_present_filtered": [],
                "blimp_determiner_noun_agreement_2_filtered": [],
                "blimp_passive_1_filtered": [],
                "blimp_inchoative_filtered": [],
                "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
                "blimp_existential_there_subject_raising_filtered": [],
                "blimp_wh_questions_object_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_existential_there_quantifiers_1_filtered": [],
                "blimp_drop_argument_filtered": [],
                "blimp_expletive_it_object_raising_filtered": [],
                "blimp_left_branch_island_simple_question_filtered": [],
                "blimp_irregular_past_participle_verbs_filtered": [],
                "blimp_npi_present_1_filtered": [],
                "blimp_animate_subject_passive_filtered": [],
                "blimp_transitive_filtered": [],
                "blimp_principle_A_domain_3_filtered": [],
                "blimp_npi_present_2_filtered": [],
                "blimp_sentential_subject_island_filtered": [],
                "blimp_principle_A_domain_1_filtered": [],
                "blimp_only_npi_scope_filtered": [],
                "blimp_determiner_noun_agreement_1_filtered": [],
                "blimp_left_branch_island_echo_question_filtered": [],
                "blimp_ellipsis_n_bar_1_filtered": [],
                "blimp_distractor_agreement_relative_clause_filtered": [],
                "blimp_supplement_qa_congruence_tricky": [],
                "blimp_supplement_turn_taking": [],
                "blimp_supplement_hypernym": [],
                "blimp_supplement_qa_congruence_easy": [],
                "blimp_supplement_subject_aux_inversion": [],
                "cola": [],
                "sst2": [],
                "qqp": [],
                "mnli": [],
                "mnli_mismatch": [],
                "wnli": [],
                "rte": [],
                "qnli": [],
                "mrpc": [],
                "hellaswag": [],
                "inverse_scaling_into_the_unknown": [],
                "inverse_scaling_redefine_math": [],
                "inverse_scaling_modus_tollens": [],
                "inverse_scaling_pattern_matching_suppression": [],
                "inverse_scaling_sig_figs": [],
                "inverse_scaling_memo_trap": [],
                "inverse_scaling_neqa": [],
                "inverse_scaling_winobias_antistereotype": [],
                "inverse_scaling_quote_repetition": [],
                "inverse_scaling_repetitive_algebra": [],
                "inverse_scaling_hindsight_neglect_10shot": [],
                "lambada_openai": [],
                "mathqa": [],
                "openbookqa": [],
                "piqa": [],
                "qa4mre_2012": [],
                "qa4mre_2013": [],
                "qa4mre_2011": [],
                "sciq": [],
                "squad_completion": [],
                "swag": [],
                "tinyGSM8k": [],
                "tinyMMLU": [],
                "tinyTruthfulQA": [],
                "triviaqa": [],
                "winogrande": [],
                "wsc273": []
            },
            "configs": {
                "arc_challenge": {
                    "task": "arc_challenge",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Challenge",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "arc_easy": {
                    "task": "arc_easy",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Easy",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_adjunct_island_filtered": {
                    "task": "blimp_adjunct_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "task": "blimp_anaphor_gender_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "task": "blimp_anaphor_number_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_passive_filtered": {
                    "task": "blimp_animate_subject_passive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_trans_filtered": {
                    "task": "blimp_animate_subject_trans_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_causative_filtered": {
                    "task": "blimp_causative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_complex_NP_island_filtered": {
                    "task": "blimp_complex_NP_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "task": "blimp_distractor_agreement_relational_noun_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "task": "blimp_distractor_agreement_relative_clause_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_drop_argument_filtered": {
                    "task": "blimp_drop_argument_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "task": "blimp_ellipsis_n_bar_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "task": "blimp_ellipsis_n_bar_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_object_raising_filtered": {
                    "task": "blimp_existential_there_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "task": "blimp_existential_there_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "task": "blimp_existential_there_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "task": "blimp_existential_there_subject_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "task": "blimp_expletive_it_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_inchoative_filtered": {
                    "task": "blimp_inchoative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_intransitive_filtered": {
                    "task": "blimp_intransitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "task": "blimp_irregular_past_participle_adjectives_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "task": "blimp_irregular_past_participle_verbs_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "task": "blimp_left_branch_island_echo_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "task": "blimp_left_branch_island_simple_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "task": "blimp_matrix_question_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_1_filtered": {
                    "task": "blimp_npi_present_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_2_filtered": {
                    "task": "blimp_npi_present_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "task": "blimp_only_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_scope_filtered": {
                    "task": "blimp_only_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_1_filtered": {
                    "task": "blimp_passive_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_2_filtered": {
                    "task": "blimp_passive_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_c_command_filtered": {
                    "task": "blimp_principle_A_c_command_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_1_filtered": {
                    "task": "blimp_principle_A_case_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_2_filtered": {
                    "task": "blimp_principle_A_case_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_1_filtered": {
                    "task": "blimp_principle_A_domain_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_2_filtered": {
                    "task": "blimp_principle_A_domain_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_3_filtered": {
                    "task": "blimp_principle_A_domain_3_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "task": "blimp_principle_A_reconstruction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "task": "blimp_sentential_negation_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_subject_island_filtered": {
                    "task": "blimp_sentential_subject_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "task": "blimp_superlative_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "task": "blimp_superlative_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_hypernym": {
                    "task": "blimp_supplement_hypernym",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_easy": {
                    "task": "blimp_supplement_qa_congruence_easy",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "task": "blimp_supplement_qa_congruence_tricky",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_subject_aux_inversion": {
                    "task": "blimp_supplement_subject_aux_inversion",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_turn_taking": {
                    "task": "blimp_supplement_turn_taking",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "task": "blimp_tough_vs_raising_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "task": "blimp_tough_vs_raising_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_transitive_filtered": {
                    "task": "blimp_transitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_island_filtered": {
                    "task": "blimp_wh_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "task": "blimp_wh_questions_object_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "task": "blimp_wh_questions_subject_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "cola": {
                    "task": "cola",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "cola",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "mcc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "hellaswag": {
                    "task": "hellaswag",
                    "tag": [
                        "multiple_choice"
                    ],
                    "dataset_path": "hellaswag",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                    "doc_to_text": "{{query}}",
                    "doc_to_target": "{{label}}",
                    "doc_to_choice": "choices",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "task": "inverse_scaling_hindsight_neglect_10shot",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_into_the_unknown": {
                    "task": "inverse_scaling_into_the_unknown",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/into-the-unknown",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_memo_trap": {
                    "task": "inverse_scaling_memo_trap",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/memo-trap",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_modus_tollens": {
                    "task": "inverse_scaling_modus_tollens",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/modus-tollens",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_neqa": {
                    "task": "inverse_scaling_neqa",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/NeQA",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "task": "inverse_scaling_pattern_matching_suppression",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/pattern-matching-suppression",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_quote_repetition": {
                    "task": "inverse_scaling_quote_repetition",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/quote-repetition",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_redefine_math": {
                    "task": "inverse_scaling_redefine_math",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/redefine-math",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_repetitive_algebra": {
                    "task": "inverse_scaling_repetitive_algebra",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/repetitive-algebra",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_sig_figs": {
                    "task": "inverse_scaling_sig_figs",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/sig-figs",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_winobias_antistereotype": {
                    "task": "inverse_scaling_winobias_antistereotype",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "group": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "text",
                    "doc_to_target": "target",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "lambada_openai": {
                    "task": "lambada_openai",
                    "tag": [
                        "lambada"
                    ],
                    "dataset_path": "EleutherAI/lambada_openai",
                    "dataset_name": "default",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                    "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "perplexity",
                            "aggregation": "perplexity",
                            "higher_is_better": false
                        },
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "loglikelihood",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{text}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mathqa": {
                    "task": "mathqa",
                    "tag": [
                        "math_word_problems"
                    ],
                    "dataset_path": "math_qa",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{Problem}}\nAnswer:",
                    "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                    "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli": {
                    "task": "mnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_matched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli_mismatch": {
                    "task": "mnli_mismatch",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_mismatched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mrpc": {
                    "task": "mrpc",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mrpc",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "openbookqa": {
                    "task": "openbookqa",
                    "dataset_path": "openbookqa",
                    "dataset_name": "main",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "question_stem",
                    "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question_stem",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "piqa": {
                    "task": "piqa",
                    "dataset_path": "piqa",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{goal}}\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[sol1, sol2]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "goal",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2011": {
                    "task": "qa4mre_2011",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2011.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2012": {
                    "task": "qa4mre_2012",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2012.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2013": {
                    "task": "qa4mre_2013",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2013.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qnli": {
                    "task": "qnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qqp": {
                    "task": "qqp",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qqp",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "rte": {
                    "task": "rte",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "rte",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "sciq": {
                    "task": "sciq",
                    "dataset_path": "sciq",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                    "doc_to_target": 3,
                    "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{support}} {{question}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "squad_completion": {
                    "task": "squad_completion",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n\n"
                        ],
                        "do_sample": false
                    },
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "sst2": {
                    "task": "sst2",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "sst2",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "negative",
                        "positive"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "swag": {
                    "task": "swag",
                    "dataset_path": "swag",
                    "dataset_name": "regular",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "startphrase",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "tinyGSM8k": {
                    "task": "tinyGSM8k",
                    "dataset_path": "tinyBenchmarks/tinyGSM8k",
                    "dataset_name": "main",
                    "training_split": "train",
                    "test_split": "test",
                    "fewshot_split": "train",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{answer}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 5,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": false,
                            "regexes_to_ignore": [
                                ",",
                                "\\$",
                                "(?s).*#### ",
                                "\\.$"
                            ]
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "Question:",
                            "</s>",
                            "<|im_end|>"
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "strict-match",
                            "filter": [
                                {
                                    "function": "regex",
                                    "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        },
                        {
                            "name": "flexible-extract",
                            "filter": [
                                {
                                    "function": "regex",
                                    "group_select": -1,
                                    "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyMMLU": {
                    "task": "tinyMMLU",
                    "dataset_path": "tinyBenchmarks/tinyMMLU",
                    "dataset_name": "all",
                    "test_split": "test",
                    "fewshot_split": "dev",
                    "doc_to_text": "{{input_formatted}}",
                    "doc_to_target": "answer",
                    "doc_to_choice": [
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "fewshot_config": {
                        "sampler": "first_n"
                    },
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc_norm",
                            "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyTruthfulQA": {
                    "task": "tinyTruthfulQA",
                    "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                    "dataset_name": "multiple_choice",
                    "validation_split": "validation",
                    "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{mc2_targets.choices}}",
                    "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 0.0
                    }
                },
                "triviaqa": {
                    "task": "triviaqa",
                    "dataset_path": "trivia_qa",
                    "dataset_name": "rc.nocontext",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{question}}?\nAnswer:",
                    "doc_to_target": "{{answer.aliases}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "mean",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": true
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n",
                            ".",
                            ","
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "remove_whitespace",
                            "filter": [
                                {
                                    "function": "remove_whitespace"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 3.0
                    }
                },
                "winogrande": {
                    "task": "winogrande",
                    "dataset_path": "winogrande",
                    "dataset_name": "winogrande_xl",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                    "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                    "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "wnli": {
                    "task": "wnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "wnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "False",
                        "True"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "wsc273": {
                    "task": "wsc273",
                    "dataset_path": "winograd_wsc",
                    "dataset_name": "wsc273",
                    "test_split": "test",
                    "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                    "doc_to_text": "label",
                    "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                    "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "text",
                    "metadata": {
                        "version": 1.0
                    }
                }
            },
            "versions": {
                "arc_challenge": 1.0,
                "arc_easy": 1.0,
                "blimp_adjunct_island_filtered": 1.0,
                "blimp_anaphor_gender_agreement_filtered": 1.0,
                "blimp_anaphor_number_agreement_filtered": 1.0,
                "blimp_animate_subject_passive_filtered": 1.0,
                "blimp_animate_subject_trans_filtered": 1.0,
                "blimp_causative_filtered": 1.0,
                "blimp_complex_NP_island_filtered": 1.0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
                "blimp_determiner_noun_agreement_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
                "blimp_distractor_agreement_relational_noun_filtered": 1.0,
                "blimp_distractor_agreement_relative_clause_filtered": 1.0,
                "blimp_drop_argument_filtered": 1.0,
                "blimp_ellipsis_n_bar_1_filtered": 1.0,
                "blimp_ellipsis_n_bar_2_filtered": 1.0,
                "blimp_existential_there_object_raising_filtered": 1.0,
                "blimp_existential_there_quantifiers_1_filtered": 1.0,
                "blimp_existential_there_quantifiers_2_filtered": 1.0,
                "blimp_existential_there_subject_raising_filtered": 1.0,
                "blimp_expletive_it_object_raising_filtered": 1.0,
                "blimp_inchoative_filtered": 1.0,
                "blimp_intransitive_filtered": 1.0,
                "blimp_irregular_past_participle_adjectives_filtered": 1.0,
                "blimp_irregular_past_participle_verbs_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_left_branch_island_echo_question_filtered": 1.0,
                "blimp_left_branch_island_simple_question_filtered": 1.0,
                "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
                "blimp_npi_present_1_filtered": 1.0,
                "blimp_npi_present_2_filtered": 1.0,
                "blimp_only_npi_licensor_present_filtered": 1.0,
                "blimp_only_npi_scope_filtered": 1.0,
                "blimp_passive_1_filtered": 1.0,
                "blimp_passive_2_filtered": 1.0,
                "blimp_principle_A_c_command_filtered": 1.0,
                "blimp_principle_A_case_1_filtered": 1.0,
                "blimp_principle_A_case_2_filtered": 1.0,
                "blimp_principle_A_domain_1_filtered": 1.0,
                "blimp_principle_A_domain_2_filtered": 1.0,
                "blimp_principle_A_domain_3_filtered": 1.0,
                "blimp_principle_A_reconstruction_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
                "blimp_sentential_negation_npi_scope_filtered": 1.0,
                "blimp_sentential_subject_island_filtered": 1.0,
                "blimp_superlative_quantifiers_1_filtered": 1.0,
                "blimp_superlative_quantifiers_2_filtered": 1.0,
                "blimp_supplement_hypernym": 1.0,
                "blimp_supplement_qa_congruence_easy": 1.0,
                "blimp_supplement_qa_congruence_tricky": 1.0,
                "blimp_supplement_subject_aux_inversion": 1.0,
                "blimp_supplement_turn_taking": 1.0,
                "blimp_tough_vs_raising_1_filtered": 1.0,
                "blimp_tough_vs_raising_2_filtered": 1.0,
                "blimp_transitive_filtered": 1.0,
                "blimp_wh_island_filtered": 1.0,
                "blimp_wh_questions_object_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
                "cola": 1.0,
                "hellaswag": 1.0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 1.0,
                "mathqa": 1.0,
                "mnli": 1.0,
                "mnli_mismatch": 1.0,
                "mrpc": 1.0,
                "openbookqa": 1.0,
                "piqa": 1.0,
                "qa4mre_2011": 1.0,
                "qa4mre_2012": 1.0,
                "qa4mre_2013": 1.0,
                "qnli": 1.0,
                "qqp": 2.0,
                "rte": 1.0,
                "sciq": 1.0,
                "squad_completion": 0,
                "sst2": 1.0,
                "swag": 1.0,
                "tinyGSM8k": 0.0,
                "tinyMMLU": 0.0,
                "tinyTruthfulQA": 0.0,
                "triviaqa": 3.0,
                "winogrande": 1.0,
                "wnli": 2.0,
                "wsc273": 1.0
            },
            "n-shot": {
                "arc_challenge": 0,
                "arc_easy": 0,
                "blimp_adjunct_island_filtered": 0,
                "blimp_anaphor_gender_agreement_filtered": 0,
                "blimp_anaphor_number_agreement_filtered": 0,
                "blimp_animate_subject_passive_filtered": 0,
                "blimp_animate_subject_trans_filtered": 0,
                "blimp_causative_filtered": 0,
                "blimp_complex_NP_island_filtered": 0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
                "blimp_determiner_noun_agreement_1_filtered": 0,
                "blimp_determiner_noun_agreement_2_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
                "blimp_distractor_agreement_relational_noun_filtered": 0,
                "blimp_distractor_agreement_relative_clause_filtered": 0,
                "blimp_drop_argument_filtered": 0,
                "blimp_ellipsis_n_bar_1_filtered": 0,
                "blimp_ellipsis_n_bar_2_filtered": 0,
                "blimp_existential_there_object_raising_filtered": 0,
                "blimp_existential_there_quantifiers_1_filtered": 0,
                "blimp_existential_there_quantifiers_2_filtered": 0,
                "blimp_existential_there_subject_raising_filtered": 0,
                "blimp_expletive_it_object_raising_filtered": 0,
                "blimp_inchoative_filtered": 0,
                "blimp_intransitive_filtered": 0,
                "blimp_irregular_past_participle_adjectives_filtered": 0,
                "blimp_irregular_past_participle_verbs_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_left_branch_island_echo_question_filtered": 0,
                "blimp_left_branch_island_simple_question_filtered": 0,
                "blimp_matrix_question_npi_licensor_present_filtered": 0,
                "blimp_npi_present_1_filtered": 0,
                "blimp_npi_present_2_filtered": 0,
                "blimp_only_npi_licensor_present_filtered": 0,
                "blimp_only_npi_scope_filtered": 0,
                "blimp_passive_1_filtered": 0,
                "blimp_passive_2_filtered": 0,
                "blimp_principle_A_c_command_filtered": 0,
                "blimp_principle_A_case_1_filtered": 0,
                "blimp_principle_A_case_2_filtered": 0,
                "blimp_principle_A_domain_1_filtered": 0,
                "blimp_principle_A_domain_2_filtered": 0,
                "blimp_principle_A_domain_3_filtered": 0,
                "blimp_principle_A_reconstruction_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 0,
                "blimp_sentential_negation_npi_scope_filtered": 0,
                "blimp_sentential_subject_island_filtered": 0,
                "blimp_superlative_quantifiers_1_filtered": 0,
                "blimp_superlative_quantifiers_2_filtered": 0,
                "blimp_supplement_hypernym": 0,
                "blimp_supplement_qa_congruence_easy": 0,
                "blimp_supplement_qa_congruence_tricky": 0,
                "blimp_supplement_subject_aux_inversion": 0,
                "blimp_supplement_turn_taking": 0,
                "blimp_tough_vs_raising_1_filtered": 0,
                "blimp_tough_vs_raising_2_filtered": 0,
                "blimp_transitive_filtered": 0,
                "blimp_wh_island_filtered": 0,
                "blimp_wh_questions_object_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_no_gap_filtered": 0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_with_gap_filtered": 0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
                "cola": 0,
                "hellaswag": 0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 0,
                "mathqa": 0,
                "mnli": 0,
                "mnli_mismatch": 0,
                "mrpc": 0,
                "openbookqa": 0,
                "piqa": 0,
                "qa4mre_2011": 0,
                "qa4mre_2012": 0,
                "qa4mre_2013": 0,
                "qnli": 0,
                "qqp": 0,
                "rte": 0,
                "sciq": 0,
                "squad_completion": 0,
                "sst2": 0,
                "swag": 0,
                "tinyGSM8k": 5,
                "tinyMMLU": 0,
                "tinyTruthfulQA": 0,
                "triviaqa": 0,
                "winogrande": 0,
                "wnli": 0,
                "wsc273": 0
            },
            "higher_is_better": {
                "arc_challenge": {
                    "acc": true,
                    "acc_norm": true
                },
                "arc_easy": {
                    "acc": true,
                    "acc_norm": true
                },
                "blimp_adjunct_island_filtered": {
                    "acc": true
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "acc": true
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_passive_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_trans_filtered": {
                    "acc": true
                },
                "blimp_causative_filtered": {
                    "acc": true
                },
                "blimp_complex_NP_island_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "acc": true
                },
                "blimp_drop_argument_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_object_raising_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "acc": true
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "acc": true
                },
                "blimp_inchoative_filtered": {
                    "acc": true
                },
                "blimp_intransitive_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "acc": true
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_npi_present_1_filtered": {
                    "acc": true
                },
                "blimp_npi_present_2_filtered": {
                    "acc": true
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_only_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_passive_1_filtered": {
                    "acc": true
                },
                "blimp_passive_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_c_command_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_3_filtered": {
                    "acc": true
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_sentential_subject_island_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_supplement_hypernym": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_easy": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "acc": true
                },
                "blimp_supplement_subject_aux_inversion": {
                    "acc": true
                },
                "blimp_supplement_turn_taking": {
                    "acc": true
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "acc": true
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "acc": true
                },
                "blimp_transitive_filtered": {
                    "acc": true
                },
                "blimp_wh_island_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "acc": true
                },
                "cola": {
                    "mcc": true
                },
                "hellaswag": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_into_the_unknown": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_memo_trap": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_modus_tollens": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_neqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_quote_repetition": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_redefine_math": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_repetitive_algebra": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_sig_figs": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_winobias_antistereotype": {
                    "acc": true,
                    "acc_norm": true
                },
                "lambada_openai": {
                    "perplexity": false,
                    "acc": true
                },
                "mathqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "mnli": {
                    "acc": true
                },
                "mnli_mismatch": {
                    "acc": true
                },
                "mrpc": {
                    "acc": true
                },
                "openbookqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "piqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2011": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2012": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2013": {
                    "acc": true,
                    "acc_norm": true
                },
                "qnli": {
                    "acc": true
                },
                "qqp": {
                    "acc": true
                },
                "rte": {
                    "acc": true
                },
                "sciq": {
                    "acc": true,
                    "acc_norm": true
                },
                "squad_completion": {
                    "contains": true
                },
                "sst2": {
                    "acc": true
                },
                "swag": {
                    "acc": true,
                    "acc_norm": true
                },
                "tinyGSM8k": {
                    "exact_match": true
                },
                "tinyMMLU": {
                    "acc_norm": true
                },
                "tinyTruthfulQA": {
                    "acc": true
                },
                "triviaqa": {
                    "exact_match": true
                },
                "winogrande": {
                    "acc": true
                },
                "wnli": {
                    "acc": true
                },
                "wsc273": {
                    "acc": true
                }
            },
            "n-samples": {
                "wsc273": {
                    "original": 273,
                    "effective": 273
                },
                "winogrande": {
                    "original": 1267,
                    "effective": 1267
                },
                "triviaqa": {
                    "original": 17944,
                    "effective": 17944
                },
                "tinyTruthfulQA": {
                    "original": 100,
                    "effective": 100
                },
                "tinyMMLU": {
                    "original": 100,
                    "effective": 100
                },
                "tinyGSM8k": {
                    "original": 100,
                    "effective": 100
                },
                "swag": {
                    "original": 20006,
                    "effective": 20006
                },
                "squad_completion": {
                    "original": 2984,
                    "effective": 2984
                },
                "sciq": {
                    "original": 1000,
                    "effective": 1000
                },
                "qa4mre_2011": {
                    "original": 120,
                    "effective": 120
                },
                "qa4mre_2013": {
                    "original": 284,
                    "effective": 284
                },
                "qa4mre_2012": {
                    "original": 160,
                    "effective": 160
                },
                "piqa": {
                    "original": 1838,
                    "effective": 1838
                },
                "openbookqa": {
                    "original": 500,
                    "effective": 500
                },
                "mathqa": {
                    "original": 2985,
                    "effective": 2985
                },
                "lambada_openai": {
                    "original": 5153,
                    "effective": 5153
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "original": 315,
                    "effective": 315
                },
                "inverse_scaling_repetitive_algebra": {
                    "original": 1000,
                    "effective": 1000
                },
                "inverse_scaling_quote_repetition": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_winobias_antistereotype": {
                    "original": 412,
                    "effective": 412
                },
                "inverse_scaling_neqa": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_memo_trap": {
                    "original": 936,
                    "effective": 936
                },
                "inverse_scaling_sig_figs": {
                    "original": 20897,
                    "effective": 20897
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "original": 1428,
                    "effective": 1428
                },
                "inverse_scaling_modus_tollens": {
                    "original": 1236,
                    "effective": 1236
                },
                "inverse_scaling_redefine_math": {
                    "original": 900,
                    "effective": 900
                },
                "inverse_scaling_into_the_unknown": {
                    "original": 1824,
                    "effective": 1824
                },
                "hellaswag": {
                    "original": 10042,
                    "effective": 10042
                },
                "mrpc": {
                    "original": 408,
                    "effective": 408
                },
                "qnli": {
                    "original": 5463,
                    "effective": 5463
                },
                "rte": {
                    "original": 277,
                    "effective": 277
                },
                "wnli": {
                    "original": 71,
                    "effective": 71
                },
                "mnli_mismatch": {
                    "original": 9832,
                    "effective": 9832
                },
                "mnli": {
                    "original": 9815,
                    "effective": 9815
                },
                "qqp": {
                    "original": 40430,
                    "effective": 40430
                },
                "sst2": {
                    "original": 872,
                    "effective": 872
                },
                "cola": {
                    "original": 1043,
                    "effective": 1043
                },
                "blimp_supplement_subject_aux_inversion": {
                    "original": 3867,
                    "effective": 3867
                },
                "blimp_supplement_qa_congruence_easy": {
                    "original": 64,
                    "effective": 64
                },
                "blimp_supplement_hypernym": {
                    "original": 842,
                    "effective": 842
                },
                "blimp_supplement_turn_taking": {
                    "original": 280,
                    "effective": 280
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "original": 165,
                    "effective": 165
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "original": 802,
                    "effective": 802
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "original": 947,
                    "effective": 947
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_only_npi_scope_filtered": {
                    "original": 837,
                    "effective": 837
                },
                "blimp_principle_A_domain_1_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_sentential_subject_island_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_npi_present_2_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_principle_A_domain_3_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_transitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_animate_subject_passive_filtered": {
                    "original": 895,
                    "effective": 895
                },
                "blimp_npi_present_1_filtered": {
                    "original": 909,
                    "effective": 909
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "original": 942,
                    "effective": 942
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "original": 951,
                    "effective": 951
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "original": 759,
                    "effective": 759
                },
                "blimp_drop_argument_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "original": 930,
                    "effective": 930
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "original": 890,
                    "effective": 890
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "original": 933,
                    "effective": 933
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "original": 859,
                    "effective": 859
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "original": 924,
                    "effective": 924
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "original": 910,
                    "effective": 910
                },
                "blimp_inchoative_filtered": {
                    "original": 855,
                    "effective": 855
                },
                "blimp_passive_1_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_animate_subject_trans_filtered": {
                    "original": 923,
                    "effective": 923
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "original": 820,
                    "effective": 820
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "original": 911,
                    "effective": 911
                },
                "blimp_adjunct_island_filtered": {
                    "original": 928,
                    "effective": 928
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "original": 898,
                    "effective": 898
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "original": 804,
                    "effective": 804
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "original": 945,
                    "effective": 945
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "original": 949,
                    "effective": 949
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "original": 979,
                    "effective": 979
                },
                "blimp_passive_2_filtered": {
                    "original": 903,
                    "effective": 903
                },
                "blimp_principle_A_domain_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "original": 892,
                    "effective": 892
                },
                "blimp_existential_there_object_raising_filtered": {
                    "original": 812,
                    "effective": 812
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "original": 788,
                    "effective": 788
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "original": 882,
                    "effective": 882
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "original": 828,
                    "effective": 828
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "original": 681,
                    "effective": 681
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "original": 971,
                    "effective": 971
                },
                "blimp_principle_A_c_command_filtered": {
                    "original": 946,
                    "effective": 946
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "original": 857,
                    "effective": 857
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_complex_NP_island_filtered": {
                    "original": 846,
                    "effective": 846
                },
                "blimp_principle_A_case_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "original": 875,
                    "effective": 875
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "original": 906,
                    "effective": 906
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "original": 948,
                    "effective": 948
                },
                "blimp_principle_A_case_1_filtered": {
                    "original": 912,
                    "effective": 912
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "original": 718,
                    "effective": 718
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "original": 861,
                    "effective": 861
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "original": 986,
                    "effective": 986
                },
                "blimp_intransitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_wh_island_filtered": {
                    "original": 960,
                    "effective": 960
                },
                "blimp_causative_filtered": {
                    "original": 818,
                    "effective": 818
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "original": 967,
                    "effective": 967
                },
                "arc_easy": {
                    "original": 2376,
                    "effective": 2376
                },
                "arc_challenge": {
                    "original": 1172,
                    "effective": 1172
                }
            },
            "config": {
                "model": "modis",
                "model_args": "pretrained=evo_exp_full_a/31M/hieraroute_gpt_31M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
                "model_num_parameters": 13312000,
                "model_dtype": "torch.bfloat16",
                "model_revision": "main",
                "batch_size": "auto",
                "batch_sizes": [
                    64
                ],
                "device": null,
                "use_cache": null,
                "limit": null,
                "bootstrap_iters": 100000,
                "gen_kwargs": null,
                "random_seed": 0,
                "numpy_seed": 1234,
                "torch_seed": 1234,
                "fewshot_seed": 1234
            },
            "date": 1730943804.0212495,
            "tokenizer_pad_token": [
                "</s>",
                "2"
            ],
            "tokenizer_eos_token": [
                "</s>",
                "2"
            ],
            "tokenizer_bos_token": [
                "<s>",
                "1"
            ],
            "eot_token_id": 2,
            "max_length": 2048,
            "task_hashes": {},
            "model_source": "modis",
            "model_name": "evo_exp_full_a/31M/hieraroute_gpt_31M",
            "model_name_sanitized": "evo_exp_full_a__31M__hieraroute_gpt_31M",
            "system_instruction": null,
            "system_instruction_sha": null,
            "fewshot_as_multiturn": false,
            "chat_template": null,
            "chat_template_sha": null,
            "start_time": 3570977.351833446,
            "end_time": 3571199.429293945,
            "total_evaluation_time_seconds": "222.0774604990147"
        }
    }
}