{
    "scale": "14M",
    "verification_report": {
        "wandb_ids.json": {
            "pretrain": {
                "id": "mx6tfq47",
                "name": "evo_exp_full_a_hiercache_gpt_14M_20241030230441"
            },
            "project": "model_discovery",
            "entity": "aristo",
            "evaluate": {
                "name": "evo_exp_full_a_hiercache_gpt_14M_eval_20241030231950"
            }
        },
        "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,89.083552553,7.9227,6.4375,0.0009998767934331842,9.675546668386763e-05,1730354771.3087938,15\n1,96.387007614,7.0441,6.375,0.0009993763823810781,0.00012900728891182352,1730354778.6123476,20\n2,103.701759586,5.9789,6.5625,0.0009984914942450934,0.0001612591111397794,1730354785.9270134,25\n3,111.017478439,5.0557,6.78125,0.0009972228861171101,0.00019351093336773527,1730354793.2428238,30\n4,118.345743488,4.3059,5.125,0.00099557164339185,0.00022576275559569117,1730354800.5711179,35\n5,125.667559657,3.6648,3.78125,0.0009935391788382364,0.00025801457782364704,1730354807.8928237,40\n6,133.059961221,3.3074,1.7109375,0.0009911272313906576,0.0002902664000516029,1730354815.2850993,45\n7,140.420364164,3.0639,0.63671875,0.0009883378646611712,0.0003225182222795588,1730354822.645707,50\n8,147.92128535,2.8653,0.271484375,0.0009851734651739209,0.00035477004450751466,1730354830.1466317,55\n9,155.290317401,2.7873,0.16796875,0.0009816367403232746,0.00038702186673547054,1730354837.5155568,60\n10,162.667213107,2.9064,0.134765625,0.000977730716057437,0.0004192736889634264,1730354844.892518,65\n11,170.027056735,2.7879,0.1953125,0.0009734587342895081,0.00045152551119138234,1730354852.2524037,70\n12,178.576320876,2.8328,0.166015625,0.0009688244500382133,0.0004837773334193382,1730354860.8016791,75\n13,185.936826049,2.8197,0.16015625,0.0009638318283007461,0.0005160291556472941,1730354868.162187,80\n14,193.312384542,2.6771,0.1396484375,0.000958485140660398,0.0005482809778752499,1730354875.537729,85\n15,200.669907297,2.6983,0.1240234375,0.0009527889616318806,0.0005805328001032058,1730354882.8952649,90\n16,208.062131498,2.698,0.11669921875,0.0009467481647474669,0.0006127846223311618,1730354890.2874508,95\n17,215.45692382,2.5172,0.09228515625,0.0009403679183872974,0.0006450364445591176,1730354897.682308,100\n18,222.966744256,2.5573,0.11279296875,0.0009336536813574223,0.0006772882667870735,1730354905.192039,105\n19,230.352639006,2.639,0.11181640625,0.0009266111982193609,0.0007095400890150293,1730354912.5780158,110\n20,237.748680497,2.4518,0.0947265625,0.0009192464943751729,0.0007417919112429853,1730354919.9740078,115\n21,245.176390732,2.5155,0.2099609375,0.0009115658709122513,0.0007740437334709411,1730354927.4016666,120\n22,252.607053825,2.4716,0.08984375,0.0009035758992122422,0.000806295555698897,1730354934.8323798,125\n23,260.052832189,2.4198,0.080078125,0.0008952834153287078,0.0008385473779268528,1730354942.278171,130\n24,268.20370043,2.4063,0.10400390625,0.0008866955141383408,0.0008707992001548088,1730354950.429039,135\n25,275.649617766,2.2792,0.08642578125,0.000877819543270736,0.0009030510223827647,1730354957.8749664,140\n26,283.05811202,2.3604,0.107421875,0.0008686630968219104,0.0009353028446107205,1730354965.2834048,145\n27,290.517222518,2.3438,0.09033203125,0.000859234008856954,0.0009675546668386764,1730354972.7425547,150\n28,298.093891322,2.3101,0.10400390625,0.0008495403467073656,0.0009998064890666322,1730354980.319249,155\n29,305.514444734,2.419,0.07177734375,0.000839590404068812,0.0010320583112945882,1730354987.7397637,160\n30,312.955029212,2.3567,0.08203125,0.0008293926939052148,0.001064310133522544,1730354995.1803434,165\n31,320.425325819,2.3138,0.11669921875,0.0008189559411652357,0.0010965619557504998,1730355002.6506448,170\n32,327.938240676,2.3088,0.1279296875,0.0008082890753173911,0.0011288137779784557,1730355010.1636188,175\n33,335.403643365,2.2459,0.12255859375,0.0007974012227101858,0.0011610656002064117,1730355017.629017,180\n34,342.87455725,2.2571,0.11279296875,0.000786301698763798,0.0011933174224343676,1730355025.0999467,185\n35,350.379765457,2.2654,0.12353515625,0.0007750000000000001,0.0012255692446623235,1730355032.605096,190\n36,357.845861391,2.2979,0.126953125,0.0007635057959171324,0.0012578210668902792,1730355040.071217,195\n37,365.328665164,2.2563,0.11669921875,0.0007518289207170814,0.0012900728891182352,1730355047.5540082,200\n38,372.947909866,2.2797,0.107421875,0.000739979364891341,0.001322324711346191,1730355055.1732695,205\n39,380.414367512,2.2811,0.0986328125,0.0007279672666733559,0.001354576533574147,1730355062.639732,210\n40,387.900054448,2.2374,0.1220703125,0.0007158029033644599,0.0013868283558021027,1730355070.1254396,215\n41,395.403500913,2.2333,0.0966796875,0.0007034966825408313,0.0014190801780300587,1730355077.6288831,220\n42,402.930052457,2.3396,0.140625,0.0006910591331489862,0.0014513320002580146,1730355085.1554155,225\n43,410.394162678,2.2842,0.10498046875,0.0006785008964974325,0.0014835838224859705,1730355092.6195343,230\n44,417.905208659,2.2089,0.0859375,0.0006658327171521851,0.0015158356447139264,1730355100.1305664,235\n45,425.439529636,2.2558,0.08447265625,0.0006530654337439418,0.0015480874669418822,1730355107.664885,240\n46,432.967728351,2.2761,0.0859375,0.0006402099696947744,0.001580339289169838,1730355115.193098,245\n47,440.508735555,2.2492,0.091796875,0.0006272773238722765,0.001612591111397794,1730355122.7341151,250\n48,448.162335539,2.3256,0.11474609375,0.0006142785611791613,0.00164484293362575,1730355130.3877075,255\n49,455.668876349,2.2666,0.08056640625,0.0006012248030863611,0.0016770947558537056,1730355137.894252,260\n50,463.191792528,2.2367,0.091796875,0.0005881272181177278,0.0017093465780816616,1730355145.417195,265\n51,470.749435026,2.1996,0.07275390625,0.000574997012294477,0.0017415984003096175,1730355152.9747863,270\n52,478.296121639,2.2459,0.0908203125,0.0005618454195475481,0.0017738502225375734,1730355160.5215068,275\n53,485.898780057,2.3105,0.080078125,0.000548683692106088,0.0018061020447655294,1730355168.1241608,280\n54,493.481595844,2.3028,0.0986328125,0.0005355230908702773,0.001838353866993485,1730355175.7068837,285\n55,501.052063085,2.1993,0.11474609375,0.0005223748757767385,0.001870605689221441,1730355183.277451,290\n56,508.653746283,2.2562,0.09765625,0.0005092502961647682,0.001902857511449397,1730355190.8791213,295\n57,516.204577635,2.2141,0.09814453125,0.000496160581151637,0.0019351093336773529,1730355198.4298973,300\n58,523.881437707,2.1988,0.08154296875,0.00048311693002519007,0.0019673611559053086,1730355206.1068177,305\n59,531.49559002,2.1701,0.0830078125,0.0004701305026619691,0.0019996129781332645,1730355213.7209518,310\n60,539.187633241,2.1791,0.08447265625,0.0004572124099790549,0.0020318648003612204,1730355221.4130108,315\n61,546.845593495,2.1973,0.1025390625,0.0004443737044277969,0.0020641166225891763,1730355229.0709734,320\n62,554.461657126,2.1264,0.0771484375,0.00043162537053756676,0.0020963684448171323,1730355236.6870308,325\n63,562.093949211,2.1621,0.08984375,0.00041897831551762323,0.002128620267045088,1730355244.3192954,330\n64,569.720001546,2.1897,0.08935546875,0.00040644335992512994,0.002160872089273044,1730355251.9453127,335\n65,577.356409294,2.1427,0.08251953125,0.00039403122840731296,0.0021931239115009996,1730355259.5817235,340\n66,584.995180102,2.2922,0.083984375,0.00038175254052567534,0.0022253757337289556,1730355267.2205017,345\n67,592.597580025,2.2534,0.08642578125,0.0003696178016701214,0.0022576275559569115,1730355274.822939,350\n68,600.409078428,2.1826,0.09033203125,0.0003576373940707628,0.0022898793781848674,1730355282.6343894,355\n69,608.072501805,2.0735,0.07421875,0.00034582156791509956,0.0023221312004128233,1730355290.2978537,360\n70,615.709867348,2.1452,0.0703125,0.00033418043257817294,0.0023543830226407793,1730355297.9352071,365\n71,623.449283616,2.1492,0.1015625,0.0003227239479731927,0.002386634844868735,1730355305.6746647,370\n72,631.111478104,2.127,0.0771484375,0.00031146191603004524,0.002418886667096691,1730355313.3368533,375\n73,638.824861507,2.1335,0.09423828125,0.0003004039723089641,0.002451138489324647,1730355321.050231,380\n74,646.490483193,2.1401,0.08056640625,0.00028955957775654594,0.0024833903115526025,1730355328.7158692,385\n75,654.203931985,2.1531,0.07421875,0.00027893801061116175,0.0025156421337805585,1730355336.4292994,390\n76,661.877565814,2.1627,0.09228515625,0.0002685483584646885,0.0025478939560085144,1730355344.1029282,395\n77,669.582846986,2.1869,0.07373046875,0.00025839951048735506,0.0025801457782364703,1730355351.8081553,400\n78,677.378835527,2.1173,0.08203125,0.0002485001498223526,0.0026123976004644263,1730355359.6041727,405\n79,685.07260332,2.0938,0.07861328125,0.00023885874615671885,0.002644649422692382,1730355367.2979093,410\n80,692.762670092,2.1958,0.0830078125,0.0002294835484748489,0.002676901244920338,1730355374.9880571,415\n81,700.52458054,2.1715,0.07177734375,0.00022038257800083643,0.002709153067148294,1730355382.7499626,420\n82,708.200440664,2.2006,0.0791015625,0.00021156362133568124,0.00274140488937625,1730355390.4257963,425\n83,715.925600676,2.12,0.07177734375,0.00020303422379523524,0.0027736567116042055,1730355398.1509342,430\n84,723.644768849,2.2078,0.0810546875,0.00019480168295458723,0.0028059085338321614,1730355405.870091,435\n85,731.39255226,2.2842,0.0751953125,0.00018687304240440984,0.0028381603560601173,1730355413.6178951,440\n86,739.126438767,2.2529,0.07275390625,0.00017925508572460896,0.0028704121782880732,1730355421.3517332,445\n87,746.858732195,2.1389,0.0771484375,0.0001719543306804352,0.002902664000516029,1730355429.0840883,450\n88,754.74099916,2.1991,0.08154296875,0.00016497702364601802,0.002934915822743985,1730355436.966355,455\n89,762.539878372,2.1589,0.07177734375,0.00015832913426009972,0.002967167644971941,1730355444.7652557,460\n90,770.28177294,2.1467,0.08203125,0.00015201635031853489,0.002999419467199897,1730355452.5071437,465\n91,778.098761934,2.1921,0.0791015625,0.00014604407290793215,0.003031671289427853,1730355460.3241744,470\n92,785.796050032,2.2875,0.07177734375,0.0001404174117845959,0.0030639231116558084,1730355468.0214052,475\n93,793.588964752,2.1884,0.0732421875,0.00013514118100272542,0.0030961749338837643,1730355475.8143396,480\n94,801.343096065,2.1205,0.08056640625,0.00013021989479561032,0.0031284267561117202,1730355483.5684521,485\n95,809.093233493,2.1698,0.0751953125,0.00012565776371334625,0.003160678578339676,1730355491.3185515,490\n96,816.841491858,2.2355,0.07275390625,0.00012145869102037601,0.003192930400567632,1730355499.0668583,495\n97,824.572722868,2.1395,0.0732421875,0.00011762626935593773,0.003225182222795588,1730355506.7981005,500\n98,832.438293141,2.2157,0.07275390625,0.0001141637776602772,0.003257434045023544,1730355514.6636696,505\n99,840.206188095,2.1065,0.072265625,0.00011107417836925508,0.0032896858672515,1730355522.4315114,510\n100,847.990282046,2.1997,0.07177734375,0.00010836011487974835,0.003321937689479456,1730355530.215662,515\n101,855.740281063,2.1786,0.07666015625,0.00010602390928801484,0.0033541895117074113,1730355537.9656255,520\n102,863.474521504,2.2114,0.0732421875,0.00010406756040295621,0.0033864413339353672,1730355545.6998916,525\n103,871.281018814,2.2949,0.07177734375,0.00010249274203597826,0.003418693156163323,1730355553.506412,530\n104,879.048217957,2.1388,0.0732421875,0.00010130080156891309,0.003450944978391279,1730355561.2736008,535\n105,886.852013923,2.1792,0.0712890625,0.00010049275880122704,0.003483196800619235,1730355569.0773802,540\n106,894.661261054,2.1552,0.0732421875,0.00010006930507750152,0.003515448622847191,1730355576.8866334,545\n107,901.349700351,,,,0.0035347997161839645,1730355583.5750928,548\n",
        "system_metrics.csv": "_runtime,system.memory_percent,Process Memory In Use (non-swap) (%),system.gpu.1.correctedMemoryErrors,system.gpu.1.pcieLinkGen,system.gpu.3.correctedMemoryErrors,system.gpu.4.uncorrectedMemoryErrors,system.gpu.7.pcieLinkGen,GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),system.gpu.0.smClock,system.gpu.3.pcieLinkGen,system.gpu.7.uncorrectedMemoryErrors,system.gpu.5.smClock,system.gpu.7.correctedMemoryErrors,GPU 6 Time Spent Accessing Memory (%),GPU 7 Utilization (%),system.gpu.3.uncorrectedMemoryErrors,system.gpu.7.smClock,system.gpu.2.correctedMemoryErrors,system.gpu.7.memoryClock,GPU 2 Time Spent Accessing Memory (%),system.gpu.3.memoryClock,GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),system.gpu.4.enforcedPowerLimitWatts,system.gpu.0.correctedMemoryErrors,system.gpu.1.memoryClock,GPU 6 Memory Allocated (%),system.gpu.1.uncorrectedMemoryErrors,GPU 1 Memory Allocated (%),system.gpu.6.pcieLinkGen,system.gpu.5.enforcedPowerLimitWatts,system.gpu.3.smClock,system.gpu.1.enforcedPowerLimitWatts,system.gpu.4.correctedMemoryErrors,GPU 4 Memory Allocated (%),system.gpu.4.memoryClock,GPU 1 Utilization (%),system.gpu.7.enforcedPowerLimitWatts,system.gpu.4.smClock,system.gpu.0.pcieLinkGen,system.gpu.6.correctedMemoryErrors,GPU 4 Utilization (%),system.gpu.2.enforcedPowerLimitWatts,GPU 2 Memory Allocated (%),GPU 5 Utilization (%),system.gpu.6.smClock,system.gpu.2.smClock,system.gpu.0.uncorrectedMemoryErrors,GPU 5 Memory Allocated (%),system.gpu.2.memoryClock,system.gpu.5.uncorrectedMemoryErrors,GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),system.gpu.5.pcieLinkGen,system.gpu.4.pcieLinkGen,system.gpu.2.uncorrectedMemoryErrors,system.gpu.3.enforcedPowerLimitWatts,system.gpu.6.uncorrectedMemoryErrors,system.gpu.5.memoryClock,system.gpu.2.pcieLinkGen,GPU 0 Memory Allocated (%),system.gpu.0.memoryClock,system.gpu.0.enforcedPowerLimitWatts,system.gpu.5.correctedMemoryErrors,GPU 7 Time Spent Accessing Memory (%),GPU 6 Utilization (%),system.gpu.6.enforcedPowerLimitWatts,system.gpu.6.memoryClock,system.gpu.1.smClock,GPU 7 Memory Allocated (%),Process CPU Utilization (%),Process CPU Threads In Use\n10.252024534,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n10.252145112000001,2.6567784898860185,0.10348315597519846,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n10.253900029,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n10.290716778,,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,0.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,10.095809455587393,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,\n10.301588868,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.2868015169042691,107.0\n20.251642112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n20.251814549,4.340385414601947,0.10348315597519846,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n20.252739822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n20.276984053,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.20670320015550375,107.0\n20.291138792,,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.5374175132412953,350.0,0.0,9000.0,2.5374175132412953,0.0,2.4983448380654685,4.0,350.0,2520.0,350.0,0.0,2.5374175132412953,9000.0,0.0,350.0,2520.0,4.0,0.0,100.0,350.0,2.502686246418338,0.0,2520.0,2520.0,0.0,2.5374175132412953,9000.0,0.0,0.0,44.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.186979030997655,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,2.454930754536772,,\n30.252207353,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n30.252234382,2.2969879279279546,0.10348353454071733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n30.253694655,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n30.276397106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.16152335415855912,107.0\n30.279733704,,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,210.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,0.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,4.0,1.0,0.0,350.0,0.0,9000.0,1.0,1.0309488147955197,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,\n40.252395511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n40.252722135,2.93031971254975,0.10348353454071733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n40.254074559,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n40.276933587,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.1325076546136287,107.0\n40.313794155,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.454930754536772,350.0,0.0,9000.0,2.4983448380654685,0.0,2.302981462186333,4.0,350.0,2520.0,350.0,0.0,2.454930754536772,9000.0,1.0,350.0,2520.0,4.0,0.0,0.0,350.0,2.454930754536772,0.0,2520.0,2520.0,0.0,2.4983448380654685,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,9.965567205001303,9000.0,350.0,0.0,0.0,4.0,350.0,9000.0,2520.0,2.454930754536772,,\n50.252449421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n50.252513129,4.581966621900915,0.10348353454071733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n50.255149421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n50.276762511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.11244902300157877,107.0\n50.292686557,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.66305787097335,350.0,0.0,9000.0,61.66305787097335,0.0,61.66305787097335,4.0,350.0,2520.0,350.0,0.0,61.66305787097335,9000.0,99.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.66305787097335,100.0,2520.0,2520.0,0.0,61.66305787097335,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.18237713814361,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.619643787444645,,\n60.251580876,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n60.251656435,3.6780922320903278,0.10348353454071733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n60.25301768,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n60.279066928,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.09758903287672918,107.0\n60.28489205,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,61.66305787097335,350.0,0.0,9000.0,61.66305787097335,0.0,61.66305787097335,4.0,350.0,2520.0,350.0,0.0,61.66305787097335,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,61.66305787097335,0.0,2520.0,2520.0,0.0,61.66305787097335,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.18237713814361,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,61.619643787444645,,\n70.25240293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n70.252565467,2.757057845875052,0.10355129776859438,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n70.253933712,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n70.276919046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.08734102461524214,45.0\n70.287624638,,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,0.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,10.095809455587393,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,\n80.251943035,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n80.251981664,3.83022332863295,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n80.252845409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n80.276977133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07833498927331828,45.0\n80.287179274,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.5113690631240777,350.0,0.0,9000.0,2.554783146652774,0.0,2.5113690631240777,4.0,350.0,2520.0,350.0,0.0,2.554783146652774,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,2.5113690631240777,0.0,2520.0,2520.0,0.0,2.554783146652774,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.243417339584962,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,2.5113690631240777,,\n90.252093037,4.601431703749979,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n90.252246745,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n90.253126128,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n90.276552645,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07099571994309924,45.0\n90.299194627,,,0.0,4.0,0.0,0.0,4.0,96.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,95.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,98.0,350.0,2520.0,4.0,0.0,93.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,92.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,61.68042350438482,,\n100.251772976,4.6080081439437235,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n100.251909314,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n100.253425016,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n100.276845013,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0649258919556029,45.0\n100.291553331,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,96.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,96.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,95.0,350.0,9000.0,2520.0,61.68042350438482,,\n110.251839665,4.610968904866777,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n110.252865446,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n110.254326629,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n110.276761324,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.05985253224003633,45.0\n110.295966939,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n120.25194879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n120.252035629,4.614142419611432,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n120.253529261,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n120.276764332,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.05549899061625325,45.0\n120.290988619,,,0.0,4.0,0.0,0.0,4.0,93.0,95.0,2520.0,4.0,0.0,2520.0,0.0,100.0,91.0,0.0,2520.0,0.0,9000.0,94.0,9000.0,95.0,100.0,100.0,96.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,96.0,350.0,2520.0,4.0,0.0,91.0,350.0,61.689106321090556,92.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,97.0,91.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,96.0,97.0,350.0,9000.0,2520.0,61.68042350438482,,\n130.252542654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n130.252615882,4.616621266628968,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n130.253718912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n130.27652439,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.05174260122426189,45.0\n130.29709325,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,95.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,95.0,98.0,93.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,94.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,93.0,350.0,9000.0,2520.0,61.68042350438482,,\n140.252336378,4.623129943594836,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n140.252440176,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n140.254038646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n140.276770006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.048494314046965886,45.0\n140.297394725,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n150.25253483,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n150.252612179,4.629191913248441,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n150.254235559,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n150.278351044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04561443234178605,45.0\n150.292897425,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n160.251760917,4.557546117409893,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n160.251998892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n160.253646682,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n160.276672837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04306267478526862,45.0\n160.291507932,,,0.0,4.0,0.0,0.0,4.0,96.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,99.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,98.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n170.252417242,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n170.25253626,4.560353559297805,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n170.254071362,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n170.27688469,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.040785417303893026,45.0\n170.29585316,,,0.0,4.0,0.0,0.0,4.0,50.0,28.0,2520.0,4.0,0.0,2520.0,0.0,0.0,28.0,0.0,2520.0,0.0,9000.0,16.0,9000.0,43.0,0.0,6.0,7.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,0.0,350.0,2520.0,4.0,0.0,28.0,350.0,61.689106321090556,46.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,0.0,20.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,24.0,0.0,350.0,9000.0,2520.0,61.68042350438482,,\n180.252453745,4.562626845238596,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n180.252565393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n180.254184953,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n180.277953054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.038761078484679974,45.0\n180.297450784,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n190.251781995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n190.251806894,4.565722375486366,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n190.253763218,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n190.277196855,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03689567726999187,45.0\n190.296890322,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,99.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n200.251999352,4.568252707414467,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n200.252350306,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n200.253795149,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n200.276922543,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03523941082998642,45.0\n200.293232272,,,0.0,4.0,0.0,0.0,4.0,98.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,94.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,97.0,350.0,2520.0,4.0,0.0,93.0,350.0,61.689106321090556,94.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,61.68042350438482,,\n210.251907371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n210.252101627,4.571025321274644,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n210.25356484,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n210.276965718,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03371259360399577,45.0\n210.293255478,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,98.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n220.251794844,4.575211877347785,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n220.251944021,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n220.253347595,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n220.27692625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03231540362420472,45.0\n220.290781534,,,0.0,4.0,0.0,0.0,4.0,91.0,100.0,2520.0,4.0,0.0,2520.0,0.0,97.0,95.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,100.0,98.0,99.0,93.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,93.0,350.0,2520.0,4.0,0.0,96.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,97.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,98.0,93.0,350.0,9000.0,2520.0,61.68042350438482,,\n230.251990654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n230.252125562,4.577640753716831,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n230.253640114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n230.276681498,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03103185741998931,45.0\n230.290023603,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n240.251713987,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n240.255187004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n240.255287382,4.580765054944034,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n240.276842813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.029863863452828827,45.0\n240.303352865,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,61.68042350438482,,\n250.252060429,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n250.252313944,4.583705751894588,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n250.253681989,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n250.277247054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02875479435391782,45.0\n250.303618727,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,99.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,99.0,350.0,61.689106321090556,98.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n260.251995044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n260.252244219,4.5869012234393365,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n260.253792921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n260.276775077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02774011294387454,45.0\n260.290388445,,,0.0,4.0,0.0,0.0,4.0,2.0,57.0,2520.0,4.0,0.0,2520.0,0.0,3.0,55.0,0.0,2520.0,0.0,9000.0,46.0,9000.0,74.0,17.0,27.0,27.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,21.0,350.0,2520.0,4.0,0.0,56.0,350.0,61.689106321090556,72.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,0.0,47.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,54.0,9.0,350.0,9000.0,2520.0,61.68042350438482,,\n270.251796664,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n270.252109299,4.585914681697171,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n270.253565422,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n270.277204666,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.026796522259051183,45.0\n270.294241171,,,0.0,4.0,0.0,0.0,4.0,97.0,97.0,2520.0,4.0,0.0,2520.0,0.0,100.0,92.0,0.0,2520.0,0.0,9000.0,78.0,9000.0,96.0,100.0,99.0,90.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,96.0,350.0,2520.0,4.0,0.0,91.0,350.0,61.689106321090556,93.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,91.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,96.0,96.0,350.0,9000.0,2520.0,61.68042350438482,,\n280.251907162,4.587880193871126,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n280.251932691,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n280.252882004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n280.279461313,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02591675958650694,45.0\n280.290963361,,,0.0,4.0,0.0,0.0,4.0,94.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,99.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n290.251657448,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n290.252277526,4.590681200145216,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n290.254008974,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n290.277465501,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.025107341704433326,45.0\n290.292357046,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,98.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n300.252423817,4.596928666903065,0.10355356916170759,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n300.252621313,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n300.254242693,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n300.276769967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.024336814659785433,45.0\n300.293213794,,,0.0,4.0,0.0,0.0,4.0,99.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,98.0,350.0,2520.0,4.0,0.0,97.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,99.0,350.0,9000.0,2520.0,61.68042350438482,,\n310.25252979,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n310.252737706,4.601133772686632,0.10357098317557542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n310.254253798,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n310.276621026,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02361357244648575,45.0\n310.302301502,,,0.0,4.0,0.0,0.0,4.0,93.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,100.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,95.0,96.0,97.0,93.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,93.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,91.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,97.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,93.0,350.0,9000.0,2520.0,61.68042350438482,,\n320.252494847,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n320.252646325,4.603643283511196,0.10357098317557542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n320.254169246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n320.279609497,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02293346270237913,45.0\n320.298666145,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n330.251520793,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n330.251802338,4.606577544847928,0.10357098317557542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n330.253325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n330.276879525,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.022292767267822183,45.0\n330.295372724,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,99.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,99.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n340.252521643,4.609988041607394,0.10357098317557542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n340.25271261,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n340.254245622,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n340.276815296,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.021687970751217707,45.0\n340.295183546,,,0.0,4.0,0.0,0.0,4.0,91.0,98.0,2520.0,4.0,0.0,2520.0,0.0,96.0,94.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,100.0,95.0,95.0,91.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,92.0,350.0,2520.0,4.0,0.0,93.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,96.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,96.0,91.0,350.0,9000.0,2520.0,61.68042350438482,,\n350.252260188,4.614994949159919,0.10357098317557542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n350.252280608,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n350.254010536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n350.276715358,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.021116345244492123,45.0\n350.313479979,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n360.25222159,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n360.252251269,4.617034281610052,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n360.253688043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n360.276850095,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.020585560956513132,45.0\n360.292068595,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n370.252454266,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n370.252517315,4.621680416223096,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n370.254285942,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n370.277493985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.020072126331187025,45.0\n370.297313339,,,0.0,4.0,0.0,0.0,4.0,93.0,100.0,2520.0,4.0,0.0,2520.0,0.0,99.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,96.0,97.0,99.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,93.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,92.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,98.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,93.0,350.0,9000.0,2520.0,61.68042350438482,,\n380.252602775,4.622584809247668,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n380.252699773,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n380.254222295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n380.277069454,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.019594556736548852,45.0\n380.29841977,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n390.252697184,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n390.252750143,4.6256428615090694,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n390.254963103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n390.277296161,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.019130852004825234,45.0\n390.295331829,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n400.252168366,4.629720769278297,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n400.252207895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n400.253688998,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n400.277095616,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.018680063246491817,45.0\n400.297147916,,,0.0,4.0,0.0,0.0,4.0,92.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,91.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,95.0,97.0,98.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,93.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,91.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,97.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,96.0,92.0,350.0,9000.0,2520.0,61.68042350438482,,\n410.252250825,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n410.25251834,4.632617552628661,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n410.254280657,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n410.277743345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.018259649646559465,45.0\n410.29428136,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n420.252284995,4.63503545059766,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n420.252484751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n420.254123221,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n420.280433916,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.017858555576573305,45.0\n420.291496662,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,99.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,99.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n430.252073248,4.638755992517077,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n430.252228475,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n430.254023472,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n430.276981959,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.017484226707186225,45.0\n430.299948035,,,0.0,4.0,0.0,0.0,4.0,93.0,97.0,2520.0,4.0,0.0,2520.0,0.0,99.0,92.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,96.0,98.0,100.0,99.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,94.0,350.0,2520.0,4.0,0.0,92.0,350.0,61.689106321090556,93.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,97.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,96.0,94.0,350.0,9000.0,2520.0,61.68042350438482,,\n440.252308683,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n440.25248013,4.640230126647542,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n440.253731577,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n440.276954928,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01711771969744261,45.0\n440.300877077,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,99.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n450.251518195,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n450.251718761,4.642777115458474,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n450.253104676,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n450.277101153,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.016767000297423458,45.0\n450.300250417,,,0.0,4.0,0.0,0.0,4.0,91.0,100.0,2520.0,4.0,0.0,2520.0,0.0,97.0,97.0,0.0,2520.0,0.0,9000.0,85.0,9000.0,100.0,60.0,53.0,92.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,92.0,350.0,2520.0,4.0,0.0,97.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,96.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,92.0,350.0,9000.0,2520.0,61.68042350438482,,\n460.251809415,4.645767783057518,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n460.252101689,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n460.253766008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n460.276799874,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.016430986159830598,45.0\n460.293544135,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n470.251614182,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n470.25172903,4.6491419375271725,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n470.253254062,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n470.276871367,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.016108814687008758,45.0\n470.292588647,,,0.0,4.0,0.0,0.0,4.0,94.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,95.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,96.0,350.0,2520.0,4.0,0.0,96.0,350.0,61.689106321090556,95.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,95.0,350.0,9000.0,2520.0,61.68042350438482,,\n480.252164375,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n480.252300323,4.650756519465136,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n480.253291525,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n480.276515426,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.015807544363689047,45.0\n480.289586695,,,0.0,4.0,0.0,0.0,4.0,100.0,99.0,2520.0,4.0,0.0,2520.0,0.0,100.0,93.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,98.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,93.0,350.0,61.689106321090556,94.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,99.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n490.251742435,4.652012599856735,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n490.251947391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n490.253490363,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n490.276689415,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.015510459749331618,45.0\n490.29164471,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,96.0,350.0,2520.0,4.0,0.0,99.0,350.0,61.689106321090556,98.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,96.0,350.0,9000.0,2520.0,61.68042350438482,,\n500.251850933,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n500.251879142,4.653975462072056,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n500.253702139,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n500.276810172,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.015232487429866031,45.0\n500.291286276,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n510.252149325,4.657897779413029,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n510.252252323,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n510.253734676,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n510.27684825,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01495762216225358,45.0\n510.295168522,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,61.68042350438482,,\n520.252981896,4.659644102151559,0.10357136174109428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n520.253332749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n520.254948609,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n520.277538413,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.014693012378791162,45.0\n520.296381416,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n530.252156874,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n530.252323491,4.6629455720415915,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n530.254056329,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n530.277060165,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.014445330585712618,45.0\n530.292871784,,,0.0,4.0,0.0,0.0,4.0,92.0,93.0,2520.0,4.0,0.0,2520.0,0.0,94.0,89.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,91.0,93.0,94.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,93.0,350.0,2520.0,4.0,0.0,91.0,350.0,61.689106321090556,91.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,94.0,91.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,94.0,93.0,350.0,9000.0,2520.0,61.68042350438482,,\n540.2518534,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n540.252030027,4.666227735090162,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n540.253212545,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n540.276744792,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.014199486170406646,45.0\n540.293597801,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,96.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n550.251962176,4.667847616945391,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n550.252007345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n550.252973478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n550.276456745,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013962335850579639,45.0\n550.306513151,,,0.0,4.0,0.0,0.0,4.0,100.0,96.0,2520.0,4.0,0.0,2520.0,0.0,100.0,92.0,0.0,2520.0,0.0,9000.0,93.0,9000.0,95.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,94.0,350.0,61.689106321090556,94.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,92.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,97.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n560.251715976,4.668158797801899,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n560.251870233,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n560.25370226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n560.279778819,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013740226996698168,45.0\n560.290889445,,,0.0,4.0,0.0,0.0,4.0,94.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,95.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,95.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,97.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,92.0,350.0,9000.0,2520.0,61.68042350438482,,\n570.252046243,4.673533292473243,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n570.252715951,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n570.254194064,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n570.276695779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013512298029155387,45.0\n570.291498496,,,0.0,4.0,0.0,0.0,4.0,76.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,15.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,1260.0,350.0,0.0,61.72383758791352,9000.0,81.0,350.0,2520.0,4.0,0.0,67.0,350.0,61.689106321090556,22.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,0.0,35.0,350.0,9000.0,2520.0,61.68042350438482,,\n580.251590731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n580.251890505,4.675834213696912,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n580.253971377,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n580.276668749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013298642375927143,45.0\n580.296229808,,,0.0,4.0,0.0,0.0,4.0,95.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,96.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,96.0,350.0,2520.0,4.0,0.0,96.0,350.0,61.689106321090556,94.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,95.0,350.0,9000.0,2520.0,61.68042350438482,,\n590.253013371,4.677810325705393,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n590.253089409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n590.253845835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n590.276995479,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01309199975537149,45.0\n590.294751712,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,99.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,99.0,350.0,9000.0,2520.0,61.68042350438482,,\n600.252291186,4.6796323615476965,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n600.252447373,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n600.254172622,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n600.277231818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012898470461247319,45.0\n600.291125131,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n610.252012843,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n610.252029733,4.679257581684019,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n610.25384214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n610.276550995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012704856115908433,45.0\n610.291841205,,,0.0,4.0,0.0,0.0,4.0,92.0,99.0,2520.0,4.0,0.0,2520.0,0.0,91.0,89.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,90.0,29.0,21.0,92.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,93.0,350.0,2520.0,4.0,0.0,90.0,350.0,61.689106321090556,91.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,93.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,98.0,92.0,350.0,9000.0,2520.0,61.68042350438482,,\n620.251862493,4.682787326581927,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n620.252093589,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n620.253445694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n620.276773577,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012517333601326463,45.0\n620.291429759,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,96.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,98.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,96.0,350.0,9000.0,2520.0,61.68042350438482,,\n630.252455631,4.685652310428708,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n630.252667787,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n630.254278797,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n630.276766646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012329526647708674,45.0\n630.29132283,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n640.252529111,4.688036894632046,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n640.25261892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n640.254326609,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n640.276928325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012159423851781677,45.0\n640.297546838,,,0.0,4.0,0.0,0.0,4.0,96.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,93.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,93.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,97.0,350.0,2520.0,4.0,0.0,93.0,350.0,61.689106321090556,95.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,61.68042350438482,,\n650.252062255,4.6885248655858645,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n650.252070315,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n650.253813043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n650.276851302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01199444015590984,45.0\n650.297851758,,,0.0,4.0,0.0,0.0,4.0,91.0,100.0,2520.0,4.0,0.0,2520.0,0.0,92.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,94.0,92.0,91.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,92.0,350.0,2520.0,4.0,0.0,97.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,93.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,91.0,350.0,9000.0,2520.0,61.68042350438482,,\n660.252594673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n660.252836299,4.6900625987234985,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n660.254029387,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n660.28123129,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011822714850816764,45.0\n660.294631044,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,98.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,99.0,350.0,9000.0,2520.0,61.68042350438482,,\n670.251846279,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n670.252004866,4.692534252996176,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n670.253196774,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n670.276511998,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011661742132930754,45.0\n670.287828491,,,0.0,4.0,0.0,0.0,4.0,100.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,9.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,7.0,350.0,2520.0,4.0,0.0,98.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,0.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,61.68042350438482,,\n680.251986752,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n680.252000772,4.695942856928048,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n680.253656491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n680.276742549,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011505382708652872,45.0\n680.297234574,,,0.0,4.0,0.0,0.0,4.0,98.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,93.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,95.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,99.0,350.0,9000.0,2520.0,61.68042350438482,,\n690.251892294,4.697213701374882,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n690.251958423,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n690.253311148,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n690.27945125,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011353451874421302,45.0\n690.295228821,,,0.0,4.0,0.0,0.0,4.0,90.0,100.0,2520.0,4.0,0.0,2520.0,0.0,94.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,93.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,92.0,350.0,2520.0,4.0,0.0,97.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,94.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,91.0,350.0,9000.0,2520.0,61.68042350438482,,\n700.252248542,4.699936344586568,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n700.252288722,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n700.253890302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n700.276743625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011211242816597999,45.0\n700.303250119,,,0.0,4.0,0.0,0.0,4.0,98.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,99.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n710.251688682,4.703707992851033,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n710.251692982,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n710.252734213,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n710.276804033,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011067564561399453,45.0\n710.297333497,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,94.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,95.0,0.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,94.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,94.0,350.0,9000.0,2520.0,61.68042350438482,,\n720.252811657,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n720.252818976,4.703973367279757,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n720.254503526,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n720.276843817,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010927771262814493,45.0\n720.295475546,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,93.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,95.0,350.0,2520.0,4.0,0.0,96.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,94.0,350.0,9000.0,2520.0,61.68042350438482,,\n730.252459314,4.705932822405409,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n730.252697899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n730.254213861,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n730.27671294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010791742112215726,45.0\n730.2914703,,,0.0,4.0,0.0,0.0,4.0,92.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,96.0,100.0,100.0,97.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,98.0,350.0,2520.0,4.0,0.0,96.0,350.0,61.689106321090556,90.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,92.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,61.68042350438482,,\n740.252266743,4.707036340892905,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n740.252386781,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n740.253855715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n740.276767555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010659312040821444,45.0\n740.291776301,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,95.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n750.25147573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n750.25151145,4.694301018272726,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n750.253011612,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n750.276739778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010530350852817208,45.0\n750.303774943,,,0.0,4.0,0.0,0.0,4.0,98.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,99.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n760.251923461,4.695968220817813,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n760.25193274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n760.253367914,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n760.276751466,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010409752973046213,45.0\n760.291392888,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n770.251506283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n770.251633631,4.697593024024786,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n770.252522005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n770.276626154,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01028724734441423,45.0\n770.287143891,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,61.68042350438482,,\n780.252358619,4.699098957658836,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n780.252557626,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n780.254158856,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n780.276856542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010172730323693608,45.0\n780.295580909,,,0.0,4.0,0.0,0.0,4.0,100.0,93.0,2520.0,4.0,0.0,2520.0,0.0,90.0,93.0,0.0,2520.0,0.0,9000.0,29.0,9000.0,100.0,46.0,38.0,92.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,92.0,350.0,2520.0,4.0,0.0,94.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,72.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,98.0,92.0,350.0,9000.0,2520.0,61.68042350438482,,\n790.252523026,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n790.252568785,4.701669417531938,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n790.25500016,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n790.27689436,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010061065169345063,45.0\n790.291893685,,,0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,94.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,94.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,94.0,350.0,2520.0,4.0,0.0,95.0,350.0,61.689106321090556,97.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,96.0,350.0,9000.0,2520.0,61.68042350438482,,\n800.252018851,4.704598378951406,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n800.25207988,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n800.253849908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n800.278765622,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009947344280880753,45.0\n800.291387901,,,0.0,4.0,0.0,0.0,4.0,91.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,98.0,350.0,2520.0,4.0,0.0,96.0,350.0,61.689106321090556,96.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,94.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,61.68042350438482,,\n810.252748002,4.708131152373466,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n810.252831651,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n810.253799873,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n810.276942569,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009836363293387338,45.0\n810.29982234,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,99.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n820.252474799,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n820.252667106,4.710043665374778,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n820.254236947,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n820.277058289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009732729996080105,45.0\n820.296446134,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n830.251612005,4.711848287203213,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n830.25189273,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n830.25349015,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n830.276884822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009626924214837098,45.0\n830.294370872,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n840.251498555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n840.251623293,4.713874369860186,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n840.252687213,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n840.276857101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009523585183929035,45.0\n840.295187155,,,0.0,4.0,0.0,0.0,4.0,67.0,100.0,2520.0,4.0,0.0,2520.0,0.0,78.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,89.0,98.0,95.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,88.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,67.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,76.0,350.0,9000.0,2520.0,61.68042350438482,,\n850.252101781,4.715549143715649,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n850.25217672,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n850.253460896,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n850.28056508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009422626229631003,45.0\n850.295496336,,,0.0,4.0,0.0,0.0,4.0,90.0,97.0,2520.0,4.0,0.0,2520.0,0.0,94.0,92.0,0.0,2520.0,0.0,9000.0,95.0,9000.0,97.0,96.0,63.0,91.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,92.0,350.0,2520.0,4.0,0.0,93.0,350.0,61.689106321090556,94.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,93.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,98.0,91.0,350.0,9000.0,2520.0,61.68042350438482,,\n860.2519066,4.717594154648565,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n860.252212314,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n860.254040451,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n860.277369564,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009328457223350758,45.0\n860.290030671,,,0.0,4.0,0.0,0.0,4.0,98.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,98.0,350.0,2520.0,4.0,0.0,96.0,350.0,61.689106321090556,94.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,61.68042350438482,,\n870.252561612,4.719770527816527,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n870.252764478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n870.254410168,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n870.276967725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009231979261960496,45.0\n870.29418932,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,98.0,350.0,2520.0,4.0,0.0,97.0,350.0,61.689106321090556,97.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,99.0,350.0,9000.0,2520.0,61.68042350438482,,\n880.251859808,4.721475208347981,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n880.251940227,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n880.253518818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n880.277748244,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009137668534358101,45.0\n880.294166754,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,99.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,99.0,350.0,61.689106321090556,99.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n890.251997789,4.723821557433914,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n890.252254994,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n890.253741877,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n890.277008351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009045431958901094,45.0\n890.291726071,,,0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,61.689106321090556,100.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,61.68042350438482,,\n900.251717977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n900.251858634,3.875764760552558,0.10357174030661317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n900.252853346,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n900.279000567,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008963782335879909,45.0\n900.279726544,,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,61.689106321090556,350.0,0.0,9000.0,61.72383758791352,0.0,61.689106321090556,4.0,350.0,2520.0,350.0,0.0,61.72383758791352,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,61.689106321090556,0.0,2520.0,2520.0,0.0,61.72383758791352,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,69.26052248849527,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,61.68042350438482,,\n",
        "trainer_state.json": {},
        "eval_results.json": {
            "results": {
                "arc_challenge": {
                    "alias": "arc_challenge",
                    "acc,none": 0.22781569965870307,
                    "acc_stderr,none": 0.012256708602326964,
                    "acc_norm,none": 0.2883959044368601,
                    "acc_norm_stderr,none": 0.013238394422428247
                },
                "arc_easy": {
                    "alias": "arc_easy",
                    "acc,none": 0.2601010101010101,
                    "acc_stderr,none": 0.009001718541079735,
                    "acc_norm,none": 0.26430976430976433,
                    "acc_norm_stderr,none": 0.009048410451862887
                },
                "blimp_adjunct_island_filtered": {
                    "alias": "blimp_adjunct_island_filtered",
                    "acc,none": 0.7586206896551724,
                    "acc_stderr,none": 0.014054729627423703
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "alias": "blimp_anaphor_gender_agreement_filtered",
                    "acc,none": 0.8187435633367662,
                    "acc_stderr,none": 0.012369006028596
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "alias": "blimp_anaphor_number_agreement_filtered",
                    "acc,none": 0.7787325456498388,
                    "acc_stderr,none": 0.013611671462213093
                },
                "blimp_animate_subject_passive_filtered": {
                    "alias": "blimp_animate_subject_passive_filtered",
                    "acc,none": 0.6335195530726258,
                    "acc_stderr,none": 0.016115235504865506
                },
                "blimp_animate_subject_trans_filtered": {
                    "alias": "blimp_animate_subject_trans_filtered",
                    "acc,none": 0.7833152762730228,
                    "acc_stderr,none": 0.013568035928177256
                },
                "blimp_causative_filtered": {
                    "alias": "blimp_causative_filtered",
                    "acc,none": 0.46943765281173594,
                    "acc_stderr,none": 0.017460076612587774
                },
                "blimp_complex_NP_island_filtered": {
                    "alias": "blimp_complex_NP_island_filtered",
                    "acc,none": 0.8132387706855791,
                    "acc_stderr,none": 0.013406766486389495
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "acc,none": 0.7251655629139073,
                    "acc_stderr,none": 0.014839862297676235
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "acc,none": 0.6206533192834562,
                    "acc_stderr,none": 0.01575935783036912
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_1_filtered",
                    "acc,none": 0.6146393972012917,
                    "acc_stderr,none": 0.01597606671096335
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_2_filtered",
                    "acc,none": 0.7099892588614393,
                    "acc_stderr,none": 0.014879606855528103
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "acc,none": 0.5976505139500734,
                    "acc_stderr,none": 0.018804895213953583
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "acc,none": 0.7121951219512195,
                    "acc_stderr,none": 0.015820005195047032
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "acc,none": 0.7353878852284803,
                    "acc_stderr,none": 0.01438795830324138
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "acc,none": 0.6852367688022284,
                    "acc_stderr,none": 0.017344139138621043
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "acc,none": 0.7440476190476191,
                    "acc_stderr,none": 0.015066035004983245
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "acc,none": 0.6409431939978564,
                    "acc_stderr,none": 0.015713878671514966
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "alias": "blimp_distractor_agreement_relational_noun_filtered",
                    "acc,none": 0.7296954314720813,
                    "acc_stderr,none": 0.015831065304233487
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "alias": "blimp_distractor_agreement_relative_clause_filtered",
                    "acc,none": 0.7531572904707233,
                    "acc_stderr,none": 0.014618182123624344
                },
                "blimp_drop_argument_filtered": {
                    "alias": "blimp_drop_argument_filtered",
                    "acc,none": 0.7630434782608696,
                    "acc_stderr,none": 0.014026561486800926
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "alias": "blimp_ellipsis_n_bar_1_filtered",
                    "acc,none": 0.770573566084788,
                    "acc_stderr,none": 0.014856363695144181
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "alias": "blimp_ellipsis_n_bar_2_filtered",
                    "acc,none": 0.3852657004830918,
                    "acc_stderr,none": 0.016922757889900775
                },
                "blimp_existential_there_object_raising_filtered": {
                    "alias": "blimp_existential_there_object_raising_filtered",
                    "acc,none": 0.8004926108374384,
                    "acc_stderr,none": 0.014032909656605645
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "alias": "blimp_existential_there_quantifiers_1_filtered",
                    "acc,none": 0.7096774193548387,
                    "acc_stderr,none": 0.014892343479405991
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "alias": "blimp_existential_there_quantifiers_2_filtered",
                    "acc,none": 0.5521405049396267,
                    "acc_stderr,none": 0.01648447047230673
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "alias": "blimp_existential_there_subject_raising_filtered",
                    "acc,none": 0.8614718614718615,
                    "acc_stderr,none": 0.011370739155986553
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "alias": "blimp_expletive_it_object_raising_filtered",
                    "acc,none": 0.6745718050065876,
                    "acc_stderr,none": 0.01701794353729163
                },
                "blimp_inchoative_filtered": {
                    "alias": "blimp_inchoative_filtered",
                    "acc,none": 0.495906432748538,
                    "acc_stderr,none": 0.017109074338363294
                },
                "blimp_intransitive_filtered": {
                    "alias": "blimp_intransitive_filtered",
                    "acc,none": 0.6831797235023042,
                    "acc_stderr,none": 0.015800266773097867
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "alias": "blimp_irregular_past_participle_adjectives_filtered",
                    "acc,none": 0.7513007284079084,
                    "acc_stderr,none": 0.013951102999317185
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "alias": "blimp_irregular_past_participle_verbs_filtered",
                    "acc,none": 0.6889596602972399,
                    "acc_stderr,none": 0.015090736782617478
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.650497512437811,
                    "acc_stderr,none": 0.016826360255255444
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.6401345291479821,
                    "acc_stderr,none": 0.016079289847449316
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "alias": "blimp_left_branch_island_echo_question_filtered",
                    "acc,none": 0.6219640971488912,
                    "acc_stderr,none": 0.015765349881245
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "alias": "blimp_left_branch_island_simple_question_filtered",
                    "acc,none": 0.6077812828601472,
                    "acc_stderr,none": 0.015840760051708744
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                    "acc,none": 0.6157158234660925,
                    "acc_stderr,none": 0.015967702052447533
                },
                "blimp_npi_present_1_filtered": {
                    "alias": "blimp_npi_present_1_filtered",
                    "acc,none": 0.7205720572057206,
                    "acc_stderr,none": 0.014891234434176647
                },
                "blimp_npi_present_2_filtered": {
                    "alias": "blimp_npi_present_2_filtered",
                    "acc,none": 0.725382932166302,
                    "acc_stderr,none": 0.014771072863024391
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "alias": "blimp_only_npi_licensor_present_filtered",
                    "acc,none": 0.5578231292517006,
                    "acc_stderr,none": 0.01673240298227785
                },
                "blimp_only_npi_scope_filtered": {
                    "alias": "blimp_only_npi_scope_filtered",
                    "acc,none": 0.8339307048984468,
                    "acc_stderr,none": 0.012870828832664372
                },
                "blimp_passive_1_filtered": {
                    "alias": "blimp_passive_1_filtered",
                    "acc,none": 0.6630952380952381,
                    "acc_stderr,none": 0.016317760285279346
                },
                "blimp_passive_2_filtered": {
                    "alias": "blimp_passive_2_filtered",
                    "acc,none": 0.64562569213732,
                    "acc_stderr,none": 0.01592642304430506
                },
                "blimp_principle_A_c_command_filtered": {
                    "alias": "blimp_principle_A_c_command_filtered",
                    "acc,none": 0.7949260042283298,
                    "acc_stderr,none": 0.01313417336890914
                },
                "blimp_principle_A_case_1_filtered": {
                    "alias": "blimp_principle_A_case_1_filtered",
                    "acc,none": 0.8245614035087719,
                    "acc_stderr,none": 0.012601286474164827
                },
                "blimp_principle_A_case_2_filtered": {
                    "alias": "blimp_principle_A_case_2_filtered",
                    "acc,none": 0.566120218579235,
                    "acc_stderr,none": 0.01639328319166136
                },
                "blimp_principle_A_domain_1_filtered": {
                    "alias": "blimp_principle_A_domain_1_filtered",
                    "acc,none": 0.675054704595186,
                    "acc_stderr,none": 0.015500268534545983
                },
                "blimp_principle_A_domain_2_filtered": {
                    "alias": "blimp_principle_A_domain_2_filtered",
                    "acc,none": 0.7912568306010929,
                    "acc_stderr,none": 0.013442863066583752
                },
                "blimp_principle_A_domain_3_filtered": {
                    "alias": "blimp_principle_A_domain_3_filtered",
                    "acc,none": 0.720510095642933,
                    "acc_stderr,none": 0.014636565175176006
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "alias": "blimp_principle_A_reconstruction_filtered",
                    "acc,none": 0.7456049638055843,
                    "acc_stderr,none": 0.014012645935804304
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.648314606741573,
                    "acc_stderr,none": 0.016014714038104578
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.6063492063492063,
                    "acc_stderr,none": 0.015901239368766553
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "acc,none": 0.8411316648531012,
                    "acc_stderr,none": 0.012065055467602732
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "alias": "blimp_sentential_negation_npi_scope_filtered",
                    "acc,none": 0.7313432835820896,
                    "acc_stderr,none": 0.015027954225661293
                },
                "blimp_sentential_subject_island_filtered": {
                    "alias": "blimp_sentential_subject_island_filtered",
                    "acc,none": 0.7981269510926119,
                    "acc_stderr,none": 0.012955063401693539
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "alias": "blimp_superlative_quantifiers_1_filtered",
                    "acc,none": 0.38508682328907046,
                    "acc_stderr,none": 0.015560258283554389
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "alias": "blimp_superlative_quantifiers_2_filtered",
                    "acc,none": 0.5912778904665315,
                    "acc_stderr,none": 0.015663606715635818
                },
                "blimp_supplement_hypernym": {
                    "alias": "blimp_supplement_hypernym",
                    "acc,none": 0.6757719714964371,
                    "acc_stderr,none": 0.01614088589350587
                },
                "blimp_supplement_qa_congruence_easy": {
                    "alias": "blimp_supplement_qa_congruence_easy",
                    "acc,none": 0.5,
                    "acc_stderr,none": 0.06299407883487121
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "alias": "blimp_supplement_qa_congruence_tricky",
                    "acc,none": 0.4303030303030303,
                    "acc_stderr,none": 0.03866225962879074
                },
                "blimp_supplement_subject_aux_inversion": {
                    "alias": "blimp_supplement_subject_aux_inversion",
                    "acc,none": 0.8280320662011895,
                    "acc_stderr,none": 0.006068989547632729
                },
                "blimp_supplement_turn_taking": {
                    "alias": "blimp_supplement_turn_taking",
                    "acc,none": 0.8321428571428572,
                    "acc_stderr,none": 0.022375191270801346
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "alias": "blimp_tough_vs_raising_1_filtered",
                    "acc,none": 0.22257383966244726,
                    "acc_stderr,none": 0.013517352669417216
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "alias": "blimp_tough_vs_raising_2_filtered",
                    "acc,none": 0.9510869565217391,
                    "acc_stderr,none": 0.007114832829939997
                },
                "blimp_transitive_filtered": {
                    "alias": "blimp_transitive_filtered",
                    "acc,none": 0.5990783410138248,
                    "acc_stderr,none": 0.016644165283826243
                },
                "blimp_wh_island_filtered": {
                    "alias": "blimp_wh_island_filtered",
                    "acc,none": 0.728125,
                    "acc_stderr,none": 0.014367404031986865
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "alias": "blimp_wh_questions_object_gap_filtered",
                    "acc,none": 0.7171129220023282,
                    "acc_stderr,none": 0.0153764714117534
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_filtered",
                    "acc,none": 0.7015590200445434,
                    "acc_stderr,none": 0.015277951026137652
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "acc,none": 0.7701283547257877,
                    "acc_stderr,none": 0.014380943386262973
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_filtered",
                    "acc,none": 0.759581881533101,
                    "acc_stderr,none": 0.014572084126520463
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "acc,none": 0.776,
                    "acc_stderr,none": 0.014102598880862634
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_filtered",
                    "acc,none": 0.7671381936887922,
                    "acc_stderr,none": 0.01394969117784254
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "acc,none": 0.8252747252747252,
                    "acc_stderr,none": 0.012594913719131086
                },
                "cola": {
                    "alias": "cola",
                    "mcc,none": 0.0,
                    "mcc_stderr,none": 0.0
                },
                "hellaswag": {
                    "alias": "hellaswag",
                    "acc,none": 0.25433180641306513,
                    "acc_stderr,none": 0.004345949382382736,
                    "acc_norm,none": 0.2605058753236407,
                    "acc_norm_stderr,none": 0.004380136468544087
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "alias": "inverse_scaling_hindsight_neglect_10shot",
                    "acc,none": 0.5492063492063493,
                    "acc_stderr,none": 0.028079660068225168,
                    "acc_norm,none": 0.5492063492063493,
                    "acc_norm_stderr,none": 0.028079660068225168
                },
                "inverse_scaling_into_the_unknown": {
                    "alias": "inverse_scaling_into_the_unknown",
                    "acc,none": 0.5087719298245614,
                    "acc_stderr,none": 0.011708730895408954,
                    "acc_norm,none": 0.5087719298245614,
                    "acc_norm_stderr,none": 0.011708730895408954
                },
                "inverse_scaling_memo_trap": {
                    "alias": "inverse_scaling_memo_trap",
                    "acc,none": 0.5790598290598291,
                    "acc_stderr,none": 0.016146042823384874,
                    "acc_norm,none": 0.5331196581196581,
                    "acc_norm_stderr,none": 0.016315836218014926
                },
                "inverse_scaling_modus_tollens": {
                    "alias": "inverse_scaling_modus_tollens",
                    "acc,none": 1.0,
                    "acc_stderr,none": 0.0,
                    "acc_norm,none": 1.0,
                    "acc_norm_stderr,none": 0.0
                },
                "inverse_scaling_neqa": {
                    "alias": "inverse_scaling_neqa",
                    "acc,none": 0.5433333333333333,
                    "acc_stderr,none": 0.028806947219396185,
                    "acc_norm,none": 0.5433333333333333,
                    "acc_norm_stderr,none": 0.028806947219396185
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "alias": "inverse_scaling_pattern_matching_suppression",
                    "acc,none": 0.25,
                    "acc_stderr,none": 0.011462745482099222,
                    "acc_norm,none": 0.25,
                    "acc_norm_stderr,none": 0.011462745482099222
                },
                "inverse_scaling_quote_repetition": {
                    "alias": "inverse_scaling_quote_repetition",
                    "acc,none": 0.13333333333333333,
                    "acc_stderr,none": 0.01965892748731962,
                    "acc_norm,none": 0.18,
                    "acc_norm_stderr,none": 0.02221813414645417
                },
                "inverse_scaling_redefine_math": {
                    "alias": "inverse_scaling_redefine_math",
                    "acc,none": 0.44555555555555554,
                    "acc_stderr,none": 0.016576777331081108,
                    "acc_norm,none": 0.44555555555555554,
                    "acc_norm_stderr,none": 0.016576777331081108
                },
                "inverse_scaling_repetitive_algebra": {
                    "alias": "inverse_scaling_repetitive_algebra",
                    "acc,none": 0.5,
                    "acc_stderr,none": 0.015819299929208316,
                    "acc_norm,none": 0.498,
                    "acc_norm_stderr,none": 0.01581917337430266
                },
                "inverse_scaling_sig_figs": {
                    "alias": "inverse_scaling_sig_figs",
                    "acc,none": 0.39460209599464036,
                    "acc_stderr,none": 0.0033811821734547093,
                    "acc_norm,none": 0.39460209599464036,
                    "acc_norm_stderr,none": 0.0033811821734547093
                },
                "inverse_scaling_winobias_antistereotype": {
                    "alias": "inverse_scaling_winobias_antistereotype",
                    "acc,none": 0.6820388349514563,
                    "acc_stderr,none": 0.0229705122815254,
                    "acc_norm,none": 0.5339805825242718,
                    "acc_norm_stderr,none": 0.024606159101350045
                },
                "lambada_openai": {
                    "alias": "lambada_openai",
                    "perplexity,none": 52331947.9184001,
                    "perplexity_stderr,none": 5693569.474914083,
                    "acc,none": 0.0,
                    "acc_stderr,none": 0.0
                },
                "mathqa": {
                    "alias": "mathqa",
                    "acc,none": 0.19095477386934673,
                    "acc_stderr,none": 0.007195355410205488,
                    "acc_norm,none": 0.1896147403685092,
                    "acc_norm_stderr,none": 0.00717599958482334
                },
                "mnli": {
                    "alias": "mnli",
                    "acc,none": 0.3544574630667346,
                    "acc_stderr,none": 0.004828602644595183
                },
                "mnli_mismatch": {
                    "alias": "mnli_mismatch",
                    "acc,none": 0.3522172497965826,
                    "acc_stderr,none": 0.004817493665633903
                },
                "mrpc": {
                    "alias": "mrpc",
                    "acc,none": 0.3161764705882353,
                    "acc_stderr,none": 0.023048336668420145
                },
                "openbookqa": {
                    "alias": "openbookqa",
                    "acc,none": 0.14,
                    "acc_stderr,none": 0.015533272840269705,
                    "acc_norm,none": 0.26,
                    "acc_norm_stderr,none": 0.019635965529725526
                },
                "piqa": {
                    "alias": "piqa",
                    "acc,none": 0.5217627856365615,
                    "acc_stderr,none": 0.011654768618559977,
                    "acc_norm,none": 0.49455930359085964,
                    "acc_norm_stderr,none": 0.011665133500637203
                },
                "qa4mre_2011": {
                    "alias": "qa4mre_2011",
                    "acc,none": 0.13333333333333333,
                    "acc_stderr,none": 0.03116175682952018,
                    "acc_norm,none": 0.14166666666666666,
                    "acc_norm_stderr,none": 0.03196600376689893
                },
                "qa4mre_2012": {
                    "alias": "qa4mre_2012",
                    "acc,none": 0.175,
                    "acc_stderr,none": 0.030133351422046106,
                    "acc_norm,none": 0.2625,
                    "acc_norm_stderr,none": 0.03489370652018758
                },
                "qa4mre_2013": {
                    "alias": "qa4mre_2013",
                    "acc,none": 0.23943661971830985,
                    "acc_stderr,none": 0.02536703885496265,
                    "acc_norm,none": 0.16901408450704225,
                    "acc_norm_stderr,none": 0.022277428700113764
                },
                "qnli": {
                    "alias": "qnli",
                    "acc,none": 0.5053999633900788,
                    "acc_stderr,none": 0.006765015986877416
                },
                "qqp": {
                    "alias": "qqp",
                    "acc,none": 0.6318327974276527,
                    "acc_stderr,none": 0.0023987066106141842
                },
                "rte": {
                    "alias": "rte",
                    "acc,none": 0.5270758122743683,
                    "acc_stderr,none": 0.030052303463143734
                },
                "sciq": {
                    "alias": "sciq",
                    "acc,none": 0.18,
                    "acc_stderr,none": 0.012155153135512024,
                    "acc_norm,none": 0.199,
                    "acc_norm_stderr,none": 0.012631649083099107
                },
                "squad_completion": {
                    "alias": "squad_completion",
                    "contains,none": 0.0,
                    "contains_stderr,none": "N/A"
                },
                "sst2": {
                    "alias": "sst2",
                    "acc,none": 0.5091743119266054,
                    "acc_stderr,none": 0.016939001525351462
                },
                "swag": {
                    "alias": "swag",
                    "acc,none": 0.26711986404078775,
                    "acc_stderr,none": 0.0031282416210821973,
                    "acc_norm,none": 0.25342397280815754,
                    "acc_norm_stderr,none": 0.0030753290439450953
                },
                "tinyGSM8k": {
                    "alias": "tinyGSM8k",
                    "exact_match,strict-match": 0.0055335888559958765,
                    "exact_match_stderr,strict-match": "N/A",
                    "exact_match,flexible-extract": 0.0055335888559958765,
                    "exact_match_stderr,flexible-extract": "N/A"
                },
                "tinyMMLU": {
                    "alias": "tinyMMLU",
                    "acc_norm,none": 0.2994697418700892,
                    "acc_norm_stderr,none": "N/A"
                },
                "tinyTruthfulQA": {
                    "alias": "tinyTruthfulQA",
                    "acc,none": 0.5318000465086008,
                    "acc_stderr,none": "N/A"
                },
                "triviaqa": {
                    "alias": "triviaqa",
                    "exact_match,remove_whitespace": 0.00022291573785109228,
                    "exact_match_stderr,remove_whitespace": 0.00011144855087437195
                },
                "winogrande": {
                    "alias": "winogrande",
                    "acc,none": 0.5019731649565904,
                    "acc_stderr,none": 0.014052376259225643
                },
                "wnli": {
                    "alias": "wnli",
                    "acc,none": 0.43661971830985913,
                    "acc_stderr,none": 0.05927935558412972
                },
                "wsc273": {
                    "alias": "wsc273",
                    "acc,none": 0.4981684981684982,
                    "acc_stderr,none": 0.030316749738547345
                }
            },
            "group_subtasks": {
                "arc_challenge": [],
                "arc_easy": [],
                "blimp_principle_A_reconstruction_filtered": [],
                "blimp_causative_filtered": [],
                "blimp_wh_island_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
                "blimp_intransitive_filtered": [],
                "blimp_superlative_quantifiers_2_filtered": [],
                "blimp_wh_vs_that_no_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
                "blimp_wh_vs_that_with_gap_filtered": [],
                "blimp_principle_A_case_1_filtered": [],
                "blimp_tough_vs_raising_1_filtered": [],
                "blimp_matrix_question_npi_licensor_present_filtered": [],
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
                "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
                "blimp_principle_A_case_2_filtered": [],
                "blimp_complex_NP_island_filtered": [],
                "blimp_tough_vs_raising_2_filtered": [],
                "blimp_wh_questions_subject_gap_long_distance_filtered": [],
                "blimp_principle_A_c_command_filtered": [],
                "blimp_anaphor_gender_agreement_filtered": [],
                "blimp_determiner_noun_agreement_irregular_1_filtered": [],
                "blimp_ellipsis_n_bar_2_filtered": [],
                "blimp_sentential_negation_npi_scope_filtered": [],
                "blimp_only_npi_licensor_present_filtered": [],
                "blimp_distractor_agreement_relational_noun_filtered": [],
                "blimp_existential_there_object_raising_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_principle_A_domain_2_filtered": [],
                "blimp_passive_2_filtered": [],
                "blimp_superlative_quantifiers_1_filtered": [],
                "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_irregular_past_participle_adjectives_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_wh_questions_subject_gap_filtered": [],
                "blimp_adjunct_island_filtered": [],
                "blimp_existential_there_quantifiers_2_filtered": [],
                "blimp_determiner_noun_agreement_irregular_2_filtered": [],
                "blimp_animate_subject_trans_filtered": [],
                "blimp_anaphor_number_agreement_filtered": [],
                "blimp_sentential_negation_npi_licensor_present_filtered": [],
                "blimp_determiner_noun_agreement_2_filtered": [],
                "blimp_passive_1_filtered": [],
                "blimp_inchoative_filtered": [],
                "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
                "blimp_existential_there_subject_raising_filtered": [],
                "blimp_wh_questions_object_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_existential_there_quantifiers_1_filtered": [],
                "blimp_drop_argument_filtered": [],
                "blimp_expletive_it_object_raising_filtered": [],
                "blimp_left_branch_island_simple_question_filtered": [],
                "blimp_irregular_past_participle_verbs_filtered": [],
                "blimp_npi_present_1_filtered": [],
                "blimp_animate_subject_passive_filtered": [],
                "blimp_transitive_filtered": [],
                "blimp_principle_A_domain_3_filtered": [],
                "blimp_npi_present_2_filtered": [],
                "blimp_sentential_subject_island_filtered": [],
                "blimp_principle_A_domain_1_filtered": [],
                "blimp_only_npi_scope_filtered": [],
                "blimp_determiner_noun_agreement_1_filtered": [],
                "blimp_left_branch_island_echo_question_filtered": [],
                "blimp_ellipsis_n_bar_1_filtered": [],
                "blimp_distractor_agreement_relative_clause_filtered": [],
                "blimp_supplement_qa_congruence_tricky": [],
                "blimp_supplement_turn_taking": [],
                "blimp_supplement_hypernym": [],
                "blimp_supplement_qa_congruence_easy": [],
                "blimp_supplement_subject_aux_inversion": [],
                "cola": [],
                "sst2": [],
                "qqp": [],
                "mnli": [],
                "mnli_mismatch": [],
                "wnli": [],
                "rte": [],
                "qnli": [],
                "mrpc": [],
                "hellaswag": [],
                "inverse_scaling_into_the_unknown": [],
                "inverse_scaling_redefine_math": [],
                "inverse_scaling_modus_tollens": [],
                "inverse_scaling_pattern_matching_suppression": [],
                "inverse_scaling_sig_figs": [],
                "inverse_scaling_memo_trap": [],
                "inverse_scaling_neqa": [],
                "inverse_scaling_winobias_antistereotype": [],
                "inverse_scaling_quote_repetition": [],
                "inverse_scaling_repetitive_algebra": [],
                "inverse_scaling_hindsight_neglect_10shot": [],
                "lambada_openai": [],
                "mathqa": [],
                "openbookqa": [],
                "piqa": [],
                "qa4mre_2012": [],
                "qa4mre_2013": [],
                "qa4mre_2011": [],
                "sciq": [],
                "squad_completion": [],
                "swag": [],
                "tinyGSM8k": [],
                "tinyMMLU": [],
                "tinyTruthfulQA": [],
                "triviaqa": [],
                "winogrande": [],
                "wsc273": []
            },
            "configs": {
                "arc_challenge": {
                    "task": "arc_challenge",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Challenge",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "arc_easy": {
                    "task": "arc_easy",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Easy",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_adjunct_island_filtered": {
                    "task": "blimp_adjunct_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "task": "blimp_anaphor_gender_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "task": "blimp_anaphor_number_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_passive_filtered": {
                    "task": "blimp_animate_subject_passive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_trans_filtered": {
                    "task": "blimp_animate_subject_trans_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_causative_filtered": {
                    "task": "blimp_causative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_complex_NP_island_filtered": {
                    "task": "blimp_complex_NP_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "task": "blimp_distractor_agreement_relational_noun_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "task": "blimp_distractor_agreement_relative_clause_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_drop_argument_filtered": {
                    "task": "blimp_drop_argument_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "task": "blimp_ellipsis_n_bar_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "task": "blimp_ellipsis_n_bar_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_object_raising_filtered": {
                    "task": "blimp_existential_there_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "task": "blimp_existential_there_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "task": "blimp_existential_there_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "task": "blimp_existential_there_subject_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "task": "blimp_expletive_it_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_inchoative_filtered": {
                    "task": "blimp_inchoative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_intransitive_filtered": {
                    "task": "blimp_intransitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "task": "blimp_irregular_past_participle_adjectives_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "task": "blimp_irregular_past_participle_verbs_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "task": "blimp_left_branch_island_echo_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "task": "blimp_left_branch_island_simple_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "task": "blimp_matrix_question_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_1_filtered": {
                    "task": "blimp_npi_present_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_2_filtered": {
                    "task": "blimp_npi_present_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "task": "blimp_only_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_scope_filtered": {
                    "task": "blimp_only_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_1_filtered": {
                    "task": "blimp_passive_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_2_filtered": {
                    "task": "blimp_passive_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_c_command_filtered": {
                    "task": "blimp_principle_A_c_command_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_1_filtered": {
                    "task": "blimp_principle_A_case_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_2_filtered": {
                    "task": "blimp_principle_A_case_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_1_filtered": {
                    "task": "blimp_principle_A_domain_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_2_filtered": {
                    "task": "blimp_principle_A_domain_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_3_filtered": {
                    "task": "blimp_principle_A_domain_3_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "task": "blimp_principle_A_reconstruction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "task": "blimp_sentential_negation_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_subject_island_filtered": {
                    "task": "blimp_sentential_subject_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "task": "blimp_superlative_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "task": "blimp_superlative_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_hypernym": {
                    "task": "blimp_supplement_hypernym",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_easy": {
                    "task": "blimp_supplement_qa_congruence_easy",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "task": "blimp_supplement_qa_congruence_tricky",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_subject_aux_inversion": {
                    "task": "blimp_supplement_subject_aux_inversion",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_turn_taking": {
                    "task": "blimp_supplement_turn_taking",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "task": "blimp_tough_vs_raising_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "task": "blimp_tough_vs_raising_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_transitive_filtered": {
                    "task": "blimp_transitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_island_filtered": {
                    "task": "blimp_wh_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "task": "blimp_wh_questions_object_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "task": "blimp_wh_questions_subject_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "cola": {
                    "task": "cola",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "cola",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "mcc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "hellaswag": {
                    "task": "hellaswag",
                    "tag": [
                        "multiple_choice"
                    ],
                    "dataset_path": "hellaswag",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                    "doc_to_text": "{{query}}",
                    "doc_to_target": "{{label}}",
                    "doc_to_choice": "choices",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "task": "inverse_scaling_hindsight_neglect_10shot",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_into_the_unknown": {
                    "task": "inverse_scaling_into_the_unknown",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/into-the-unknown",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_memo_trap": {
                    "task": "inverse_scaling_memo_trap",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/memo-trap",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_modus_tollens": {
                    "task": "inverse_scaling_modus_tollens",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/modus-tollens",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_neqa": {
                    "task": "inverse_scaling_neqa",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/NeQA",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "task": "inverse_scaling_pattern_matching_suppression",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/pattern-matching-suppression",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_quote_repetition": {
                    "task": "inverse_scaling_quote_repetition",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/quote-repetition",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_redefine_math": {
                    "task": "inverse_scaling_redefine_math",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/redefine-math",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_repetitive_algebra": {
                    "task": "inverse_scaling_repetitive_algebra",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/repetitive-algebra",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_sig_figs": {
                    "task": "inverse_scaling_sig_figs",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/sig-figs",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_winobias_antistereotype": {
                    "task": "inverse_scaling_winobias_antistereotype",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "group": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "text",
                    "doc_to_target": "target",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "lambada_openai": {
                    "task": "lambada_openai",
                    "tag": [
                        "lambada"
                    ],
                    "dataset_path": "EleutherAI/lambada_openai",
                    "dataset_name": "default",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                    "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "perplexity",
                            "aggregation": "perplexity",
                            "higher_is_better": false
                        },
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "loglikelihood",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{text}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mathqa": {
                    "task": "mathqa",
                    "tag": [
                        "math_word_problems"
                    ],
                    "dataset_path": "math_qa",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{Problem}}\nAnswer:",
                    "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                    "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli": {
                    "task": "mnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_matched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli_mismatch": {
                    "task": "mnli_mismatch",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_mismatched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mrpc": {
                    "task": "mrpc",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mrpc",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "openbookqa": {
                    "task": "openbookqa",
                    "dataset_path": "openbookqa",
                    "dataset_name": "main",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "question_stem",
                    "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question_stem",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "piqa": {
                    "task": "piqa",
                    "dataset_path": "piqa",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{goal}}\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[sol1, sol2]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "goal",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2011": {
                    "task": "qa4mre_2011",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2011.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2012": {
                    "task": "qa4mre_2012",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2012.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2013": {
                    "task": "qa4mre_2013",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2013.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qnli": {
                    "task": "qnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qqp": {
                    "task": "qqp",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qqp",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "rte": {
                    "task": "rte",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "rte",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "sciq": {
                    "task": "sciq",
                    "dataset_path": "sciq",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                    "doc_to_target": 3,
                    "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{support}} {{question}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "squad_completion": {
                    "task": "squad_completion",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n\n"
                        ],
                        "do_sample": false
                    },
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "sst2": {
                    "task": "sst2",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "sst2",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "negative",
                        "positive"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "swag": {
                    "task": "swag",
                    "dataset_path": "swag",
                    "dataset_name": "regular",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "startphrase",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "tinyGSM8k": {
                    "task": "tinyGSM8k",
                    "dataset_path": "tinyBenchmarks/tinyGSM8k",
                    "dataset_name": "main",
                    "training_split": "train",
                    "test_split": "test",
                    "fewshot_split": "train",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{answer}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 5,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": false,
                            "regexes_to_ignore": [
                                ",",
                                "\\$",
                                "(?s).*#### ",
                                "\\.$"
                            ]
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "Question:",
                            "</s>",
                            "<|im_end|>"
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "strict-match",
                            "filter": [
                                {
                                    "function": "regex",
                                    "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        },
                        {
                            "name": "flexible-extract",
                            "filter": [
                                {
                                    "function": "regex",
                                    "group_select": -1,
                                    "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyMMLU": {
                    "task": "tinyMMLU",
                    "dataset_path": "tinyBenchmarks/tinyMMLU",
                    "dataset_name": "all",
                    "test_split": "test",
                    "fewshot_split": "dev",
                    "doc_to_text": "{{input_formatted}}",
                    "doc_to_target": "answer",
                    "doc_to_choice": [
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "fewshot_config": {
                        "sampler": "first_n"
                    },
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc_norm",
                            "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyTruthfulQA": {
                    "task": "tinyTruthfulQA",
                    "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                    "dataset_name": "multiple_choice",
                    "validation_split": "validation",
                    "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{mc2_targets.choices}}",
                    "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 0.0
                    }
                },
                "triviaqa": {
                    "task": "triviaqa",
                    "dataset_path": "trivia_qa",
                    "dataset_name": "rc.nocontext",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{question}}?\nAnswer:",
                    "doc_to_target": "{{answer.aliases}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "mean",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": true
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n",
                            ".",
                            ","
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "remove_whitespace",
                            "filter": [
                                {
                                    "function": "remove_whitespace"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 3.0
                    }
                },
                "winogrande": {
                    "task": "winogrande",
                    "dataset_path": "winogrande",
                    "dataset_name": "winogrande_xl",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                    "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                    "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "wnli": {
                    "task": "wnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "wnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "False",
                        "True"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "wsc273": {
                    "task": "wsc273",
                    "dataset_path": "winograd_wsc",
                    "dataset_name": "wsc273",
                    "test_split": "test",
                    "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                    "doc_to_text": "label",
                    "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                    "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "text",
                    "metadata": {
                        "version": 1.0
                    }
                }
            },
            "versions": {
                "arc_challenge": 1.0,
                "arc_easy": 1.0,
                "blimp_adjunct_island_filtered": 1.0,
                "blimp_anaphor_gender_agreement_filtered": 1.0,
                "blimp_anaphor_number_agreement_filtered": 1.0,
                "blimp_animate_subject_passive_filtered": 1.0,
                "blimp_animate_subject_trans_filtered": 1.0,
                "blimp_causative_filtered": 1.0,
                "blimp_complex_NP_island_filtered": 1.0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
                "blimp_determiner_noun_agreement_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
                "blimp_distractor_agreement_relational_noun_filtered": 1.0,
                "blimp_distractor_agreement_relative_clause_filtered": 1.0,
                "blimp_drop_argument_filtered": 1.0,
                "blimp_ellipsis_n_bar_1_filtered": 1.0,
                "blimp_ellipsis_n_bar_2_filtered": 1.0,
                "blimp_existential_there_object_raising_filtered": 1.0,
                "blimp_existential_there_quantifiers_1_filtered": 1.0,
                "blimp_existential_there_quantifiers_2_filtered": 1.0,
                "blimp_existential_there_subject_raising_filtered": 1.0,
                "blimp_expletive_it_object_raising_filtered": 1.0,
                "blimp_inchoative_filtered": 1.0,
                "blimp_intransitive_filtered": 1.0,
                "blimp_irregular_past_participle_adjectives_filtered": 1.0,
                "blimp_irregular_past_participle_verbs_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_left_branch_island_echo_question_filtered": 1.0,
                "blimp_left_branch_island_simple_question_filtered": 1.0,
                "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
                "blimp_npi_present_1_filtered": 1.0,
                "blimp_npi_present_2_filtered": 1.0,
                "blimp_only_npi_licensor_present_filtered": 1.0,
                "blimp_only_npi_scope_filtered": 1.0,
                "blimp_passive_1_filtered": 1.0,
                "blimp_passive_2_filtered": 1.0,
                "blimp_principle_A_c_command_filtered": 1.0,
                "blimp_principle_A_case_1_filtered": 1.0,
                "blimp_principle_A_case_2_filtered": 1.0,
                "blimp_principle_A_domain_1_filtered": 1.0,
                "blimp_principle_A_domain_2_filtered": 1.0,
                "blimp_principle_A_domain_3_filtered": 1.0,
                "blimp_principle_A_reconstruction_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
                "blimp_sentential_negation_npi_scope_filtered": 1.0,
                "blimp_sentential_subject_island_filtered": 1.0,
                "blimp_superlative_quantifiers_1_filtered": 1.0,
                "blimp_superlative_quantifiers_2_filtered": 1.0,
                "blimp_supplement_hypernym": 1.0,
                "blimp_supplement_qa_congruence_easy": 1.0,
                "blimp_supplement_qa_congruence_tricky": 1.0,
                "blimp_supplement_subject_aux_inversion": 1.0,
                "blimp_supplement_turn_taking": 1.0,
                "blimp_tough_vs_raising_1_filtered": 1.0,
                "blimp_tough_vs_raising_2_filtered": 1.0,
                "blimp_transitive_filtered": 1.0,
                "blimp_wh_island_filtered": 1.0,
                "blimp_wh_questions_object_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
                "cola": 1.0,
                "hellaswag": 1.0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 1.0,
                "mathqa": 1.0,
                "mnli": 1.0,
                "mnli_mismatch": 1.0,
                "mrpc": 1.0,
                "openbookqa": 1.0,
                "piqa": 1.0,
                "qa4mre_2011": 1.0,
                "qa4mre_2012": 1.0,
                "qa4mre_2013": 1.0,
                "qnli": 1.0,
                "qqp": 2.0,
                "rte": 1.0,
                "sciq": 1.0,
                "squad_completion": 0,
                "sst2": 1.0,
                "swag": 1.0,
                "tinyGSM8k": 0.0,
                "tinyMMLU": 0.0,
                "tinyTruthfulQA": 0.0,
                "triviaqa": 3.0,
                "winogrande": 1.0,
                "wnli": 2.0,
                "wsc273": 1.0
            },
            "n-shot": {
                "arc_challenge": 0,
                "arc_easy": 0,
                "blimp_adjunct_island_filtered": 0,
                "blimp_anaphor_gender_agreement_filtered": 0,
                "blimp_anaphor_number_agreement_filtered": 0,
                "blimp_animate_subject_passive_filtered": 0,
                "blimp_animate_subject_trans_filtered": 0,
                "blimp_causative_filtered": 0,
                "blimp_complex_NP_island_filtered": 0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
                "blimp_determiner_noun_agreement_1_filtered": 0,
                "blimp_determiner_noun_agreement_2_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
                "blimp_distractor_agreement_relational_noun_filtered": 0,
                "blimp_distractor_agreement_relative_clause_filtered": 0,
                "blimp_drop_argument_filtered": 0,
                "blimp_ellipsis_n_bar_1_filtered": 0,
                "blimp_ellipsis_n_bar_2_filtered": 0,
                "blimp_existential_there_object_raising_filtered": 0,
                "blimp_existential_there_quantifiers_1_filtered": 0,
                "blimp_existential_there_quantifiers_2_filtered": 0,
                "blimp_existential_there_subject_raising_filtered": 0,
                "blimp_expletive_it_object_raising_filtered": 0,
                "blimp_inchoative_filtered": 0,
                "blimp_intransitive_filtered": 0,
                "blimp_irregular_past_participle_adjectives_filtered": 0,
                "blimp_irregular_past_participle_verbs_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_left_branch_island_echo_question_filtered": 0,
                "blimp_left_branch_island_simple_question_filtered": 0,
                "blimp_matrix_question_npi_licensor_present_filtered": 0,
                "blimp_npi_present_1_filtered": 0,
                "blimp_npi_present_2_filtered": 0,
                "blimp_only_npi_licensor_present_filtered": 0,
                "blimp_only_npi_scope_filtered": 0,
                "blimp_passive_1_filtered": 0,
                "blimp_passive_2_filtered": 0,
                "blimp_principle_A_c_command_filtered": 0,
                "blimp_principle_A_case_1_filtered": 0,
                "blimp_principle_A_case_2_filtered": 0,
                "blimp_principle_A_domain_1_filtered": 0,
                "blimp_principle_A_domain_2_filtered": 0,
                "blimp_principle_A_domain_3_filtered": 0,
                "blimp_principle_A_reconstruction_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 0,
                "blimp_sentential_negation_npi_scope_filtered": 0,
                "blimp_sentential_subject_island_filtered": 0,
                "blimp_superlative_quantifiers_1_filtered": 0,
                "blimp_superlative_quantifiers_2_filtered": 0,
                "blimp_supplement_hypernym": 0,
                "blimp_supplement_qa_congruence_easy": 0,
                "blimp_supplement_qa_congruence_tricky": 0,
                "blimp_supplement_subject_aux_inversion": 0,
                "blimp_supplement_turn_taking": 0,
                "blimp_tough_vs_raising_1_filtered": 0,
                "blimp_tough_vs_raising_2_filtered": 0,
                "blimp_transitive_filtered": 0,
                "blimp_wh_island_filtered": 0,
                "blimp_wh_questions_object_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_no_gap_filtered": 0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_with_gap_filtered": 0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
                "cola": 0,
                "hellaswag": 0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 0,
                "mathqa": 0,
                "mnli": 0,
                "mnli_mismatch": 0,
                "mrpc": 0,
                "openbookqa": 0,
                "piqa": 0,
                "qa4mre_2011": 0,
                "qa4mre_2012": 0,
                "qa4mre_2013": 0,
                "qnli": 0,
                "qqp": 0,
                "rte": 0,
                "sciq": 0,
                "squad_completion": 0,
                "sst2": 0,
                "swag": 0,
                "tinyGSM8k": 5,
                "tinyMMLU": 0,
                "tinyTruthfulQA": 0,
                "triviaqa": 0,
                "winogrande": 0,
                "wnli": 0,
                "wsc273": 0
            },
            "higher_is_better": {
                "arc_challenge": {
                    "acc": true,
                    "acc_norm": true
                },
                "arc_easy": {
                    "acc": true,
                    "acc_norm": true
                },
                "blimp_adjunct_island_filtered": {
                    "acc": true
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "acc": true
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_passive_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_trans_filtered": {
                    "acc": true
                },
                "blimp_causative_filtered": {
                    "acc": true
                },
                "blimp_complex_NP_island_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "acc": true
                },
                "blimp_drop_argument_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_object_raising_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "acc": true
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "acc": true
                },
                "blimp_inchoative_filtered": {
                    "acc": true
                },
                "blimp_intransitive_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "acc": true
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_npi_present_1_filtered": {
                    "acc": true
                },
                "blimp_npi_present_2_filtered": {
                    "acc": true
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_only_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_passive_1_filtered": {
                    "acc": true
                },
                "blimp_passive_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_c_command_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_3_filtered": {
                    "acc": true
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_sentential_subject_island_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_supplement_hypernym": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_easy": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "acc": true
                },
                "blimp_supplement_subject_aux_inversion": {
                    "acc": true
                },
                "blimp_supplement_turn_taking": {
                    "acc": true
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "acc": true
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "acc": true
                },
                "blimp_transitive_filtered": {
                    "acc": true
                },
                "blimp_wh_island_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "acc": true
                },
                "cola": {
                    "mcc": true
                },
                "hellaswag": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_into_the_unknown": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_memo_trap": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_modus_tollens": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_neqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_quote_repetition": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_redefine_math": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_repetitive_algebra": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_sig_figs": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_winobias_antistereotype": {
                    "acc": true,
                    "acc_norm": true
                },
                "lambada_openai": {
                    "perplexity": false,
                    "acc": true
                },
                "mathqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "mnli": {
                    "acc": true
                },
                "mnli_mismatch": {
                    "acc": true
                },
                "mrpc": {
                    "acc": true
                },
                "openbookqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "piqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2011": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2012": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2013": {
                    "acc": true,
                    "acc_norm": true
                },
                "qnli": {
                    "acc": true
                },
                "qqp": {
                    "acc": true
                },
                "rte": {
                    "acc": true
                },
                "sciq": {
                    "acc": true,
                    "acc_norm": true
                },
                "squad_completion": {
                    "contains": true
                },
                "sst2": {
                    "acc": true
                },
                "swag": {
                    "acc": true,
                    "acc_norm": true
                },
                "tinyGSM8k": {
                    "exact_match": true
                },
                "tinyMMLU": {
                    "acc_norm": true
                },
                "tinyTruthfulQA": {
                    "acc": true
                },
                "triviaqa": {
                    "exact_match": true
                },
                "winogrande": {
                    "acc": true
                },
                "wnli": {
                    "acc": true
                },
                "wsc273": {
                    "acc": true
                }
            },
            "n-samples": {
                "wsc273": {
                    "original": 273,
                    "effective": 273
                },
                "winogrande": {
                    "original": 1267,
                    "effective": 1267
                },
                "triviaqa": {
                    "original": 17944,
                    "effective": 17944
                },
                "tinyTruthfulQA": {
                    "original": 100,
                    "effective": 100
                },
                "tinyMMLU": {
                    "original": 100,
                    "effective": 100
                },
                "tinyGSM8k": {
                    "original": 100,
                    "effective": 100
                },
                "swag": {
                    "original": 20006,
                    "effective": 20006
                },
                "squad_completion": {
                    "original": 2984,
                    "effective": 2984
                },
                "sciq": {
                    "original": 1000,
                    "effective": 1000
                },
                "qa4mre_2011": {
                    "original": 120,
                    "effective": 120
                },
                "qa4mre_2013": {
                    "original": 284,
                    "effective": 284
                },
                "qa4mre_2012": {
                    "original": 160,
                    "effective": 160
                },
                "piqa": {
                    "original": 1838,
                    "effective": 1838
                },
                "openbookqa": {
                    "original": 500,
                    "effective": 500
                },
                "mathqa": {
                    "original": 2985,
                    "effective": 2985
                },
                "lambada_openai": {
                    "original": 5153,
                    "effective": 5153
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "original": 315,
                    "effective": 315
                },
                "inverse_scaling_repetitive_algebra": {
                    "original": 1000,
                    "effective": 1000
                },
                "inverse_scaling_quote_repetition": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_winobias_antistereotype": {
                    "original": 412,
                    "effective": 412
                },
                "inverse_scaling_neqa": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_memo_trap": {
                    "original": 936,
                    "effective": 936
                },
                "inverse_scaling_sig_figs": {
                    "original": 20897,
                    "effective": 20897
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "original": 1428,
                    "effective": 1428
                },
                "inverse_scaling_modus_tollens": {
                    "original": 1236,
                    "effective": 1236
                },
                "inverse_scaling_redefine_math": {
                    "original": 900,
                    "effective": 900
                },
                "inverse_scaling_into_the_unknown": {
                    "original": 1824,
                    "effective": 1824
                },
                "hellaswag": {
                    "original": 10042,
                    "effective": 10042
                },
                "mrpc": {
                    "original": 408,
                    "effective": 408
                },
                "qnli": {
                    "original": 5463,
                    "effective": 5463
                },
                "rte": {
                    "original": 277,
                    "effective": 277
                },
                "wnli": {
                    "original": 71,
                    "effective": 71
                },
                "mnli_mismatch": {
                    "original": 9832,
                    "effective": 9832
                },
                "mnli": {
                    "original": 9815,
                    "effective": 9815
                },
                "qqp": {
                    "original": 40430,
                    "effective": 40430
                },
                "sst2": {
                    "original": 872,
                    "effective": 872
                },
                "cola": {
                    "original": 1043,
                    "effective": 1043
                },
                "blimp_supplement_subject_aux_inversion": {
                    "original": 3867,
                    "effective": 3867
                },
                "blimp_supplement_qa_congruence_easy": {
                    "original": 64,
                    "effective": 64
                },
                "blimp_supplement_hypernym": {
                    "original": 842,
                    "effective": 842
                },
                "blimp_supplement_turn_taking": {
                    "original": 280,
                    "effective": 280
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "original": 165,
                    "effective": 165
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "original": 802,
                    "effective": 802
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "original": 947,
                    "effective": 947
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_only_npi_scope_filtered": {
                    "original": 837,
                    "effective": 837
                },
                "blimp_principle_A_domain_1_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_sentential_subject_island_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_npi_present_2_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_principle_A_domain_3_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_transitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_animate_subject_passive_filtered": {
                    "original": 895,
                    "effective": 895
                },
                "blimp_npi_present_1_filtered": {
                    "original": 909,
                    "effective": 909
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "original": 942,
                    "effective": 942
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "original": 951,
                    "effective": 951
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "original": 759,
                    "effective": 759
                },
                "blimp_drop_argument_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "original": 930,
                    "effective": 930
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "original": 890,
                    "effective": 890
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "original": 933,
                    "effective": 933
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "original": 859,
                    "effective": 859
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "original": 924,
                    "effective": 924
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "original": 910,
                    "effective": 910
                },
                "blimp_inchoative_filtered": {
                    "original": 855,
                    "effective": 855
                },
                "blimp_passive_1_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_animate_subject_trans_filtered": {
                    "original": 923,
                    "effective": 923
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "original": 820,
                    "effective": 820
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "original": 911,
                    "effective": 911
                },
                "blimp_adjunct_island_filtered": {
                    "original": 928,
                    "effective": 928
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "original": 898,
                    "effective": 898
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "original": 804,
                    "effective": 804
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "original": 945,
                    "effective": 945
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "original": 949,
                    "effective": 949
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "original": 979,
                    "effective": 979
                },
                "blimp_passive_2_filtered": {
                    "original": 903,
                    "effective": 903
                },
                "blimp_principle_A_domain_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "original": 892,
                    "effective": 892
                },
                "blimp_existential_there_object_raising_filtered": {
                    "original": 812,
                    "effective": 812
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "original": 788,
                    "effective": 788
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "original": 882,
                    "effective": 882
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "original": 828,
                    "effective": 828
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "original": 681,
                    "effective": 681
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "original": 971,
                    "effective": 971
                },
                "blimp_principle_A_c_command_filtered": {
                    "original": 946,
                    "effective": 946
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "original": 857,
                    "effective": 857
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_complex_NP_island_filtered": {
                    "original": 846,
                    "effective": 846
                },
                "blimp_principle_A_case_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "original": 875,
                    "effective": 875
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "original": 906,
                    "effective": 906
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "original": 948,
                    "effective": 948
                },
                "blimp_principle_A_case_1_filtered": {
                    "original": 912,
                    "effective": 912
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "original": 718,
                    "effective": 718
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "original": 861,
                    "effective": 861
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "original": 986,
                    "effective": 986
                },
                "blimp_intransitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_wh_island_filtered": {
                    "original": 960,
                    "effective": 960
                },
                "blimp_causative_filtered": {
                    "original": 818,
                    "effective": 818
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "original": 967,
                    "effective": 967
                },
                "arc_easy": {
                    "original": 2376,
                    "effective": 2376
                },
                "arc_challenge": {
                    "original": 1172,
                    "effective": 1172
                }
            },
            "config": {
                "model": "modis",
                "model_args": "pretrained=evo_exp_full_a/14M/hiercache_gpt_14M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
                "model_num_parameters": 5735798,
                "model_dtype": "torch.bfloat16",
                "model_revision": "main",
                "batch_size": "auto",
                "batch_sizes": [
                    64
                ],
                "device": null,
                "use_cache": null,
                "limit": null,
                "bootstrap_iters": 100000,
                "gen_kwargs": null,
                "random_seed": 0,
                "numpy_seed": 1234,
                "torch_seed": 1234,
                "fewshot_seed": 1234
            },
            "date": 1730355597.6671097,
            "tokenizer_pad_token": [
                "</s>",
                "2"
            ],
            "tokenizer_eos_token": [
                "</s>",
                "2"
            ],
            "tokenizer_bos_token": [
                "<s>",
                "1"
            ],
            "eot_token_id": 2,
            "max_length": 2048,
            "task_hashes": {},
            "model_source": "modis",
            "model_name": "evo_exp_full_a/14M/hiercache_gpt_14M",
            "model_name_sanitized": "evo_exp_full_a__14M__hiercache_gpt_14M",
            "system_instruction": null,
            "system_instruction_sha": null,
            "fewshot_as_multiturn": false,
            "chat_template": null,
            "chat_template_sha": null,
            "start_time": 2982770.942474374,
            "end_time": 2983083.489870796,
            "total_evaluation_time_seconds": "312.54739642189816"
        }
    }
}