{
    "scale": "14M",
    "verification_report": {
        "wandb_ids.json": {
            "pretrain": {
                "id": "s9q46dh4",
                "name": "evo_exp_full_a_hierarchicalgatedttt_14M_20241030024611"
            },
            "project": "model_discovery",
            "entity": "aristo",
            "evaluate": {
                "name": "evo_exp_full_a_hierarchicalgatedttt_14M_eval_20241030031456"
            }
        },
        "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,130.078297197,10.0004,8.6875,0.0004166666666666667,3.225182222795588e-05,1730281702.3678439,5\n1,143.543181132,8.876,6.9375,0.0008333333333333334,6.450364445591176e-05,1730281715.8328013,10\n2,156.965907531,8.2115,6.4375,0.0009999397620593029,9.675546668386763e-05,1730281729.2555554,15\n3,170.377273898,7.4869,6.34375,0.000999571699711836,0.00012900728891182352,1730281742.6668754,20\n4,183.883365851,6.6322,6.625,0.000998869313916784,0.0001612591111397794,1730281756.1730366,25\n5,197.302609331,5.8199,7.09375,0.0009978331270024887,0.00019351093336773527,1730281769.5922694,30\n6,210.743017047,5.1128,6.125,0.0009964639095280884,0.00022576275559569117,1730281783.0326912,35\n7,224.163289425,4.4135,6.0625,0.0009947626797104925,0.00025801457782364704,1730281796.4529052,40\n8,238.360637605,3.8733,4.40625,0.000992730702667185,0.0002902664000516029,1730281810.650287,45\n9,251.905929423,3.421,2.328125,0.0009903694894754223,0.0003225182222795588,1730281824.195634,50\n10,265.438874991,3.1022,1.0,0.0009876807960485221,0.00035477004450751466,1730281837.7285113,55\n11,278.844862928,2.9785,0.361328125,0.0009846666218300806,0.00038702186673547054,1730281851.1345387,60\n12,292.257311032,3.1163,0.1689453125,0.0009813292083070888,0.0004192736889634264,1730281864.547001,65\n13,305.659171167,3.0205,0.10546875,0.0009776710373430525,0.00045152551119138234,1730281877.948864,70\n14,319.04201821,3.1003,0.11865234375,0.0009736948293323593,0.0004837773334193382,1730281891.3316362,75\n15,332.449911851,3.1183,0.126953125,0.0009694035411772593,0.0005160291556472941,1730281904.7395937,80\n16,345.857003187,2.9747,0.12353515625,0.0009648003640889686,0.0005482809778752499,1730281918.1466782,85\n17,359.259371272,3.0118,0.1259765625,0.0009598887212145291,0.0005805328001032058,1730281931.549066,90\n18,372.673140594,3.0146,0.1298828125,0.0009546722650911894,0.0006127846223311618,1730281944.962741,95\n19,386.12389923,2.8128,0.10546875,0.0009491548749301997,0.0006450364445591176,1730281958.4135501,100\n20,399.663763156,2.8565,0.09912109375,0.0009433406537320415,0.0006772882667870735,1730281971.9533818,105\n21,413.087334417,2.9451,0.11181640625,0.0009372339252352355,0.0007095400890150293,1730281985.3770027,110\n22,426.519580398,2.725,0.2578125,0.0009308392307009998,0.0007417919112429853,1730281998.8092499,115\n23,439.944241698,2.7984,0.1416015625,0.0009241613255361454,0.0007740437334709411,1730282012.2338219,120\n24,453.376009289,2.7368,0.1357421875,0.0009172051757567245,0.000806295555698897,1730282025.6656532,125\n25,466.790187875,2.6802,0.14453125,0.0009099759542950583,0.0008385473779268528,1730282039.0798557,130\n26,480.210022838,2.6589,0.10595703125,0.0009024790371528927,0.0008707992001548088,1730282052.4996471,135\n27,493.662194651,2.5194,0.1474609375,0.00089471999940354,0.0009030510223827647,1730282065.9518456,140\n28,507.080495983,2.6002,0.134765625,0.0008867046110459841,0.0009353028446107205,1730282079.3701704,145\n29,520.58243918,2.5851,0.46875,0.000878438832714026,0.0009675546668386764,1730282092.8720763,150\n30,534.138472919,2.5433,0.1484375,0.000869928811243667,0.0009998064890666322,1730282106.4280684,155\n31,547.624706524,2.6556,0.1259765625,0.0008611808751020212,0.0010320583112945882,1730282119.9143984,160\n32,561.083505735,2.5844,0.1279296875,0.0008522015296811582,0.001064310133522544,1730282133.373188,165\n33,574.551317127,2.5313,0.1396484375,0.0008429974524603771,0.0010965619557504998,1730282146.8409672,170\n34,588.014012571,2.5145,0.126953125,0.000833575488040506,0.0011288137779784557,1730282160.3037047,175\n35,601.482675599,2.4468,0.1201171875,0.0008239426430539243,0.0011610656002064117,1730282173.772326,180\n36,614.927073069,2.4538,0.1298828125,0.0008141060809540877,0.0011933174224343676,1730282187.2167566,185\n37,628.355327062,2.4573,0.12353515625,0.0008040731166884352,0.0012255692446623235,1730282200.64502,190\n38,641.788518321,2.488,0.146484375,0.0007938512112586382,0.0012578210668902792,1730282214.0733573,195\n39,655.230293496,2.4342,0.14453125,0.0007834479661722347,0.0012900728891182352,1730282227.519987,200\n40,668.818975745,2.4553,0.142578125,0.0007728711177897772,0.001322324711346191,1730282241.1086423,205\n41,682.286744051,2.4527,0.1318359375,0.000762128531571699,0.001354576533574147,1730282254.5764341,210\n42,695.766448607,2.4038,0.181640625,0.0007512281962291725,0.0013868283558021027,1730282268.0560465,215\n43,709.17584021,2.3952,0.138671875,0.0007401782177833147,0.0014190801780300587,1730282281.4654636,220\n44,722.653505212,2.5024,0.1826171875,0.000728986813537155,0.0014513320002580146,1730282294.9432216,225\n45,736.143100923,2.4402,0.1455078125,0.0007176623059648464,0.0014835838224859705,1730282308.4327567,230\n46,749.650576589,2.359,0.16796875,0.0007062131165226687,0.0015158356447139264,1730282321.9402854,235\n47,763.156203813,2.4044,0.1552734375,0.0006946477593864227,0.0015480874669418822,1730282335.4458518,240\n48,776.630402215,2.4191,0.1513671875,0.0006829748351198735,0.001580339289169838,1730282348.9201126,245\n49,790.146234841,2.3876,0.16015625,0.0006712030242789519,0.001612591111397794,1730282362.4358969,250\n50,803.761095895,2.4632,0.1826171875,0.0006593410809564689,0.00164484293362575,1730282376.0508084,255\n51,817.250923577,2.3969,0.1328125,0.0006473978262721463,0.0016770947558537056,1730282389.5406058,260\n52,830.743899485,2.3606,0.126953125,0.0006353821418128014,0.0017093465780816616,1730282403.0335877,265\n53,844.348542794,2.3204,0.150390625,0.000623302963027565,0.0017415984003096175,1730282416.638228,270\n54,857.879675844,2.3657,0.1396484375,0.0006111692725830465,0.0017738502225375734,1730282430.1693418,275\n55,871.394767008,2.4302,0.138671875,0.0005989900936833841,0.0018061020447655294,1730282443.6844943,280\n56,885.018699057,2.4216,0.1640625,0.0005867744833601507,0.001838353866993485,1730282457.3084147,285\n57,898.579500667,2.3102,0.1533203125,0.0005745315257371029,0.001870605689221441,1730282470.8692362,290\n58,912.178974555,2.3678,0.1494140625,0.0005622703252747834,0.001902857511449397,1730282484.4686599,295\n59,925.71644284,2.3195,0.146484375,0.00055,0.0019351093336773529,1730282498.006098,300\n60,939.455842182,2.3033,0.12451171875,0.0005377296747252167,0.0019673611559053086,1730282511.745526,305\n61,953.012112428,2.2672,0.142578125,0.0005254684742628971,0.0019996129781332645,1730282525.301818,310\n62,966.602541182,2.2787,0.142578125,0.0005132255166398495,0.0020318648003612204,1730282538.8922203,315\n63,980.171704025,2.297,0.1396484375,0.000501009906316616,0.0020641166225891763,1730282552.4613845,320\n64,993.796294046,2.2216,0.1279296875,0.0004888307274169537,0.0020963684448171323,1730282566.0859842,325\n65,1007.414683746,2.2586,0.134765625,0.00047669703697243514,0.002128620267045088,1730282579.7043116,330\n66,1021.010368329,2.2832,0.142578125,0.00046461785818719884,0.002160872089273044,1730282593.3000662,335\n67,1034.623316746,2.2354,0.1376953125,0.00045260217372785375,0.0021931239115009996,1730282606.9130197,340\n68,1048.250857859,2.3852,0.1455078125,0.0004406589190435313,0.0022253757337289556,1730282620.540569,345\n69,1061.847388951,2.3454,0.1328125,0.00042879697572104834,0.0022576275559569115,1730282634.13706,350\n70,1075.552662087,2.2721,0.1484375,0.00041702516488012644,0.0022898793781848674,1730282647.8423705,355\n71,1089.215474557,2.1551,0.119140625,0.00040535224061357745,0.0023221312004128233,1730282661.5051641,360\n72,1102.915367475,2.2281,0.11376953125,0.00039378688347733136,0.0023543830226407793,1730282675.2050457,365\n73,1116.553798435,2.2329,0.13671875,0.00038233769403515374,0.002386634844868735,1730282688.8435197,370\n74,1130.20828578,2.2061,0.12890625,0.0003710131864628451,0.002418886667096691,1730282702.498,375\n75,1143.850952584,2.2184,0.150390625,0.0003598217822166854,0.002451138489324647,1730282716.1406515,380\n76,1157.470189687,2.2219,0.1259765625,0.0003487718037708277,0.0024833903115526025,1730282729.7598958,385\n77,1171.130517085,2.2345,0.1328125,0.0003378714684283011,0.0025156421337805585,1730282743.4202082,390\n78,1184.80478854,2.2441,0.1298828125,0.0003271288822102228,0.0025478939560085144,1730282757.0943866,395\n79,1198.453089911,2.2695,0.11474609375,0.00031655203382776524,0.0025801457782364703,1730282770.7427886,400\n80,1212.257085404,2.1963,0.1328125,0.0003061487887413619,0.0026123976004644263,1730282784.5467613,405\n81,1225.942452777,2.1693,0.1259765625,0.0002959268833115648,0.002644649422692382,1730282798.2321687,410\n82,1239.619943171,2.2733,0.130859375,0.00028589391904591257,0.002676901244920338,1730282811.9096186,415\n83,1253.246495889,2.2482,0.126953125,0.0002760573569460757,0.002709153067148294,1730282825.5362263,420\n84,1266.97189205,2.2784,0.11572265625,0.00026642451195949397,0.00274140488937625,1730282839.2615652,425\n85,1280.650811805,2.1951,0.1328125,0.000257002547539623,0.0027736567116042055,1730282852.9404738,430\n86,1294.325994533,2.2821,0.12890625,0.00024779847031884173,0.0028059085338321614,1730282866.6156611,435\n87,1308.022739196,2.3643,0.13671875,0.00023881912489797882,0.0028381603560601173,1730282880.3123994,440\n88,1321.664274131,2.3348,0.12353515625,0.00023007118875633284,0.0028704121782880732,1730282893.9539742,445\n89,1335.339350179,2.2133,0.12353515625,0.00022156116728597408,0.002902664000516029,1730282907.629041,450\n90,1349.122516064,2.2716,0.1298828125,0.0002132953889540159,0.002934915822743985,1730282921.4122193,455\n91,1362.816911905,2.2294,0.12451171875,0.00020528000059645996,0.002967167644971941,1730282935.1066294,460\n92,1376.522762023,2.2204,0.12109375,0.00019752096284710735,0.002999419467199897,1730282948.812443,465\n93,1390.216188277,2.2683,0.1318359375,0.00019002404570494168,0.003031671289427853,1730282962.5059097,470\n94,1403.909555855,2.3667,0.126953125,0.0001827948242432756,0.0030639231116558084,1730282976.199208,475\n95,1417.613517783,2.2613,0.119140625,0.0001758386744638546,0.0030961749338837643,1730282989.9031923,480\n96,1431.321281417,2.1934,0.130859375,0.00016916076929900025,0.0031284267561117202,1730283003.6109245,485\n97,1445.02954848,2.2443,0.13671875,0.0001627660747647645,0.003160678578339676,1730283017.3192668,490\n98,1458.716050744,2.309,0.130859375,0.0001566593462679586,0.003192930400567632,1730283031.0057302,495\n99,1472.425717291,2.2101,0.12353515625,0.00015084512506980026,0.003225182222795588,1730283044.7154088,500\n100,1486.253130348,2.2896,0.1240234375,0.00014532773490881065,0.003257434045023544,1730283058.5427756,505\n101,1499.996822711,2.1763,0.11572265625,0.00014011127878547086,0.0032896858672515,1730283072.2865202,510\n102,1513.736475781,2.2713,0.125,0.00013519963591103145,0.003321937689479456,1730283086.0261157,515\n103,1527.552230911,2.251,0.1298828125,0.0001305964588227407,0.0033541895117074113,1730283099.8419254,520\n104,1541.396945517,2.2842,0.12158203125,0.0001263051706676407,0.0033864413339353672,1730283113.6866019,525\n105,1555.20220651,2.3721,0.126953125,0.0001223289626569475,0.003418693156163323,1730283127.49189,530\n106,1569.009159954,2.2094,0.1259765625,0.0001186707916929113,0.003450944978391279,1730283141.2988353,535\n107,1582.806793759,2.2489,0.11865234375,0.00011533337816991932,0.003483196800619235,1730283155.096459,540\n108,1596.589402251,2.2258,0.1181640625,0.00011231920395147784,0.003515448622847191,1730283168.8790128,545\n109,1610.37059806,2.2318,0.1201171875,0.00010963051052457776,0.003547700445075147,1730283182.6602454,550\n110,1624.324031762,2.2485,0.1240234375,0.00010726929733281514,0.003579952267303103,1730283196.6137156,555\n111,1638.025550911,2.3079,0.1337890625,0.00010523732028950771,0.0036122040895310587,1730283210.3152356,560\n112,1651.873741408,2.2766,0.1103515625,0.00010353609047191165,0.003644455911759014,1730283224.163375,565\n113,1665.733257265,2.3103,0.126953125,0.00010216687299751144,0.00367670773398697,1730283238.0229576,570\n114,1679.512575709,2.3185,0.12158203125,0.0001011306860832161,0.003708959556214926,1730283251.802234,575\n115,1693.363940947,2.266,0.1298828125,0.000100428300288164,0.003741211378442882,1730283265.6536443,580\n116,1707.164327196,2.2436,0.12109375,0.0001000602379406972,0.003773463200670838,1730283279.4540212,585\n117,1717.356893826,,,,0.0037928142940076115,1730283289.6465664,588\n",
        "system_metrics.csv": "system.gpu.1.correctedMemoryErrors,system.gpu.1.pcieLinkGen,system.gpu.3.correctedMemoryErrors,system.gpu.4.uncorrectedMemoryErrors,system.gpu.7.pcieLinkGen,GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),system.gpu.0.smClock,system.gpu.3.pcieLinkGen,system.gpu.7.uncorrectedMemoryErrors,system.gpu.5.smClock,system.gpu.7.correctedMemoryErrors,GPU 6 Time Spent Accessing Memory (%),GPU 7 Utilization (%),system.gpu.3.uncorrectedMemoryErrors,system.gpu.7.smClock,system.gpu.2.correctedMemoryErrors,system.gpu.7.memoryClock,GPU 2 Time Spent Accessing Memory (%),system.gpu.3.memoryClock,GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),_runtime,system.gpu.4.enforcedPowerLimitWatts,system.gpu.0.correctedMemoryErrors,system.gpu.1.memoryClock,GPU 6 Memory Allocated (%),system.gpu.1.uncorrectedMemoryErrors,GPU 1 Memory Allocated (%),system.gpu.6.pcieLinkGen,system.gpu.5.enforcedPowerLimitWatts,system.gpu.3.smClock,system.gpu.1.enforcedPowerLimitWatts,system.gpu.4.correctedMemoryErrors,GPU 4 Memory Allocated (%),system.gpu.4.memoryClock,GPU 1 Utilization (%),system.gpu.7.enforcedPowerLimitWatts,system.gpu.4.smClock,system.gpu.0.pcieLinkGen,system.gpu.6.correctedMemoryErrors,GPU 4 Utilization (%),system.gpu.2.enforcedPowerLimitWatts,GPU 2 Memory Allocated (%),GPU 5 Utilization (%),system.gpu.6.smClock,system.gpu.2.smClock,system.gpu.0.uncorrectedMemoryErrors,GPU 5 Memory Allocated (%),system.gpu.2.memoryClock,system.gpu.5.uncorrectedMemoryErrors,GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),system.gpu.5.pcieLinkGen,system.gpu.4.pcieLinkGen,system.gpu.2.uncorrectedMemoryErrors,system.gpu.3.enforcedPowerLimitWatts,system.gpu.6.uncorrectedMemoryErrors,system.gpu.5.memoryClock,system.gpu.2.pcieLinkGen,GPU 0 Memory Allocated (%),system.gpu.0.memoryClock,system.gpu.0.enforcedPowerLimitWatts,system.gpu.5.correctedMemoryErrors,GPU 7 Time Spent Accessing Memory (%),GPU 6 Utilization (%),system.gpu.6.enforcedPowerLimitWatts,system.gpu.6.memoryClock,system.gpu.1.smClock,GPU 7 Memory Allocated (%),system.memory_percent,Process Memory In Use (non-swap) (%),Process CPU Utilization (%),Process CPU Threads In Use\n0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,7.0,1.0309488147955197,10.545467624,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,4.2349081792133365,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,20.368205764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,20.368634825,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.361346208816051,0.10022294972672245,,\n,,,,,,,,,,,,,,,,,,,,,,,,,30.368703529,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,30.368725368,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.452139598745611,0.10022294972672245,,\n,,,,,,,,,,,,,,,,,,,,,,,,,30.370117528,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,0.0,0.0,210.0,4.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,1.0309488147955197,30.395409508,350.0,0.0,9000.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,9000.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,1.0309488147955197,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,40.368051039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,40.368985999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,40.392841682,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.19825363048555503,170.0\n,,,,,,,,,,,,,,,,,,,,,,,,,50.368905977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,50.368906967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.4243210901572447,0.10023279243021298,,\n,,,,,,,,,,,,,,,,,,,,,,,,,50.393356677,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.16835824552294668,170.0\n,,,,,,,,,,,,,,,,,,,,,,,,,60.368020699,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.886508325051361,0.10023279243021298,,\n,,,,,,,,,,,,,,,,,,,,,,,,,60.368108748,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,60.369120756,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,60.396967695,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.14622446845770182,170.0\n0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,0.0,1.0309488147955197,60.406317183,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,10.061078188764435,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,70.39269452,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.12927759652179846,170.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,61.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,85.0,100.0,100.0,99.0,75.97233980203177,70.437976955,350.0,0.0,9000.0,75.97233980203177,0.0,75.97233980203177,4.0,350.0,2520.0,350.0,0.0,75.97233980203177,9000.0,100.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.97233980203177,79.0,2520.0,2520.0,0.0,75.97233980203177,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.50034188590779,9000.0,350.0,0.0,60.0,100.0,350.0,9000.0,2520.0,60.49087761569854,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,80.368471783,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,80.370389441,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,98.0,97.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,100.0,99.0,100.0,96.0,75.98970543544326,80.429308526,350.0,0.0,9000.0,75.98970543544326,0.0,75.98970543544326,4.0,350.0,2520.0,350.0,0.0,75.98970543544326,9000.0,97.0,350.0,2520.0,4.0,0.0,96.0,350.0,75.98970543544326,98.0,2520.0,2520.0,0.0,75.98970543544326,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.94629135191457,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,90.368915923,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.688180749529216,0.10023279243021298,,\n,,,,,,,,,,,,,,,,,,,,,,,,,90.369249885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,90.392449619,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.1049358792783175,170.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,98.0,97.0,75.98970543544326,90.427713083,350.0,0.0,9000.0,75.98970543544326,0.0,75.98970543544326,4.0,350.0,2520.0,350.0,0.0,75.98970543544326,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,75.98970543544326,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.94629135191457,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,100.369659474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,1.0309488147955197,100.393454825,350.0,0.0,9000.0,1.0309488147955197,0.0,1.0309488147955197,4.0,350.0,2520.0,350.0,0.0,1.0309488147955197,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,2520.0,2520.0,0.0,1.0309488147955197,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,1.0309488147955197,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,1.0309488147955197,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,110.369581661,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,110.392619129,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.08909693075375251,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,120.368320492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,120.39288761,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.08263467135661115,45.0\n0.0,4.0,0.0,0.0,4.0,95.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,95.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,96.0,76.02877811061909,120.414845202,350.0,0.0,9000.0,76.02877811061909,0.0,76.02877811061909,4.0,350.0,2520.0,350.0,0.0,76.02877811061909,9000.0,96.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98536402709038,100.0,2520.0,2520.0,0.0,76.02877811061909,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.52204892767213,9000.0,350.0,0.0,99.0,96.0,350.0,9000.0,2520.0,75.98536402709038,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,130.367979285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,130.393079261,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07705776973607242,45.0\n0.0,4.0,0.0,0.0,4.0,34.0,0.0,2520.0,4.0,0.0,1260.0,0.0,0.0,46.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,10.0,0.0,37.0,37.0,76.03311951897196,130.419765145,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,75.98970543544326,14.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,34.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,47.0,0.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,140.368163647,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,140.370466448,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,140.393135628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07217013814289536,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,99.0,100.0,97.0,76.03311951897196,140.412646274,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,93.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,150.36885214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,150.368875879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.6846010339828155,0.10023847091299597,,\n,,,,,,,,,,,,,,,,,,,,,,,,,150.392707755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.06784739824709801,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,150.413897937,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,160.368760882,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.693030930956929,0.10023847091299597,,\n,,,,,,,,,,,,,,,,,,,,,,,,,160.370189462,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,160.431077337,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,170.368486683,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,170.392549536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.060617694914661596,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,180.368617861,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.700629119486093,0.10023847091299597,,\n,,,,,,,,,,,,,,,,,,,,,,,,,180.368761948,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,180.370611069,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,180.396516495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.05758575153412054,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,180.432217355,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,190.368085773,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.631542047989562,0.10023847091299597,,\n,,,,,,,,,,,,,,,,,,,,,,,,,190.36818709,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,190.392464081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.054829337716493544,45.0\n0.0,4.0,0.0,0.0,4.0,96.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,99.0,96.0,100.0,100.0,76.03311951897196,190.412628568,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,94.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,95.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,98.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,210.368720149,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,210.369415674,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.633504910204884,0.10023847091299597,,\n,,,,,,,,,,,,,,,,,,,,,,,,,210.370267376,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,210.393018921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.050047647656780485,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,100.0,0.0,1260.0,0.0,9000.0,100.0,9000.0,100.0,97.0,100.0,100.0,76.03311951897196,210.433722981,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,96.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,220.368494409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.629997122107069,0.10023847091299597,,\n,,,,,,,,,,,,,,,,,,,,,,,,,220.395229311,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04794421240317748,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,230.368829713,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.6367514880946805,0.10023847091299597,,\n,,,,,,,,,,,,,,,,,,,,,,,,,230.368944491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,230.370497708,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,230.392788574,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04602755924658294,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,230.430876301,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,99.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,240.368363263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,240.371451548,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,240.392460592,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04426071019710913,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,250.37244863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,250.392547544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.042626545845543706,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,260.392588751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04111089560516216,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,270.368549732,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,270.36864005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.6450390444337,0.10024036374059031,,\n,,,,,,,,,,,,,,,,,,,,,,,,,270.370190348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,270.43296749,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,280.369561895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,76.03311951897196,280.425711586,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,290.368072344,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.642348957856637,0.10024036374059031,,\n,,,,,,,,,,,,,,,,,,,,,,,,,290.370625352,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,1260.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,76.03311951897196,290.408101659,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,310.370587593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,310.392670329,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03491489354220223,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,310.414396522,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,320.36924896,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.646640376578504,0.10024036374059031,,\n,,,,,,,,,,,,,,,,,,,,,,,,,320.369415106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,320.370337138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,320.39307675,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03391097844426889,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,330.368215089,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.6498278982473575,0.10024036374059031,,\n,,,,,,,,,,,,,,,,,,,,,,,,,330.368379195,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,330.37011381,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,330.392631309,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.032942408582254855,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,330.410999043,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,340.36857347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.649102566713211,0.10024036374059031,,\n,,,,,,,,,,,,,,,,,,,,,,,,,340.370085619,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,340.411822616,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,350.368707903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.657599469784163,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,350.370645863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,350.392970507,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.031196120246614466,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,360.368535621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.654236672280073,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,360.370255265,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,360.392771297,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.030387430294349663,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,360.416202819,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,95.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,370.368609257,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.655992837722094,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,370.369998739,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,370.392582509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.029630785272936788,45.0\n0.0,4.0,0.0,0.0,4.0,93.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,86.0,9000.0,100.0,84.0,100.0,100.0,76.03311951897196,370.418208527,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,92.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,88.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,380.368380766,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.660156679864104,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,380.368384196,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,99.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,76.03311951897196,380.419770811,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,95.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,390.410209736,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,400.368183556,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,400.368262755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.6642429160747465,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,400.370371522,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,400.413285552,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,410.368763204,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,410.368766714,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.672171970867399,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,410.39261572,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.026931751124065404,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,420.36868816,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.675466626578093,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,420.368909125,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,420.411749919,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,430.371893271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,440.368007312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.675778564565639,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,440.369801386,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,19.0,4.0,2520.0,4.0,0.0,2520.0,0.0,100.0,0.0,0.0,2520.0,0.0,9000.0,48.0,9000.0,23.0,0.0,1.0,1.0,76.03311951897196,440.41324503,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,0.0,350.0,2520.0,4.0,0.0,4.0,350.0,75.98970543544326,23.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,19.0,47.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,0.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n0.0,4.0,0.0,0.0,4.0,97.0,99.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,98.0,97.0,76.03311951897196,450.432634254,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,96.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,98.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,460.368130583,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,460.368159743,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.675625245530497,0.10025626349238269,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,76.03311951897196,460.409100999,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,470.39580185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02372022966328208,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,470.41119822,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,480.368294001,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,480.370314201,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,1.0,83.0,2520.0,4.0,0.0,2520.0,0.0,1.0,72.0,0.0,2520.0,0.0,9000.0,96.0,9000.0,27.0,0.0,64.0,70.0,76.03311951897196,480.438543422,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,6.0,350.0,2520.0,4.0,0.0,82.0,350.0,75.98970543544326,36.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,0.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,64.0,14.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,490.368544188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,490.408707033,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,500.370269504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,510.368697008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,510.392402644,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02198368370087614,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,48.0,2520.0,4.0,0.0,2520.0,0.0,100.0,93.0,0.0,2520.0,0.0,9000.0,93.0,9000.0,95.0,100.0,61.0,93.0,76.03311951897196,510.432688308,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,92.0,350.0,75.98970543544326,95.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,59.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,520.368699731,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,520.370499845,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,520.432619874,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,530.368303396,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.686649073439883,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,540.368784724,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,540.368868973,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.690491134890856,0.10025626349238269,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,540.421393155,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,550.368148562,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,550.369525004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,550.392961078,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.020478743874335677,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,560.368970553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,560.392705041,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.02013683372556165,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,560.417941838,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,570.368095787,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,570.369251064,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,570.392665068,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.019799957477828384,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,570.418613143,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,580.368080118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,580.368106967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.703899925569098,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,580.392526593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01948751514298322,45.0\n0.0,4.0,0.0,0.0,4.0,96.0,94.0,2520.0,4.0,0.0,2520.0,0.0,83.0,93.0,0.0,2520.0,0.0,9000.0,93.0,9000.0,86.0,86.0,90.0,93.0,76.03311951897196,580.40973838,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,92.0,350.0,2520.0,4.0,0.0,93.0,350.0,75.98970543544326,92.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,96.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,90.0,93.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,590.367978582,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.70009269214586,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,590.368070521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,600.368257277,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,600.37116125,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,600.392975297,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.018880314507279686,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,99.0,100.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,100.0,98.0,100.0,97.0,76.03311951897196,600.425934954,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,98.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,610.369029095,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,610.369123723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.704895174318198,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,620.368621618,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7069822060237065,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,620.370336164,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,620.392578364,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.018311296242625574,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,620.421662289,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,630.368294756,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7079335411726175,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,630.368554321,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,630.370394554,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,640.368839949,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,640.369104054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7128318004212275,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,640.370553005,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,640.392435343,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.017776976346609217,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,640.430618679,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,650.368576009,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,650.369930842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,650.392677543,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.017521868809560866,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,98.0,97.0,76.03311951897196,650.419477274,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,660.368156308,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,660.369472842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,660.393031337,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.017268493622655954,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,670.36880427,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.715918245096544,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,670.368869788,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,670.370275351,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,670.4144854,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,680.368960401,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,680.370485661,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,680.392452279,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.016794839522336003,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,690.368861935,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7166878687964,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,690.3701724,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,690.397563531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.016573630205429218,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,690.432851597,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,700.368799513,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,700.370593938,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,700.392684763,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01634764867374691,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,710.368405098,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.720894488842041,0.10025626349238269,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,710.42940675,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,720.367997882,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,720.368141929,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.721675848072981,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,720.392827014,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.015924790504490468,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,89.0,92.0,76.03311951897196,720.426196019,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,730.368760887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,730.368776687,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.717457492496254,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,740.392882809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.015524262742624717,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,750.368904552,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.720188085583836,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,750.36898388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,750.370590999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,750.392562119,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01532673144395409,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,85.0,100.0,100.0,100.0,76.03311951897196,750.418673427,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,84.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,760.368215816,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.724813020527825,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,760.368384662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,760.370278495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,760.42827644,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,770.369090354,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,770.392877519,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.014961706853721729,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,98.0,100.0,100.0,76.03311951897196,770.41686474,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,99.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,780.368819167,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.730034953295066,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,780.370691031,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,790.36849263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.72508861622556,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,790.370192927,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,14.0,0.0,2520.0,4.0,0.0,2520.0,0.0,28.0,0.0,0.0,2520.0,0.0,9000.0,11.0,9000.0,50.0,16.0,0.0,0.0,76.03311951897196,790.405050186,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,23.0,350.0,2520.0,4.0,0.0,9.0,350.0,75.98970543544326,52.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,8.0,18.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,0.0,31.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,800.368385575,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.727169590882768,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,810.369505401,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,810.370447342,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,98.0,100.0,100.0,100.0,76.03311951897196,810.418786939,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,99.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,95.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,820.36845215,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,820.369559079,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,35.0,2520.0,4.0,0.0,2520.0,0.0,55.0,93.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,100.0,100.0,13.0,93.0,76.03311951897196,820.414790817,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,93.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,11.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,830.368980639,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,830.392766166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01395165701761079,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,830.413857755,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,99.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,840.368032684,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,840.368121342,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.734210152402642,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,840.369104493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,850.369048345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,850.371022147,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,850.392564398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013647580739299071,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,860.39267972,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013500751889518438,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,870.368697511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.739046326906158,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,870.396997651,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013357238422214236,45.0\n0.0,4.0,0.0,0.0,4.0,98.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,100.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,100.0,99.0,100.0,100.0,76.03311951897196,870.418918514,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,98.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,880.369955979,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,890.368814761,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.740783942637754,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,890.392671768,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.013084035906626355,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,900.36903458,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.740970196873036,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,900.393234211,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012949759547383975,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,910.368806421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,910.36885776,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.742108921953785,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,910.392680838,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01281839755361543,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,99.0,100.0,100.0,98.0,76.03311951897196,910.414575913,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,98.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,920.368483763,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,920.370243649,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,920.392661064,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012689841868537418,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,920.411225305,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,930.368550847,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.746715685752869,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,930.370109786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,940.369211834,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,940.36942511,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7507405943494545,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,940.371156027,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,940.417186446,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,950.36817163,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.747079865782018,0.10025626349238269,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,950.413898925,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,960.368140679,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7471748857272535,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,960.397335294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012205961063790783,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,960.417581843,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,98.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,970.368161208,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,970.369896114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,970.392586445,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.012090123769749014,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,970.413489671,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,980.368578359,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.752232521059306,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,980.370361664,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,980.392681393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011980554445017855,45.0\n0.0,4.0,0.0,0.0,4.0,56.0,37.0,2520.0,4.0,0.0,2520.0,0.0,74.0,31.0,0.0,2520.0,0.0,9000.0,59.0,9000.0,0.0,63.0,25.0,27.0,76.03311951897196,980.407115594,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,65.0,350.0,2520.0,4.0,0.0,41.0,350.0,75.98970543544326,0.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,54.0,60.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,27.0,72.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,990.368759481,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.761167803001106,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,990.392585641,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011869265941477669,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,990.422514372,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1000.368733065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.763571315480388,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1000.368761314,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1000.370385393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1000.394523097,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01176016576512378,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1010.368818649,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.760614718778043,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1010.368820189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1010.370247831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1010.392500212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011653196396161324,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,61.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,90.0,100.0,100.0,100.0,76.03311951897196,1010.41899028,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1020.368488643,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1020.392804034,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011548292714693287,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1020.412844238,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1030.368571661,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.766360964788913,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1030.369869056,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1030.423594419,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,98.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1040.413607561,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1050.368741182,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1050.368788021,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.769097614924797,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1050.396400879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011245379864129412,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1050.411721924,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1060.368066777,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.771308058989457,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1060.368092737,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1060.42035946,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1070.368451557,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.775144063392129,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1070.368591965,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1070.369424619,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1070.392383907,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.011052740031469681,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1080.368230862,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.768950352937958,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1080.370219764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,96.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1080.412719056,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,98.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1090.368849373,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1090.368853092,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.771459863762523,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1090.370461321,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1090.393093116,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010867061217502536,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1090.408432271,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,98.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1100.36815142,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1100.369062752,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,96.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,100.0,99.0,100.0,100.0,76.03311951897196,1110.412238824,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,97.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1120.369167082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7802978543659735,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1120.370551435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1120.392540773,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010597347473426704,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1120.427222816,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1130.368329485,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1140.368626651,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7785428246205095,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1140.371043705,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1140.392936164,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010430977998511027,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1140.440667027,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,1260.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1150.368131466,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.777855349638249,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1150.369621927,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1150.392639606,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01034825398666102,45.0\n0.0,4.0,0.0,0.0,4.0,96.0,100.0,2520.0,4.0,0.0,1260.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1150.43146854,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1160.368599206,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.776816187288961,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1160.370019669,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1160.392525867,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010266931325900116,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,68.0,100.0,100.0,76.03311951897196,1160.418257212,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1170.368561217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1170.370017009,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1170.392456229,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01018697902706974,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1170.415420538,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1180.36794945,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1180.368921232,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1180.396162189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.01010837070354209,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,96.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,100.0,100.0,100.0,98.0,76.03311951897196,1180.411392227,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,98.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1190.368768414,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1190.368888672,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7796709498667305,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1190.393069468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.010027800807545778,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1190.405767035,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1200.368408879,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1200.392591315,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009951791894804956,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1210.36855771,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.781937421628183,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1210.368697798,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1210.370176949,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1210.39678483,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009877018724021814,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1220.368420943,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.781427872439789,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1220.368626549,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,99.0,2520.0,4.0,0.0,2520.0,0.0,100.0,97.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,99.0,98.0,76.03311951897196,1220.413240904,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,96.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,98.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1230.370112986,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1240.368415617,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.790290469801967,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1240.370097615,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1240.392882718,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009662968808201016,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,87.0,2520.0,4.0,0.0,2520.0,0.0,100.0,28.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,65.0,100.0,100.0,76.03311951897196,1240.408113476,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,65.0,350.0,2520.0,4.0,0.0,86.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,29.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1250.368702852,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7838696200364765,0.10025626349238269,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1250.405169654,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1260.368422551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1260.368493809,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.78551448721595,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1260.370456322,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1260.392632388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009520739227893418,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1260.422107193,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1270.36809286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1270.392599942,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.00945280878548475,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1280.392602075,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009382902153362977,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1290.368280042,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1290.368403189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.788447234290607,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1290.370028908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1300.368659364,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1300.368686543,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.7899720962006,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1300.370161175,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,93.0,86.0,2520.0,4.0,0.0,2520.0,0.0,90.0,94.0,0.0,2520.0,0.0,9000.0,90.0,9000.0,93.0,87.0,98.0,97.0,76.03311951897196,1300.411193871,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,93.0,350.0,2520.0,4.0,0.0,93.0,350.0,75.98970543544326,92.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,88.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,93.0,92.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1310.368080811,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.79105744354319,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1310.368217628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1310.369810398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1310.392522524,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.00918837014719269,45.0\n0.0,4.0,0.0,0.0,4.0,98.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1310.407618495,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,99.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1320.368290379,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.794391091502326,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1320.368502965,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1320.369967437,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1320.392568635,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009125466035312212,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1320.411534962,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,98.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1330.368988402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.800177844023715,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1330.370942635,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1330.393980415,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.00906640924203546,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,89.0,100.0,0.0,2520.0,0.0,9000.0,99.0,9000.0,90.0,94.0,90.0,93.0,76.03311951897196,1330.42824521,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,95.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,92.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,98.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,93.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1340.368836287,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.803910500039736,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1340.369121231,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1340.392622442,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.009005334035844739,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,99.0,76.03311951897196,1340.415318408,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1350.412273062,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1360.368828308,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1360.392535986,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008883000002464428,45.0\n0.0,4.0,0.0,0.0,4.0,93.0,90.0,2520.0,4.0,0.0,2520.0,0.0,90.0,93.0,0.0,2520.0,0.0,9000.0,89.0,9000.0,92.0,88.0,100.0,100.0,76.03311951897196,1360.427278792,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,93.0,350.0,2520.0,4.0,0.0,93.0,350.0,75.98970543544326,93.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,90.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,84.0,93.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1370.368712678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1380.368375684,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.802291753881064,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1380.370074722,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1380.413026111,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1390.368452902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.801377139587483,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1390.36853211,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1390.369524922,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1390.392615541,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008707417896528425,45.0\n0.0,4.0,0.0,0.0,4.0,43.0,23.0,2520.0,4.0,0.0,2520.0,0.0,59.0,18.0,0.0,2520.0,0.0,9000.0,43.0,9000.0,81.0,47.0,7.0,15.0,76.03311951897196,1390.41566719,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,52.0,350.0,2520.0,4.0,0.0,27.0,350.0,75.98970543544326,80.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,35.0,48.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,8.0,60.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1400.368179046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.809285373276599,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1400.392851925,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008651467892911395,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1400.433682525,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1410.368191772,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.804287172731008,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1410.369799332,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1410.425199115,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1420.368473303,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1420.368649059,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.809769937140747,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1420.370419796,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1420.392498844,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008541897408984173,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1430.36814502,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.805146895024353,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1430.368315527,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1430.407783675,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1440.392488434,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008432648970880776,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1450.368801829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.806139115249302,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1450.368967106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1450.370432868,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,98.0,76.03311951897196,1450.409273428,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,97.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,96.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1460.368060172,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.8075144437793425,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1460.368320917,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1460.370080944,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1460.393143064,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008329019755408054,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1470.368873429,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.810388134633056,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1470.369174863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1470.412849281,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1480.36866142,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.81386942314455,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1490.369040891,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.817125843737838,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1490.369076411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1490.370792908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1490.392839858,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.00817872900666911,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1500.368432334,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1500.369284298,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1500.395848402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.008127370070844518,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1510.367982146,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1510.368175992,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.814310830539548,0.10025626349238269,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1510.415739717,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1520.368622678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1520.368876903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.814643968196151,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1520.369783316,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1520.42002422,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,1260.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1530.368504214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.820217209764899,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1530.36870566,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1530.370020715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1530.392576076,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007984883611761964,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,98.0,98.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,97.0,100.0,100.0,100.0,76.03311951897196,1530.425934062,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,99.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1540.393156179,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007936089948673604,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,99.0,100.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,100.0,97.0,100.0,100.0,76.03311951897196,1540.424022803,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,95.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,98.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,97.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1550.368757768,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1550.368883565,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.8239797724569105,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1550.370346788,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1550.3928198,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.00789292421329214,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1550.425709444,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1560.369193352,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1560.392463289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007847826078997781,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1560.423686965,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1570.368638033,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1570.370184024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1570.39243402,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007800814698601573,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,99.0,100.0,100.0,76.03311951897196,1570.409910578,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1580.368766329,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.828962073250709,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1580.370097663,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1580.392831951,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007756853206457715,45.0\n0.0,4.0,0.0,0.0,4.0,93.0,89.0,2520.0,4.0,0.0,2520.0,0.0,93.0,93.0,0.0,2520.0,0.0,9000.0,90.0,9000.0,94.0,94.0,90.0,93.0,76.03311951897196,1580.425094197,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,92.0,350.0,2520.0,4.0,0.0,93.0,350.0,75.98970543544326,95.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,92.0,93.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,87.0,93.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1590.369117908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.8244245869415785,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1590.370693738,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1590.396731343,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007713438060757669,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1600.369386565,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1610.368285823,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1610.370092129,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1610.392818787,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007628215188122677,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1620.368208118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.829629105694951,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1620.393412049,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0075839857098349995,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1630.369160578,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.828862510519247,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1630.392993825,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007542674239267069,45.0\n,,,,,,,,,,,,,,,,,,,,,,,,,1640.368892126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.829892965861601,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1640.36919741,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1640.370886698,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1640.393160865,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007501862941048474,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,97.0,76.03311951897196,1640.417768007,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,95.0,350.0,75.98970543544326,97.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1650.39273307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007461547416031831,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1650.417603117,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1660.370510833,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1660.393417107,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007419366657465896,45.0\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1660.432833559,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1670.417100701,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,96.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,95.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1680.368624989,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,32.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,43.0,9000.0,100.0,100.0,0.0,0.0,76.03311951897196,1680.423679542,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,31.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,43.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1690.370404333,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1690.392632751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.007304991009018816,45.0\n0.0,4.0,0.0,0.0,4.0,97.0,97.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1690.408670646,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,97.0,350.0,2520.0,4.0,0.0,96.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,99.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1700.369192786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n0.0,4.0,0.0,0.0,4.0,100.0,100.0,2520.0,4.0,0.0,2520.0,0.0,100.0,100.0,0.0,2520.0,0.0,9000.0,100.0,9000.0,100.0,100.0,100.0,100.0,76.03311951897196,1700.410142969,350.0,0.0,9000.0,76.03311951897196,0.0,76.03311951897196,4.0,350.0,2520.0,350.0,0.0,76.03311951897196,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,75.98970543544326,100.0,2520.0,2520.0,0.0,76.03311951897196,9000.0,0.0,100.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,83.526390336025,9000.0,350.0,0.0,100.0,100.0,350.0,9000.0,2520.0,75.98970543544326,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1710.368372614,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1710.368426093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.833393939780076,0.10025626349238269,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1720.368338077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,1720.368396396,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.384276808137093,0.10026118484412792,,\n",
        "trainer_state.json": {},
        "eval_results.json": {
            "results": {
                "arc_challenge": {
                    "alias": "arc_challenge",
                    "acc,none": 0.2235494880546075,
                    "acc_stderr,none": 0.012174896631202666,
                    "acc_norm,none": 0.28924914675767915,
                    "acc_norm_stderr,none": 0.01325001257939347
                },
                "arc_easy": {
                    "alias": "arc_easy",
                    "acc,none": 0.25841750841750843,
                    "acc_stderr,none": 0.008982741341291388,
                    "acc_norm,none": 0.26304713804713803,
                    "acc_norm_stderr,none": 0.009034514898865944
                },
                "blimp_adjunct_island_filtered": {
                    "alias": "blimp_adjunct_island_filtered",
                    "acc,none": 0.8060344827586207,
                    "acc_stderr,none": 0.012986711960851131
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "alias": "blimp_anaphor_gender_agreement_filtered",
                    "acc,none": 0.721936148300721,
                    "acc_stderr,none": 0.014385858823874715
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "alias": "blimp_anaphor_number_agreement_filtered",
                    "acc,none": 0.7465091299677766,
                    "acc_stderr,none": 0.01426452283319124
                },
                "blimp_animate_subject_passive_filtered": {
                    "alias": "blimp_animate_subject_passive_filtered",
                    "acc,none": 0.6837988826815642,
                    "acc_stderr,none": 0.015551673652172568
                },
                "blimp_animate_subject_trans_filtered": {
                    "alias": "blimp_animate_subject_trans_filtered",
                    "acc,none": 0.7919826652221018,
                    "acc_stderr,none": 0.013367252178859718
                },
                "blimp_causative_filtered": {
                    "alias": "blimp_causative_filtered",
                    "acc,none": 0.4938875305623472,
                    "acc_stderr,none": 0.01749147852388408
                },
                "blimp_complex_NP_island_filtered": {
                    "alias": "blimp_complex_NP_island_filtered",
                    "acc,none": 0.7127659574468085,
                    "acc_stderr,none": 0.01556549998443276
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "acc,none": 0.7571743929359823,
                    "acc_stderr,none": 0.014253480010004224
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "acc,none": 0.6290832455216017,
                    "acc_stderr,none": 0.015688741822202427
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_1_filtered",
                    "acc,none": 0.6544671689989235,
                    "acc_stderr,none": 0.015610420567100155
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_2_filtered",
                    "acc,none": 0.7808807733619764,
                    "acc_stderr,none": 0.013564104715255924
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "acc,none": 0.7077826725403817,
                    "acc_stderr,none": 0.017440080654156816
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "acc,none": 0.7560975609756098,
                    "acc_stderr,none": 0.015005657836599132
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "acc,none": 0.7821466524973433,
                    "acc_stderr,none": 0.013463633700838914
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "acc,none": 0.7590529247910863,
                    "acc_stderr,none": 0.015971190160489472
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "acc,none": 0.7916666666666666,
                    "acc_stderr,none": 0.01402069624480117
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "acc,none": 0.6495176848874598,
                    "acc_stderr,none": 0.015628618444741137
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "alias": "blimp_distractor_agreement_relational_noun_filtered",
                    "acc,none": 0.7576142131979695,
                    "acc_stderr,none": 0.01527531819038555
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "alias": "blimp_distractor_agreement_relative_clause_filtered",
                    "acc,none": 0.7451205510907003,
                    "acc_stderr,none": 0.014774781070124355
                },
                "blimp_drop_argument_filtered": {
                    "alias": "blimp_drop_argument_filtered",
                    "acc,none": 0.8043478260869565,
                    "acc_stderr,none": 0.013085988351605316
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "alias": "blimp_ellipsis_n_bar_1_filtered",
                    "acc,none": 0.8291770573566085,
                    "acc_stderr,none": 0.013297820914954349
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "alias": "blimp_ellipsis_n_bar_2_filtered",
                    "acc,none": 0.37922705314009664,
                    "acc_stderr,none": 0.016871872778686643
                },
                "blimp_existential_there_object_raising_filtered": {
                    "alias": "blimp_existential_there_object_raising_filtered",
                    "acc,none": 0.7795566502463054,
                    "acc_stderr,none": 0.014556665894084098
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "alias": "blimp_existential_there_quantifiers_1_filtered",
                    "acc,none": 0.7182795698924731,
                    "acc_stderr,none": 0.014758698858623109
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "alias": "blimp_existential_there_quantifiers_2_filtered",
                    "acc,none": 0.29418221734357847,
                    "acc_stderr,none": 0.01510545496193433
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "alias": "blimp_existential_there_subject_raising_filtered",
                    "acc,none": 0.7987012987012987,
                    "acc_stderr,none": 0.013198112662365456
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "alias": "blimp_expletive_it_object_raising_filtered",
                    "acc,none": 0.6745718050065876,
                    "acc_stderr,none": 0.01701794353729163
                },
                "blimp_inchoative_filtered": {
                    "alias": "blimp_inchoative_filtered",
                    "acc,none": 0.5076023391812865,
                    "acc_stderr,none": 0.01710766993302825
                },
                "blimp_intransitive_filtered": {
                    "alias": "blimp_intransitive_filtered",
                    "acc,none": 0.6566820276497696,
                    "acc_stderr,none": 0.01612561496950791
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "alias": "blimp_irregular_past_participle_adjectives_filtered",
                    "acc,none": 0.7492195629552549,
                    "acc_stderr,none": 0.013989937210976851
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "alias": "blimp_irregular_past_participle_verbs_filtered",
                    "acc,none": 0.70276008492569,
                    "acc_stderr,none": 0.014899177560799545
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.654228855721393,
                    "acc_stderr,none": 0.016784231023112068
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.7040358744394619,
                    "acc_stderr,none": 0.015292485553784561
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "alias": "blimp_left_branch_island_echo_question_filtered",
                    "acc,none": 0.9060190073917634,
                    "acc_stderr,none": 0.009487310186989319
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "alias": "blimp_left_branch_island_simple_question_filtered",
                    "acc,none": 0.6845425867507886,
                    "acc_stderr,none": 0.015076787095794774
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                    "acc,none": 0.5866523143164694,
                    "acc_stderr,none": 0.01616494239165209
                },
                "blimp_npi_present_1_filtered": {
                    "alias": "blimp_npi_present_1_filtered",
                    "acc,none": 0.5291529152915292,
                    "acc_stderr,none": 0.01656485410599408
                },
                "blimp_npi_present_2_filtered": {
                    "alias": "blimp_npi_present_2_filtered",
                    "acc,none": 0.6575492341356673,
                    "acc_stderr,none": 0.015704634027155977
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "alias": "blimp_only_npi_licensor_present_filtered",
                    "acc,none": 0.6848072562358276,
                    "acc_stderr,none": 0.015652522182467203
                },
                "blimp_only_npi_scope_filtered": {
                    "alias": "blimp_only_npi_scope_filtered",
                    "acc,none": 0.8410991636798089,
                    "acc_stderr,none": 0.012643972812734005
                },
                "blimp_passive_1_filtered": {
                    "alias": "blimp_passive_1_filtered",
                    "acc,none": 0.6488095238095238,
                    "acc_stderr,none": 0.016479688282617245
                },
                "blimp_passive_2_filtered": {
                    "alias": "blimp_passive_2_filtered",
                    "acc,none": 0.6290143964562569,
                    "acc_stderr,none": 0.016084425455926584
                },
                "blimp_principle_A_c_command_filtered": {
                    "alias": "blimp_principle_A_c_command_filtered",
                    "acc,none": 0.857293868921776,
                    "acc_stderr,none": 0.011378113736556686
                },
                "blimp_principle_A_case_1_filtered": {
                    "alias": "blimp_principle_A_case_1_filtered",
                    "acc,none": 0.9320175438596491,
                    "acc_stderr,none": 0.008339716371196598
                },
                "blimp_principle_A_case_2_filtered": {
                    "alias": "blimp_principle_A_case_2_filtered",
                    "acc,none": 0.5912568306010929,
                    "acc_stderr,none": 0.016260737602693063
                },
                "blimp_principle_A_domain_1_filtered": {
                    "alias": "blimp_principle_A_domain_1_filtered",
                    "acc,none": 0.7352297592997812,
                    "acc_stderr,none": 0.014601945898763386
                },
                "blimp_principle_A_domain_2_filtered": {
                    "alias": "blimp_principle_A_domain_2_filtered",
                    "acc,none": 0.7704918032786885,
                    "acc_stderr,none": 0.013909451801136652
                },
                "blimp_principle_A_domain_3_filtered": {
                    "alias": "blimp_principle_A_domain_3_filtered",
                    "acc,none": 0.740701381509033,
                    "acc_stderr,none": 0.014294130804903995
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "alias": "blimp_principle_A_reconstruction_filtered",
                    "acc,none": 0.8066184074457083,
                    "acc_stderr,none": 0.012707293687187706
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.6573033707865169,
                    "acc_stderr,none": 0.01591794374644414
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.6232804232804233,
                    "acc_stderr,none": 0.015771203686335722
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "acc,none": 0.9912948857453754,
                    "acc_stderr,none": 0.003065965968620515
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "alias": "blimp_sentential_negation_npi_scope_filtered",
                    "acc,none": 0.9138920780711826,
                    "acc_stderr,none": 0.009510632145367815
                },
                "blimp_sentential_subject_island_filtered": {
                    "alias": "blimp_sentential_subject_island_filtered",
                    "acc,none": 0.8699271592091571,
                    "acc_stderr,none": 0.010856732592394131
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "alias": "blimp_superlative_quantifiers_1_filtered",
                    "acc,none": 0.5005107252298263,
                    "acc_stderr,none": 0.015988228644023012
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "alias": "blimp_superlative_quantifiers_2_filtered",
                    "acc,none": 0.4543610547667343,
                    "acc_stderr,none": 0.01586481874415105
                },
                "blimp_supplement_hypernym": {
                    "alias": "blimp_supplement_hypernym",
                    "acc,none": 0.6733966745843231,
                    "acc_stderr,none": 0.01617140623444367
                },
                "blimp_supplement_qa_congruence_easy": {
                    "alias": "blimp_supplement_qa_congruence_easy",
                    "acc,none": 0.46875,
                    "acc_stderr,none": 0.06287092313773097
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "alias": "blimp_supplement_qa_congruence_tricky",
                    "acc,none": 0.48484848484848486,
                    "acc_stderr,none": 0.039025510073744524
                },
                "blimp_supplement_subject_aux_inversion": {
                    "alias": "blimp_supplement_subject_aux_inversion",
                    "acc,none": 0.8818205327126972,
                    "acc_stderr,none": 0.0051919463081171666
                },
                "blimp_supplement_turn_taking": {
                    "alias": "blimp_supplement_turn_taking",
                    "acc,none": 0.8857142857142857,
                    "acc_stderr,none": 0.019047619047619046
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "alias": "blimp_tough_vs_raising_1_filtered",
                    "acc,none": 0.37130801687763715,
                    "acc_stderr,none": 0.01570041509953854
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "alias": "blimp_tough_vs_raising_2_filtered",
                    "acc,none": 0.9163043478260869,
                    "acc_stderr,none": 0.009135105490301124
                },
                "blimp_transitive_filtered": {
                    "alias": "blimp_transitive_filtered",
                    "acc,none": 0.6036866359447005,
                    "acc_stderr,none": 0.016611757815587335
                },
                "blimp_wh_island_filtered": {
                    "alias": "blimp_wh_island_filtered",
                    "acc,none": 0.9645833333333333,
                    "acc_stderr,none": 0.005968489239739764
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "alias": "blimp_wh_questions_object_gap_filtered",
                    "acc,none": 0.7520372526193247,
                    "acc_stderr,none": 0.01474243606349937
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_filtered",
                    "acc,none": 0.8841870824053452,
                    "acc_stderr,none": 0.010684503918438656
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "acc,none": 0.868144690781797,
                    "acc_stderr,none": 0.01156399739731513
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_filtered",
                    "acc,none": 0.8850174216027874,
                    "acc_stderr,none": 0.010877840984822985
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "acc,none": 0.9085714285714286,
                    "acc_stderr,none": 0.00974910591189533
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_filtered",
                    "acc,none": 0.7464635473340587,
                    "acc_stderr,none": 0.014358304734664854
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "acc,none": 0.6978021978021978,
                    "acc_stderr,none": 0.015231051115759914
                },
                "cola": {
                    "alias": "cola",
                    "mcc,none": -0.033258412376793875,
                    "mcc_stderr,none": 0.028554373321506402
                },
                "hellaswag": {
                    "alias": "hellaswag",
                    "acc,none": 0.2544313881696873,
                    "acc_stderr,none": 0.00434650985067984,
                    "acc_norm,none": 0.26269667396932883,
                    "acc_norm_stderr,none": 0.0043919956375421555
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "alias": "inverse_scaling_hindsight_neglect_10shot",
                    "acc,none": 0.4603174603174603,
                    "acc_stderr,none": 0.028127626334238494,
                    "acc_norm,none": 0.4603174603174603,
                    "acc_norm_stderr,none": 0.028127626334238494
                },
                "inverse_scaling_into_the_unknown": {
                    "alias": "inverse_scaling_into_the_unknown",
                    "acc,none": 0.512609649122807,
                    "acc_stderr,none": 0.01170680859108795,
                    "acc_norm,none": 0.512609649122807,
                    "acc_norm_stderr,none": 0.01170680859108795
                },
                "inverse_scaling_memo_trap": {
                    "alias": "inverse_scaling_memo_trap",
                    "acc,none": 0.5470085470085471,
                    "acc_stderr,none": 0.016279319793833152,
                    "acc_norm,none": 0.5384615384615384,
                    "acc_norm_stderr,none": 0.01630329877250074
                },
                "inverse_scaling_modus_tollens": {
                    "alias": "inverse_scaling_modus_tollens",
                    "acc,none": 0.901294498381877,
                    "acc_stderr,none": 0.00848731969481378,
                    "acc_norm,none": 1.0,
                    "acc_norm_stderr,none": 0.0
                },
                "inverse_scaling_neqa": {
                    "alias": "inverse_scaling_neqa",
                    "acc,none": 0.5233333333333333,
                    "acc_stderr,none": 0.028884243402038635,
                    "acc_norm,none": 0.5233333333333333,
                    "acc_norm_stderr,none": 0.028884243402038635
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "alias": "inverse_scaling_pattern_matching_suppression",
                    "acc,none": 0.5987394957983193,
                    "acc_stderr,none": 0.012975382652898281,
                    "acc_norm,none": 0.4474789915966387,
                    "acc_norm_stderr,none": 0.013162813764778134
                },
                "inverse_scaling_quote_repetition": {
                    "alias": "inverse_scaling_quote_repetition",
                    "acc,none": 0.16666666666666666,
                    "acc_stderr,none": 0.021552525004661323,
                    "acc_norm,none": 0.18333333333333332,
                    "acc_norm_stderr,none": 0.0223772924665725
                },
                "inverse_scaling_redefine_math": {
                    "alias": "inverse_scaling_redefine_math",
                    "acc,none": 0.5933333333333334,
                    "acc_stderr,none": 0.016382825894928725,
                    "acc_norm,none": 0.5933333333333334,
                    "acc_norm_stderr,none": 0.016382825894928725
                },
                "inverse_scaling_repetitive_algebra": {
                    "alias": "inverse_scaling_repetitive_algebra",
                    "acc,none": 0.483,
                    "acc_stderr,none": 0.015810153729833274,
                    "acc_norm,none": 0.482,
                    "acc_norm_stderr,none": 0.01580904569940659
                },
                "inverse_scaling_sig_figs": {
                    "alias": "inverse_scaling_sig_figs",
                    "acc,none": 0.400727377135474,
                    "acc_stderr,none": 0.0033900425249120372,
                    "acc_norm,none": 0.400727377135474,
                    "acc_norm_stderr,none": 0.0033900425249120372
                },
                "inverse_scaling_winobias_antistereotype": {
                    "alias": "inverse_scaling_winobias_antistereotype",
                    "acc,none": 0.6553398058252428,
                    "acc_stderr,none": 0.023442716055811892,
                    "acc_norm,none": 0.49514563106796117,
                    "acc_norm_stderr,none": 0.024662018785272584
                },
                "lambada_openai": {
                    "alias": "lambada_openai",
                    "perplexity,none": 52602403.23866656,
                    "perplexity_stderr,none": 5725510.341923843,
                    "acc,none": 0.0,
                    "acc_stderr,none": 0.0
                },
                "mathqa": {
                    "alias": "mathqa",
                    "acc,none": 0.18559463986599664,
                    "acc_stderr,none": 0.007117108995612721,
                    "acc_norm,none": 0.19497487437185929,
                    "acc_norm_stderr,none": 0.0072526151504096826
                },
                "mnli": {
                    "alias": "mnli",
                    "acc,none": 0.35272542027508913,
                    "acc_stderr,none": 0.004823248397461225
                },
                "mnli_mismatch": {
                    "alias": "mnli_mismatch",
                    "acc,none": 0.3528275020341741,
                    "acc_stderr,none": 0.004819393566914039
                },
                "mrpc": {
                    "alias": "mrpc",
                    "acc,none": 0.6151960784313726,
                    "acc_stderr,none": 0.02411733518239185
                },
                "openbookqa": {
                    "alias": "openbookqa",
                    "acc,none": 0.168,
                    "acc_stderr,none": 0.01673655354154187,
                    "acc_norm,none": 0.272,
                    "acc_norm_stderr,none": 0.019920483209566107
                },
                "piqa": {
                    "alias": "piqa",
                    "acc,none": 0.5272034820457019,
                    "acc_stderr,none": 0.01164854526242911,
                    "acc_norm,none": 0.499455930359086,
                    "acc_norm_stderr,none": 0.011665817258899291
                },
                "qa4mre_2011": {
                    "alias": "qa4mre_2011",
                    "acc,none": 0.11666666666666667,
                    "acc_stderr,none": 0.029428100038830653,
                    "acc_norm,none": 0.14166666666666666,
                    "acc_norm_stderr,none": 0.03196600376689893
                },
                "qa4mre_2012": {
                    "alias": "qa4mre_2012",
                    "acc,none": 0.1375,
                    "acc_stderr,none": 0.027310669005160493,
                    "acc_norm,none": 0.25625,
                    "acc_norm_stderr,none": 0.03462157845865139
                },
                "qa4mre_2013": {
                    "alias": "qa4mre_2013",
                    "acc,none": 0.24295774647887325,
                    "acc_stderr,none": 0.025493661645903932,
                    "acc_norm,none": 0.17253521126760563,
                    "acc_norm_stderr,none": 0.022460551373184274
                },
                "qnli": {
                    "alias": "qnli",
                    "acc,none": 0.4982610287387882,
                    "acc_stderr,none": 0.006765369634165052
                },
                "qqp": {
                    "alias": "qqp",
                    "acc,none": 0.3992085085332674,
                    "acc_stderr,none": 0.002435652247577622
                },
                "rte": {
                    "alias": "rte",
                    "acc,none": 0.4981949458483754,
                    "acc_stderr,none": 0.030096267148976653
                },
                "sciq": {
                    "alias": "sciq",
                    "acc,none": 0.165,
                    "acc_stderr,none": 0.011743632866916136,
                    "acc_norm,none": 0.194,
                    "acc_norm_stderr,none": 0.012510816141264348
                },
                "squad_completion": {
                    "alias": "squad_completion",
                    "contains,none": 0.002680965147453083,
                    "contains_stderr,none": "N/A"
                },
                "sst2": {
                    "alias": "sst2",
                    "acc,none": 0.45298165137614677,
                    "acc_stderr,none": 0.01686677979036808
                },
                "swag": {
                    "alias": "swag",
                    "acc,none": 0.26671998400479857,
                    "acc_stderr,none": 0.003126751918920545,
                    "acc_norm,none": 0.2529741077676697,
                    "acc_norm_stderr,none": 0.003073523839364724
                },
                "tinyGSM8k": {
                    "alias": "tinyGSM8k",
                    "exact_match,strict-match": 0.005531037620360234,
                    "exact_match_stderr,strict-match": "N/A",
                    "exact_match,flexible-extract": 0.005531037620360234,
                    "exact_match_stderr,flexible-extract": "N/A"
                },
                "tinyMMLU": {
                    "alias": "tinyMMLU",
                    "acc_norm,none": 0.27398458806867854,
                    "acc_norm_stderr,none": "N/A"
                },
                "tinyTruthfulQA": {
                    "alias": "tinyTruthfulQA",
                    "acc,none": 0.5322822504632055,
                    "acc_stderr,none": "N/A"
                },
                "triviaqa": {
                    "alias": "triviaqa",
                    "exact_match,remove_whitespace": 0.0,
                    "exact_match_stderr,remove_whitespace": 0.0
                },
                "winogrande": {
                    "alias": "winogrande",
                    "acc,none": 0.48066298342541436,
                    "acc_stderr,none": 0.014041972733713017
                },
                "wnli": {
                    "alias": "wnli",
                    "acc,none": 0.39436619718309857,
                    "acc_stderr,none": 0.05841251085444429
                },
                "wsc273": {
                    "alias": "wsc273",
                    "acc,none": 0.4725274725274725,
                    "acc_stderr,none": 0.030271155718081696
                }
            },
            "group_subtasks": {
                "arc_challenge": [],
                "arc_easy": [],
                "blimp_principle_A_reconstruction_filtered": [],
                "blimp_causative_filtered": [],
                "blimp_wh_island_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
                "blimp_intransitive_filtered": [],
                "blimp_superlative_quantifiers_2_filtered": [],
                "blimp_wh_vs_that_no_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
                "blimp_wh_vs_that_with_gap_filtered": [],
                "blimp_principle_A_case_1_filtered": [],
                "blimp_tough_vs_raising_1_filtered": [],
                "blimp_matrix_question_npi_licensor_present_filtered": [],
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
                "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
                "blimp_principle_A_case_2_filtered": [],
                "blimp_complex_NP_island_filtered": [],
                "blimp_tough_vs_raising_2_filtered": [],
                "blimp_wh_questions_subject_gap_long_distance_filtered": [],
                "blimp_principle_A_c_command_filtered": [],
                "blimp_anaphor_gender_agreement_filtered": [],
                "blimp_determiner_noun_agreement_irregular_1_filtered": [],
                "blimp_ellipsis_n_bar_2_filtered": [],
                "blimp_sentential_negation_npi_scope_filtered": [],
                "blimp_only_npi_licensor_present_filtered": [],
                "blimp_distractor_agreement_relational_noun_filtered": [],
                "blimp_existential_there_object_raising_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_principle_A_domain_2_filtered": [],
                "blimp_passive_2_filtered": [],
                "blimp_superlative_quantifiers_1_filtered": [],
                "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_irregular_past_participle_adjectives_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_wh_questions_subject_gap_filtered": [],
                "blimp_adjunct_island_filtered": [],
                "blimp_existential_there_quantifiers_2_filtered": [],
                "blimp_determiner_noun_agreement_irregular_2_filtered": [],
                "blimp_animate_subject_trans_filtered": [],
                "blimp_anaphor_number_agreement_filtered": [],
                "blimp_sentential_negation_npi_licensor_present_filtered": [],
                "blimp_determiner_noun_agreement_2_filtered": [],
                "blimp_passive_1_filtered": [],
                "blimp_inchoative_filtered": [],
                "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
                "blimp_existential_there_subject_raising_filtered": [],
                "blimp_wh_questions_object_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_existential_there_quantifiers_1_filtered": [],
                "blimp_drop_argument_filtered": [],
                "blimp_expletive_it_object_raising_filtered": [],
                "blimp_left_branch_island_simple_question_filtered": [],
                "blimp_irregular_past_participle_verbs_filtered": [],
                "blimp_npi_present_1_filtered": [],
                "blimp_animate_subject_passive_filtered": [],
                "blimp_transitive_filtered": [],
                "blimp_principle_A_domain_3_filtered": [],
                "blimp_npi_present_2_filtered": [],
                "blimp_sentential_subject_island_filtered": [],
                "blimp_principle_A_domain_1_filtered": [],
                "blimp_only_npi_scope_filtered": [],
                "blimp_determiner_noun_agreement_1_filtered": [],
                "blimp_left_branch_island_echo_question_filtered": [],
                "blimp_ellipsis_n_bar_1_filtered": [],
                "blimp_distractor_agreement_relative_clause_filtered": [],
                "blimp_supplement_qa_congruence_tricky": [],
                "blimp_supplement_turn_taking": [],
                "blimp_supplement_hypernym": [],
                "blimp_supplement_qa_congruence_easy": [],
                "blimp_supplement_subject_aux_inversion": [],
                "cola": [],
                "sst2": [],
                "qqp": [],
                "mnli": [],
                "mnli_mismatch": [],
                "wnli": [],
                "rte": [],
                "qnli": [],
                "mrpc": [],
                "hellaswag": [],
                "inverse_scaling_into_the_unknown": [],
                "inverse_scaling_redefine_math": [],
                "inverse_scaling_modus_tollens": [],
                "inverse_scaling_pattern_matching_suppression": [],
                "inverse_scaling_sig_figs": [],
                "inverse_scaling_memo_trap": [],
                "inverse_scaling_neqa": [],
                "inverse_scaling_winobias_antistereotype": [],
                "inverse_scaling_quote_repetition": [],
                "inverse_scaling_repetitive_algebra": [],
                "inverse_scaling_hindsight_neglect_10shot": [],
                "lambada_openai": [],
                "mathqa": [],
                "openbookqa": [],
                "piqa": [],
                "qa4mre_2012": [],
                "qa4mre_2013": [],
                "qa4mre_2011": [],
                "sciq": [],
                "squad_completion": [],
                "swag": [],
                "tinyGSM8k": [],
                "tinyMMLU": [],
                "tinyTruthfulQA": [],
                "triviaqa": [],
                "winogrande": [],
                "wsc273": []
            },
            "configs": {
                "arc_challenge": {
                    "task": "arc_challenge",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Challenge",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "arc_easy": {
                    "task": "arc_easy",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Easy",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_adjunct_island_filtered": {
                    "task": "blimp_adjunct_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "task": "blimp_anaphor_gender_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "task": "blimp_anaphor_number_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_passive_filtered": {
                    "task": "blimp_animate_subject_passive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_trans_filtered": {
                    "task": "blimp_animate_subject_trans_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_causative_filtered": {
                    "task": "blimp_causative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_complex_NP_island_filtered": {
                    "task": "blimp_complex_NP_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "task": "blimp_distractor_agreement_relational_noun_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "task": "blimp_distractor_agreement_relative_clause_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_drop_argument_filtered": {
                    "task": "blimp_drop_argument_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "task": "blimp_ellipsis_n_bar_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "task": "blimp_ellipsis_n_bar_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_object_raising_filtered": {
                    "task": "blimp_existential_there_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "task": "blimp_existential_there_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "task": "blimp_existential_there_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "task": "blimp_existential_there_subject_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "task": "blimp_expletive_it_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_inchoative_filtered": {
                    "task": "blimp_inchoative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_intransitive_filtered": {
                    "task": "blimp_intransitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "task": "blimp_irregular_past_participle_adjectives_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "task": "blimp_irregular_past_participle_verbs_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "task": "blimp_left_branch_island_echo_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "task": "blimp_left_branch_island_simple_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "task": "blimp_matrix_question_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_1_filtered": {
                    "task": "blimp_npi_present_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_2_filtered": {
                    "task": "blimp_npi_present_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "task": "blimp_only_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_scope_filtered": {
                    "task": "blimp_only_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_1_filtered": {
                    "task": "blimp_passive_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_2_filtered": {
                    "task": "blimp_passive_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_c_command_filtered": {
                    "task": "blimp_principle_A_c_command_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_1_filtered": {
                    "task": "blimp_principle_A_case_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_2_filtered": {
                    "task": "blimp_principle_A_case_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_1_filtered": {
                    "task": "blimp_principle_A_domain_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_2_filtered": {
                    "task": "blimp_principle_A_domain_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_3_filtered": {
                    "task": "blimp_principle_A_domain_3_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "task": "blimp_principle_A_reconstruction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "task": "blimp_sentential_negation_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_subject_island_filtered": {
                    "task": "blimp_sentential_subject_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "task": "blimp_superlative_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "task": "blimp_superlative_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_hypernym": {
                    "task": "blimp_supplement_hypernym",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_easy": {
                    "task": "blimp_supplement_qa_congruence_easy",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "task": "blimp_supplement_qa_congruence_tricky",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_subject_aux_inversion": {
                    "task": "blimp_supplement_subject_aux_inversion",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_turn_taking": {
                    "task": "blimp_supplement_turn_taking",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "task": "blimp_tough_vs_raising_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "task": "blimp_tough_vs_raising_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_transitive_filtered": {
                    "task": "blimp_transitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_island_filtered": {
                    "task": "blimp_wh_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "task": "blimp_wh_questions_object_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "task": "blimp_wh_questions_subject_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "cola": {
                    "task": "cola",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "cola",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "mcc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "hellaswag": {
                    "task": "hellaswag",
                    "tag": [
                        "multiple_choice"
                    ],
                    "dataset_path": "hellaswag",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                    "doc_to_text": "{{query}}",
                    "doc_to_target": "{{label}}",
                    "doc_to_choice": "choices",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "task": "inverse_scaling_hindsight_neglect_10shot",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_into_the_unknown": {
                    "task": "inverse_scaling_into_the_unknown",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/into-the-unknown",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_memo_trap": {
                    "task": "inverse_scaling_memo_trap",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/memo-trap",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_modus_tollens": {
                    "task": "inverse_scaling_modus_tollens",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/modus-tollens",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_neqa": {
                    "task": "inverse_scaling_neqa",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/NeQA",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "task": "inverse_scaling_pattern_matching_suppression",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/pattern-matching-suppression",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_quote_repetition": {
                    "task": "inverse_scaling_quote_repetition",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/quote-repetition",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_redefine_math": {
                    "task": "inverse_scaling_redefine_math",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/redefine-math",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_repetitive_algebra": {
                    "task": "inverse_scaling_repetitive_algebra",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/repetitive-algebra",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_sig_figs": {
                    "task": "inverse_scaling_sig_figs",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/sig-figs",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_winobias_antistereotype": {
                    "task": "inverse_scaling_winobias_antistereotype",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "group": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "text",
                    "doc_to_target": "target",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "lambada_openai": {
                    "task": "lambada_openai",
                    "tag": [
                        "lambada"
                    ],
                    "dataset_path": "EleutherAI/lambada_openai",
                    "dataset_name": "default",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                    "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "perplexity",
                            "aggregation": "perplexity",
                            "higher_is_better": false
                        },
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "loglikelihood",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{text}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mathqa": {
                    "task": "mathqa",
                    "tag": [
                        "math_word_problems"
                    ],
                    "dataset_path": "math_qa",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{Problem}}\nAnswer:",
                    "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                    "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli": {
                    "task": "mnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_matched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli_mismatch": {
                    "task": "mnli_mismatch",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_mismatched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mrpc": {
                    "task": "mrpc",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mrpc",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "openbookqa": {
                    "task": "openbookqa",
                    "dataset_path": "openbookqa",
                    "dataset_name": "main",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "question_stem",
                    "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question_stem",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "piqa": {
                    "task": "piqa",
                    "dataset_path": "piqa",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{goal}}\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[sol1, sol2]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "goal",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2011": {
                    "task": "qa4mre_2011",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2011.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2012": {
                    "task": "qa4mre_2012",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2012.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2013": {
                    "task": "qa4mre_2013",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2013.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qnli": {
                    "task": "qnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qqp": {
                    "task": "qqp",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qqp",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "rte": {
                    "task": "rte",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "rte",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "sciq": {
                    "task": "sciq",
                    "dataset_path": "sciq",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                    "doc_to_target": 3,
                    "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{support}} {{question}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "squad_completion": {
                    "task": "squad_completion",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n\n"
                        ],
                        "do_sample": false
                    },
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "sst2": {
                    "task": "sst2",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "sst2",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "negative",
                        "positive"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "swag": {
                    "task": "swag",
                    "dataset_path": "swag",
                    "dataset_name": "regular",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "startphrase",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "tinyGSM8k": {
                    "task": "tinyGSM8k",
                    "dataset_path": "tinyBenchmarks/tinyGSM8k",
                    "dataset_name": "main",
                    "training_split": "train",
                    "test_split": "test",
                    "fewshot_split": "train",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{answer}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 5,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": false,
                            "regexes_to_ignore": [
                                ",",
                                "\\$",
                                "(?s).*#### ",
                                "\\.$"
                            ]
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "Question:",
                            "</s>",
                            "<|im_end|>"
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "strict-match",
                            "filter": [
                                {
                                    "function": "regex",
                                    "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        },
                        {
                            "name": "flexible-extract",
                            "filter": [
                                {
                                    "function": "regex",
                                    "group_select": -1,
                                    "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyMMLU": {
                    "task": "tinyMMLU",
                    "dataset_path": "tinyBenchmarks/tinyMMLU",
                    "dataset_name": "all",
                    "test_split": "test",
                    "fewshot_split": "dev",
                    "doc_to_text": "{{input_formatted}}",
                    "doc_to_target": "answer",
                    "doc_to_choice": [
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "fewshot_config": {
                        "sampler": "first_n"
                    },
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc_norm",
                            "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyTruthfulQA": {
                    "task": "tinyTruthfulQA",
                    "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                    "dataset_name": "multiple_choice",
                    "validation_split": "validation",
                    "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{mc2_targets.choices}}",
                    "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 0.0
                    }
                },
                "triviaqa": {
                    "task": "triviaqa",
                    "dataset_path": "trivia_qa",
                    "dataset_name": "rc.nocontext",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{question}}?\nAnswer:",
                    "doc_to_target": "{{answer.aliases}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "mean",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": true
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n",
                            ".",
                            ","
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "remove_whitespace",
                            "filter": [
                                {
                                    "function": "remove_whitespace"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 3.0
                    }
                },
                "winogrande": {
                    "task": "winogrande",
                    "dataset_path": "winogrande",
                    "dataset_name": "winogrande_xl",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                    "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                    "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "wnli": {
                    "task": "wnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "wnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "False",
                        "True"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "wsc273": {
                    "task": "wsc273",
                    "dataset_path": "winograd_wsc",
                    "dataset_name": "wsc273",
                    "test_split": "test",
                    "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                    "doc_to_text": "label",
                    "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                    "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "text",
                    "metadata": {
                        "version": 1.0
                    }
                }
            },
            "versions": {
                "arc_challenge": 1.0,
                "arc_easy": 1.0,
                "blimp_adjunct_island_filtered": 1.0,
                "blimp_anaphor_gender_agreement_filtered": 1.0,
                "blimp_anaphor_number_agreement_filtered": 1.0,
                "blimp_animate_subject_passive_filtered": 1.0,
                "blimp_animate_subject_trans_filtered": 1.0,
                "blimp_causative_filtered": 1.0,
                "blimp_complex_NP_island_filtered": 1.0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
                "blimp_determiner_noun_agreement_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
                "blimp_distractor_agreement_relational_noun_filtered": 1.0,
                "blimp_distractor_agreement_relative_clause_filtered": 1.0,
                "blimp_drop_argument_filtered": 1.0,
                "blimp_ellipsis_n_bar_1_filtered": 1.0,
                "blimp_ellipsis_n_bar_2_filtered": 1.0,
                "blimp_existential_there_object_raising_filtered": 1.0,
                "blimp_existential_there_quantifiers_1_filtered": 1.0,
                "blimp_existential_there_quantifiers_2_filtered": 1.0,
                "blimp_existential_there_subject_raising_filtered": 1.0,
                "blimp_expletive_it_object_raising_filtered": 1.0,
                "blimp_inchoative_filtered": 1.0,
                "blimp_intransitive_filtered": 1.0,
                "blimp_irregular_past_participle_adjectives_filtered": 1.0,
                "blimp_irregular_past_participle_verbs_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_left_branch_island_echo_question_filtered": 1.0,
                "blimp_left_branch_island_simple_question_filtered": 1.0,
                "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
                "blimp_npi_present_1_filtered": 1.0,
                "blimp_npi_present_2_filtered": 1.0,
                "blimp_only_npi_licensor_present_filtered": 1.0,
                "blimp_only_npi_scope_filtered": 1.0,
                "blimp_passive_1_filtered": 1.0,
                "blimp_passive_2_filtered": 1.0,
                "blimp_principle_A_c_command_filtered": 1.0,
                "blimp_principle_A_case_1_filtered": 1.0,
                "blimp_principle_A_case_2_filtered": 1.0,
                "blimp_principle_A_domain_1_filtered": 1.0,
                "blimp_principle_A_domain_2_filtered": 1.0,
                "blimp_principle_A_domain_3_filtered": 1.0,
                "blimp_principle_A_reconstruction_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
                "blimp_sentential_negation_npi_scope_filtered": 1.0,
                "blimp_sentential_subject_island_filtered": 1.0,
                "blimp_superlative_quantifiers_1_filtered": 1.0,
                "blimp_superlative_quantifiers_2_filtered": 1.0,
                "blimp_supplement_hypernym": 1.0,
                "blimp_supplement_qa_congruence_easy": 1.0,
                "blimp_supplement_qa_congruence_tricky": 1.0,
                "blimp_supplement_subject_aux_inversion": 1.0,
                "blimp_supplement_turn_taking": 1.0,
                "blimp_tough_vs_raising_1_filtered": 1.0,
                "blimp_tough_vs_raising_2_filtered": 1.0,
                "blimp_transitive_filtered": 1.0,
                "blimp_wh_island_filtered": 1.0,
                "blimp_wh_questions_object_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
                "cola": 1.0,
                "hellaswag": 1.0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 1.0,
                "mathqa": 1.0,
                "mnli": 1.0,
                "mnli_mismatch": 1.0,
                "mrpc": 1.0,
                "openbookqa": 1.0,
                "piqa": 1.0,
                "qa4mre_2011": 1.0,
                "qa4mre_2012": 1.0,
                "qa4mre_2013": 1.0,
                "qnli": 1.0,
                "qqp": 2.0,
                "rte": 1.0,
                "sciq": 1.0,
                "squad_completion": 0,
                "sst2": 1.0,
                "swag": 1.0,
                "tinyGSM8k": 0.0,
                "tinyMMLU": 0.0,
                "tinyTruthfulQA": 0.0,
                "triviaqa": 3.0,
                "winogrande": 1.0,
                "wnli": 2.0,
                "wsc273": 1.0
            },
            "n-shot": {
                "arc_challenge": 0,
                "arc_easy": 0,
                "blimp_adjunct_island_filtered": 0,
                "blimp_anaphor_gender_agreement_filtered": 0,
                "blimp_anaphor_number_agreement_filtered": 0,
                "blimp_animate_subject_passive_filtered": 0,
                "blimp_animate_subject_trans_filtered": 0,
                "blimp_causative_filtered": 0,
                "blimp_complex_NP_island_filtered": 0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
                "blimp_determiner_noun_agreement_1_filtered": 0,
                "blimp_determiner_noun_agreement_2_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
                "blimp_distractor_agreement_relational_noun_filtered": 0,
                "blimp_distractor_agreement_relative_clause_filtered": 0,
                "blimp_drop_argument_filtered": 0,
                "blimp_ellipsis_n_bar_1_filtered": 0,
                "blimp_ellipsis_n_bar_2_filtered": 0,
                "blimp_existential_there_object_raising_filtered": 0,
                "blimp_existential_there_quantifiers_1_filtered": 0,
                "blimp_existential_there_quantifiers_2_filtered": 0,
                "blimp_existential_there_subject_raising_filtered": 0,
                "blimp_expletive_it_object_raising_filtered": 0,
                "blimp_inchoative_filtered": 0,
                "blimp_intransitive_filtered": 0,
                "blimp_irregular_past_participle_adjectives_filtered": 0,
                "blimp_irregular_past_participle_verbs_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_left_branch_island_echo_question_filtered": 0,
                "blimp_left_branch_island_simple_question_filtered": 0,
                "blimp_matrix_question_npi_licensor_present_filtered": 0,
                "blimp_npi_present_1_filtered": 0,
                "blimp_npi_present_2_filtered": 0,
                "blimp_only_npi_licensor_present_filtered": 0,
                "blimp_only_npi_scope_filtered": 0,
                "blimp_passive_1_filtered": 0,
                "blimp_passive_2_filtered": 0,
                "blimp_principle_A_c_command_filtered": 0,
                "blimp_principle_A_case_1_filtered": 0,
                "blimp_principle_A_case_2_filtered": 0,
                "blimp_principle_A_domain_1_filtered": 0,
                "blimp_principle_A_domain_2_filtered": 0,
                "blimp_principle_A_domain_3_filtered": 0,
                "blimp_principle_A_reconstruction_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 0,
                "blimp_sentential_negation_npi_scope_filtered": 0,
                "blimp_sentential_subject_island_filtered": 0,
                "blimp_superlative_quantifiers_1_filtered": 0,
                "blimp_superlative_quantifiers_2_filtered": 0,
                "blimp_supplement_hypernym": 0,
                "blimp_supplement_qa_congruence_easy": 0,
                "blimp_supplement_qa_congruence_tricky": 0,
                "blimp_supplement_subject_aux_inversion": 0,
                "blimp_supplement_turn_taking": 0,
                "blimp_tough_vs_raising_1_filtered": 0,
                "blimp_tough_vs_raising_2_filtered": 0,
                "blimp_transitive_filtered": 0,
                "blimp_wh_island_filtered": 0,
                "blimp_wh_questions_object_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_no_gap_filtered": 0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_with_gap_filtered": 0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
                "cola": 0,
                "hellaswag": 0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 0,
                "mathqa": 0,
                "mnli": 0,
                "mnli_mismatch": 0,
                "mrpc": 0,
                "openbookqa": 0,
                "piqa": 0,
                "qa4mre_2011": 0,
                "qa4mre_2012": 0,
                "qa4mre_2013": 0,
                "qnli": 0,
                "qqp": 0,
                "rte": 0,
                "sciq": 0,
                "squad_completion": 0,
                "sst2": 0,
                "swag": 0,
                "tinyGSM8k": 5,
                "tinyMMLU": 0,
                "tinyTruthfulQA": 0,
                "triviaqa": 0,
                "winogrande": 0,
                "wnli": 0,
                "wsc273": 0
            },
            "higher_is_better": {
                "arc_challenge": {
                    "acc": true,
                    "acc_norm": true
                },
                "arc_easy": {
                    "acc": true,
                    "acc_norm": true
                },
                "blimp_adjunct_island_filtered": {
                    "acc": true
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "acc": true
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_passive_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_trans_filtered": {
                    "acc": true
                },
                "blimp_causative_filtered": {
                    "acc": true
                },
                "blimp_complex_NP_island_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "acc": true
                },
                "blimp_drop_argument_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_object_raising_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "acc": true
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "acc": true
                },
                "blimp_inchoative_filtered": {
                    "acc": true
                },
                "blimp_intransitive_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "acc": true
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_npi_present_1_filtered": {
                    "acc": true
                },
                "blimp_npi_present_2_filtered": {
                    "acc": true
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_only_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_passive_1_filtered": {
                    "acc": true
                },
                "blimp_passive_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_c_command_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_3_filtered": {
                    "acc": true
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_sentential_subject_island_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_supplement_hypernym": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_easy": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "acc": true
                },
                "blimp_supplement_subject_aux_inversion": {
                    "acc": true
                },
                "blimp_supplement_turn_taking": {
                    "acc": true
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "acc": true
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "acc": true
                },
                "blimp_transitive_filtered": {
                    "acc": true
                },
                "blimp_wh_island_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "acc": true
                },
                "cola": {
                    "mcc": true
                },
                "hellaswag": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_into_the_unknown": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_memo_trap": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_modus_tollens": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_neqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_quote_repetition": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_redefine_math": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_repetitive_algebra": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_sig_figs": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_winobias_antistereotype": {
                    "acc": true,
                    "acc_norm": true
                },
                "lambada_openai": {
                    "perplexity": false,
                    "acc": true
                },
                "mathqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "mnli": {
                    "acc": true
                },
                "mnli_mismatch": {
                    "acc": true
                },
                "mrpc": {
                    "acc": true
                },
                "openbookqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "piqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2011": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2012": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2013": {
                    "acc": true,
                    "acc_norm": true
                },
                "qnli": {
                    "acc": true
                },
                "qqp": {
                    "acc": true
                },
                "rte": {
                    "acc": true
                },
                "sciq": {
                    "acc": true,
                    "acc_norm": true
                },
                "squad_completion": {
                    "contains": true
                },
                "sst2": {
                    "acc": true
                },
                "swag": {
                    "acc": true,
                    "acc_norm": true
                },
                "tinyGSM8k": {
                    "exact_match": true
                },
                "tinyMMLU": {
                    "acc_norm": true
                },
                "tinyTruthfulQA": {
                    "acc": true
                },
                "triviaqa": {
                    "exact_match": true
                },
                "winogrande": {
                    "acc": true
                },
                "wnli": {
                    "acc": true
                },
                "wsc273": {
                    "acc": true
                }
            },
            "n-samples": {
                "wsc273": {
                    "original": 273,
                    "effective": 273
                },
                "winogrande": {
                    "original": 1267,
                    "effective": 1267
                },
                "triviaqa": {
                    "original": 17944,
                    "effective": 17944
                },
                "tinyTruthfulQA": {
                    "original": 100,
                    "effective": 100
                },
                "tinyMMLU": {
                    "original": 100,
                    "effective": 100
                },
                "tinyGSM8k": {
                    "original": 100,
                    "effective": 100
                },
                "swag": {
                    "original": 20006,
                    "effective": 20006
                },
                "squad_completion": {
                    "original": 2984,
                    "effective": 2984
                },
                "sciq": {
                    "original": 1000,
                    "effective": 1000
                },
                "qa4mre_2011": {
                    "original": 120,
                    "effective": 120
                },
                "qa4mre_2013": {
                    "original": 284,
                    "effective": 284
                },
                "qa4mre_2012": {
                    "original": 160,
                    "effective": 160
                },
                "piqa": {
                    "original": 1838,
                    "effective": 1838
                },
                "openbookqa": {
                    "original": 500,
                    "effective": 500
                },
                "mathqa": {
                    "original": 2985,
                    "effective": 2985
                },
                "lambada_openai": {
                    "original": 5153,
                    "effective": 5153
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "original": 315,
                    "effective": 315
                },
                "inverse_scaling_repetitive_algebra": {
                    "original": 1000,
                    "effective": 1000
                },
                "inverse_scaling_quote_repetition": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_winobias_antistereotype": {
                    "original": 412,
                    "effective": 412
                },
                "inverse_scaling_neqa": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_memo_trap": {
                    "original": 936,
                    "effective": 936
                },
                "inverse_scaling_sig_figs": {
                    "original": 20897,
                    "effective": 20897
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "original": 1428,
                    "effective": 1428
                },
                "inverse_scaling_modus_tollens": {
                    "original": 1236,
                    "effective": 1236
                },
                "inverse_scaling_redefine_math": {
                    "original": 900,
                    "effective": 900
                },
                "inverse_scaling_into_the_unknown": {
                    "original": 1824,
                    "effective": 1824
                },
                "hellaswag": {
                    "original": 10042,
                    "effective": 10042
                },
                "mrpc": {
                    "original": 408,
                    "effective": 408
                },
                "qnli": {
                    "original": 5463,
                    "effective": 5463
                },
                "rte": {
                    "original": 277,
                    "effective": 277
                },
                "wnli": {
                    "original": 71,
                    "effective": 71
                },
                "mnli_mismatch": {
                    "original": 9832,
                    "effective": 9832
                },
                "mnli": {
                    "original": 9815,
                    "effective": 9815
                },
                "qqp": {
                    "original": 40430,
                    "effective": 40430
                },
                "sst2": {
                    "original": 872,
                    "effective": 872
                },
                "cola": {
                    "original": 1043,
                    "effective": 1043
                },
                "blimp_supplement_subject_aux_inversion": {
                    "original": 3867,
                    "effective": 3867
                },
                "blimp_supplement_qa_congruence_easy": {
                    "original": 64,
                    "effective": 64
                },
                "blimp_supplement_hypernym": {
                    "original": 842,
                    "effective": 842
                },
                "blimp_supplement_turn_taking": {
                    "original": 280,
                    "effective": 280
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "original": 165,
                    "effective": 165
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "original": 802,
                    "effective": 802
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "original": 947,
                    "effective": 947
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_only_npi_scope_filtered": {
                    "original": 837,
                    "effective": 837
                },
                "blimp_principle_A_domain_1_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_sentential_subject_island_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_npi_present_2_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_principle_A_domain_3_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_transitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_animate_subject_passive_filtered": {
                    "original": 895,
                    "effective": 895
                },
                "blimp_npi_present_1_filtered": {
                    "original": 909,
                    "effective": 909
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "original": 942,
                    "effective": 942
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "original": 951,
                    "effective": 951
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "original": 759,
                    "effective": 759
                },
                "blimp_drop_argument_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "original": 930,
                    "effective": 930
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "original": 890,
                    "effective": 890
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "original": 933,
                    "effective": 933
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "original": 859,
                    "effective": 859
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "original": 924,
                    "effective": 924
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "original": 910,
                    "effective": 910
                },
                "blimp_inchoative_filtered": {
                    "original": 855,
                    "effective": 855
                },
                "blimp_passive_1_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_animate_subject_trans_filtered": {
                    "original": 923,
                    "effective": 923
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "original": 820,
                    "effective": 820
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "original": 911,
                    "effective": 911
                },
                "blimp_adjunct_island_filtered": {
                    "original": 928,
                    "effective": 928
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "original": 898,
                    "effective": 898
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "original": 804,
                    "effective": 804
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "original": 945,
                    "effective": 945
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "original": 949,
                    "effective": 949
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "original": 979,
                    "effective": 979
                },
                "blimp_passive_2_filtered": {
                    "original": 903,
                    "effective": 903
                },
                "blimp_principle_A_domain_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "original": 892,
                    "effective": 892
                },
                "blimp_existential_there_object_raising_filtered": {
                    "original": 812,
                    "effective": 812
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "original": 788,
                    "effective": 788
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "original": 882,
                    "effective": 882
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "original": 828,
                    "effective": 828
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "original": 681,
                    "effective": 681
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "original": 971,
                    "effective": 971
                },
                "blimp_principle_A_c_command_filtered": {
                    "original": 946,
                    "effective": 946
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "original": 857,
                    "effective": 857
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_complex_NP_island_filtered": {
                    "original": 846,
                    "effective": 846
                },
                "blimp_principle_A_case_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "original": 875,
                    "effective": 875
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "original": 906,
                    "effective": 906
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "original": 948,
                    "effective": 948
                },
                "blimp_principle_A_case_1_filtered": {
                    "original": 912,
                    "effective": 912
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "original": 718,
                    "effective": 718
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "original": 861,
                    "effective": 861
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "original": 986,
                    "effective": 986
                },
                "blimp_intransitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_wh_island_filtered": {
                    "original": 960,
                    "effective": 960
                },
                "blimp_causative_filtered": {
                    "original": 818,
                    "effective": 818
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "original": 967,
                    "effective": 967
                },
                "arc_easy": {
                    "original": 2376,
                    "effective": 2376
                },
                "arc_challenge": {
                    "original": 1172,
                    "effective": 1172
                }
            },
            "config": {
                "model": "modis",
                "model_args": "pretrained=evo_exp_full_a/14M/hierarchicalgatedttt_14M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
                "model_num_parameters": 6162861,
                "model_dtype": "torch.bfloat16",
                "model_revision": "main",
                "batch_size": "auto",
                "batch_sizes": [
                    64
                ],
                "device": null,
                "use_cache": null,
                "limit": null,
                "bootstrap_iters": 100000,
                "gen_kwargs": null,
                "random_seed": 0,
                "numpy_seed": 1234,
                "torch_seed": 1234,
                "fewshot_seed": 1234
            },
            "date": 1730280620.804255,
            "tokenizer_pad_token": [
                "</s>",
                "2"
            ],
            "tokenizer_eos_token": [
                "</s>",
                "2"
            ],
            "tokenizer_bos_token": [
                "<s>",
                "1"
            ],
            "eot_token_id": 2,
            "max_length": 2048,
            "task_hashes": {},
            "model_source": "modis",
            "model_name": "evo_exp_full_a/14M/hierarchicalgatedttt_14M",
            "model_name_sanitized": "evo_exp_full_a__14M__hierarchicalgatedttt_14M",
            "system_instruction": null,
            "system_instruction_sha": null,
            "fewshot_as_multiturn": false,
            "chat_template": null,
            "chat_template_sha": null,
            "start_time": 2907794.009808626,
            "end_time": 2908165.275945334,
            "total_evaluation_time_seconds": "371.2661367082037"
        }
    }
}