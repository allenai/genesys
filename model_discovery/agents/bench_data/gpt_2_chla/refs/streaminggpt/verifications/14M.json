{
    "scale": "14M",
    "verification_report": {
        "wandb_ids.json": {
            "pretrain": {
                "id": "c9bkcfnd",
                "name": "evo_exp_full_a_streaminggpt_14M_20241029111547"
            },
            "project": "model_discovery",
            "entity": "aristo",
            "evaluate": {
                "name": "evo_exp_full_a_streaminggpt_14M_eval_20241029111935"
            }
        },
        "training_record.csv": "_step,_runtime,train/loss,train/grad_norm,train/learning_rate,train/epoch,_timestamp,train/global_step\n0,45.944633904,10.2906,11.125,0.00045454545454545455,3.225182222795588e-05,1730225793.8767016,5\n1,47.427652789,9.3844,6.46875,0.0009090909090909091,6.450364445591176e-05,1730225795.3597524,10\n2,48.906209647,8.382,6.3125,0.0009998763332994172,9.675546668386763e-05,1730225796.8384051,15\n3,50.383646818,7.4844,6.3125,0.0009993740538191294,0.00012900728891182352,1730225798.315811,20\n4,51.764579585,6.575,6.625,0.000998485863403199,0.0001612591111397794,1730225799.696774,25\n5,53.145479842,5.7648,7.0625,0.0009972125248068218,0.00019351093336773527,1730225801.0776606,30\n6,54.512604128,5.0742,5.84375,0.0009955551315405928,0.00022576275559569117,1730225802.4448278,35\n7,55.876538542,4.432,5.40625,0.0009935151069314287,0.00025801457782364704,1730225803.8087366,40\n8,57.324819586,4.0258,2.796875,0.0009910942029002483,0.0002902664000516029,1730225805.2570043,45\n9,58.702273319,3.7613,0.412109375,0.0009882944984574708,0.0003225182222795588,1730225806.6344469,50\n10,60.199827516,3.609,0.361328125,0.0009851183979176128,0.00035477004450751466,1730225808.1320112,55\n11,61.586997059,3.5699,0.1826171875,0.0009815686288345252,0.00038702186673547054,1730225809.5191972,60\n12,62.980896397,3.7387,2.046875,0.00097764823965904,0.0004192736889634264,1730225810.9130828,65\n13,64.410825902,3.6391,0.71484375,0.0009733605971210384,0.00045152551119138234,1730225812.343034,70\n14,65.798919058,3.7152,0.314453125,0.000968709383338189,0.0004837773334193382,1730225813.7311184,75\n15,67.191404043,3.6902,0.92578125,0.0009636985926538404,0.0005160291556472941,1730225815.123617,80\n16,68.603641649,3.3498,2.375,0.0009583325282067807,0.0005482809778752499,1730225816.535842,85\n17,69.995139772,3.5422,2.765625,0.0009526157982358121,0.0005805328001032058,1730225817.9273257,90\n18,71.412148261,3.3383,3.890625,0.0009465533121223127,0.0006127846223311618,1730225819.3443696,95\n19,72.83391449,3.1281,18.625,0.0009401502761741877,0.0006450364445591176,1730225820.7661216,100\n20,74.370826667,3.2375,0.421875,0.0009334121891548224,0.0006772882667870735,1730225822.3030171,105\n21,75.930272904,3.234,0.7578125,0.0009263448375608871,0.0007095400890150293,1730225823.8625083,110\n22,77.383035417,2.9984,0.498046875,0.0009189542906530411,0.0007417919112429853,1730225825.315212,115\n23,78.832818877,3.0949,0.181640625,0.000911246895243807,0.0007740437334709411,1730225826.765007,120\n24,80.410062023,3.0527,0.1328125,0.0009032292702470904,0.000806295555698897,1730225828.3422437,125\n25,81.84173548,3.0145,0.1220703125,0.0008949083009940268,0.0008385473779268528,1730225829.7739143,130\n26,83.273502635,3.0098,0.11669921875,0.0008862911333200348,0.0008707992001548088,1730225831.2057137,135\n27,84.746894705,2.8793,0.09130859375,0.0008773851674281548,0.0009030510223827647,1730225832.6791005,140\n28,86.207306898,2.9922,0.146484375,0.0008681980515339464,0.0009353028446107205,1730225834.139488,145\n29,87.669118615,2.9898,0.0859375,0.0008587376752973939,0.0009675546668386764,1730225835.601289,150\n30,89.246098448,2.9578,0.083984375,0.0008490121630474697,0.0009998064890666322,1730225837.178287,155\n31,90.818057954,3.1102,0.095703125,0.000839029866805169,0.0010320583112945882,1730225838.7502759,160\n32,92.256619814,3.0498,0.08154296875,0.0008287993591110064,0.001064310133522544,1730225840.1888337,165\n33,93.735885516,3.0078,0.09716796875,0.0008183294256631391,0.0010965619557504998,1730225841.6680665,170\n34,95.178983502,3.0023,0.07666015625,0.0008076290577724324,0.0011288137779784557,1730225843.1112034,175\n35,97.140465069,2.9477,0.07421875,0.0007967074446409543,0.0011610656002064117,1730225845.0726535,180\n36,98.641995358,2.966,0.07666015625,0.000785573965470522,0.0011933174224343676,1730225846.5741005,185\n37,100.093750464,2.9863,0.0732421875,0.0007742381814080846,0.0012255692446623235,1730225848.0259104,190\n38,101.681106455,3.0355,0.07666015625,0.0007627098273348544,0.0012578210668902792,1730225849.6133056,195\n39,103.23713585,2.9883,0.07373046875,0.0007509988035062399,0.0012900728891182352,1730225851.169312,200\n40,104.814048617,3.032,0.07373046875,0.00073911516704976,0.001322324711346191,1730225852.746253,205\n41,106.302816834,3.0318,0.07666015625,0.000727069123328241,0.001354576533574147,1730225854.234983,210\n42,107.807049143,2.9934,0.0830078125,0.0007148710171757108,0.0013868283558021027,1730225855.739257,215\n43,109.348222686,2.9898,0.0771484375,0.0007025313240135216,0.0014190801780300587,1730225857.2804184,220\n44,110.859527515,3.1293,0.08056640625,0.0006900606408543251,0.0014513320002580146,1730225858.7917273,225\n45,112.386701018,3.0645,0.0732421875,0.0006774696772016302,0.0014835838224859705,1730225860.31891,230\n46,113.947930907,2.9699,0.07421875,0.0006647692458527544,0.0015158356447139264,1730225861.880113,235\n47,115.588320954,3.0422,0.06396484375,0.0006519702536130716,0.0015480874669418822,1730225863.520523,240\n48,117.168812136,3.0672,0.0732421875,0.0006390836919295254,0.001580339289169838,1730225865.1010406,245\n49,118.695668847,3.0297,0.080078125,0.000626120627451457,0.001612591111397794,1730225866.6278358,250\n50,120.339123886,3.1434,0.06982421875,0.0006130921925268488,0.00164484293362575,1730225868.2713056,255\n51,121.898312255,3.0746,0.08154296875,0.0006000095756421498,0.0016770947558537056,1730225869.830504,260\n52,123.513680149,3.023,0.2412109375,0.0005868840118138899,0.0017093465780816616,1730225871.445885,265\n53,125.05611772,2.9895,0.10302734375,0.0005737267729403344,0.0017415984003096175,1730225872.9883256,270\n54,126.612944483,3.0387,0.1259765625,0.0005605491581214673,0.0017738502225375734,1730225874.5451417,275\n55,128.163955075,3.1285,0.12109375,0.000547362483955612,0.0018061020447655294,1730225876.0961714,280\n56,129.74438649,3.1141,0.1279296875,0.0005341780748210284,0.001838353866993485,1730225877.676549,285\n57,131.249990397,2.9902,0.228515625,0.0005210072531508245,0.001870605689221441,1730225879.1821992,290\n58,132.824228008,3.059,0.169921875,0.0005078613297095422,0.001902857511449397,1730225880.7563894,295\n59,134.409996804,3.0066,0.158203125,0.0004947515938797615,0.0019351093336773529,1730225882.3421948,300\n60,136.111636444,2.9789,0.1474609375,0.00048168930396706814,0.0019673611559053086,1730225884.0438414,305\n61,137.739783141,2.9289,0.09716796875,0.0004686856775317081,0.0019996129781332645,1730225885.6719615,310\n62,139.341480332,2.9488,0.1171875,0.0004557518817552351,0.0020318648003612204,1730225887.2736979,315\n63,140.95564067,2.9766,0.2490234375,0.0004428990238504199,0.0020641166225891763,1730225888.887842,320\n64,142.537383263,2.8773,0.0908203125,0.00043013814152266104,0.0020963684448171323,1730225890.469586,325\n65,144.107948693,2.9172,0.421875,0.0004174801934910855,0.002128620267045088,1730225892.0401587,330\n66,145.69642029,2.9484,0.201171875,0.0004049360500774809,0.002160872089273044,1730225893.628595,335\n67,147.276000963,2.8816,0.11474609375,0.00039251648387114246,0.0021931239115009996,1730225895.2082174,340\n68,149.007859483,3.0891,0.2080078125,0.000380232160477648,0.0022253757337289556,1730225896.9400773,345\n69,150.818844789,3.0129,0.1142578125,0.00036809362935950917,0.0022576275559569115,1730225898.751047,350\n70,152.526659577,2.9336,0.10888671875,0.0003561113147765633,0.0022898793781848674,1730225900.4588642,355\n71,154.133164279,2.782,0.3828125,0.0003442955068338858,0.0023221312004128233,1730225902.0653167,360\n72,155.70055075,2.868,0.15234375,0.0003326563526449107,0.0023543830226407793,1730225903.6326985,365\n73,157.280451019,2.8643,0.52734375,0.00032120384761734995,0.002386634844868735,1730225905.2126594,370\n74,158.927569116,2.8426,0.146484375,0.00030994782686939346,0.002418886667096691,1730225906.859777,375\n75,160.571523004,2.8416,0.15625,0.0002988979567835603,0.002451138489324647,1730225908.503735,380\n76,164.105799783,2.8543,0.353515625,0.00028806372670545777,0.0024833903115526025,1730225912.0379806,385\n77,165.714055315,2.8652,0.306640625,0.00027745444079457337,0.0025156421337805585,1730225913.6462524,390\n78,167.462727774,2.8711,0.328125,0.00026707921003410196,0.0025478939560085144,1730225915.394933,395\n79,169.24275766,2.9062,0.1591796875,0.000256946944406665,0.0025801457782364703,1730225917.1749852,400\n80,170.955817822,2.8176,0.23046875,0.00024706634524264735,0.0026123976004644263,1730225918.8880146,405\n81,172.556703682,2.7725,0.40625,0.00023744589774771574,0.002644649422692382,1730225920.488905,410\n82,174.227231866,2.8898,0.67578125,0.0002280938637159427,0.002676901244920338,1730225922.1594381,415\n83,176.023868394,2.8684,0.52734375,0.00021901827443478815,0.002709153067148294,1730225923.9561024,420\n84,177.677962575,2.9119,0.2294921875,0.00021022692378803626,0.00274140488937625,1730225925.6101594,425\n85,179.345329129,2.8211,0.60546875,0.0002017273615626068,0.0027736567116042055,1730225927.2775116,430\n86,181.101997351,2.9127,0.2119140625,0.0001935268869649918,0.0028059085338321614,1730225929.0341778,435\n87,182.767733295,3.0102,0.279296875,0.00018563254235288371,0.0028381603560601173,1730225930.6999326,440\n88,184.472810739,2.9652,0.19921875,0.0001780511071873786,0.0028704121782880732,1730225932.404989,445\n89,186.19353783,2.8152,0.130859375,0.00017078909221094927,0.002902664000516029,1730225934.125769,450\n90,187.976254349,2.8891,0.12890625,0.00016385273385618516,0.002934915822743985,1730225935.9084125,455\n91,189.644041256,2.8443,0.1044921875,0.0001572479888901046,0.002967167644971941,1730225937.576246,460\n92,191.33247289,2.8336,0.1259765625,0.00015098052929863532,0.002999419467199897,1730225939.264677,465\n93,193.03503515,2.8895,0.15234375,0.00014505573741565813,0.003031671289427853,1730225940.9672453,470\n94,194.76722745,3.0068,0.111328125,0.00013947870130079655,0.0030639231116558084,1730225942.699427,475\n95,196.507005609,2.8672,0.10791015625,0.00013425421036992097,0.0030961749338837643,1730225944.439212,480\n96,198.163991498,2.7859,0.18359375,0.00012938675128212164,0.0031284267561117202,1730225946.0961962,485\n97,199.872415561,2.8547,0.1220703125,0.00012488050408668,0.003160678578339676,1730225947.804624,490\n98,201.574306035,2.9402,0.2392578125,0.00012073933863334944,0.003192930400567632,1730225949.5065205,495\n99,203.307112595,2.8164,0.1611328125,0.0001169668112490279,0.003225182222795588,1730225951.2393157,500\n100,205.131296484,2.9125,0.2060546875,0.00011356616168367464,0.003257434045023544,1730225953.0634773,505\n101,206.827489365,2.7602,0.1259765625,0.00011054031032809659,0.0032896858672515,1730225954.7596946,510\n102,208.594816704,2.884,0.11669921875,0.00010789185570599077,0.003321937689479456,1730225956.5269997,515\n103,210.353119879,2.8635,0.19140625,0.00010562307224239914,0.0033541895117074113,1730225958.2853322,520\n104,212.126297689,2.9027,0.28125,0.00010373590831049056,0.0033864413339353672,1730225960.0585122,525\n105,213.897861808,3.0027,0.130859375,0.00010223198455834763,0.003418693156163323,1730225961.8300695,530\n106,215.693265285,2.7969,0.1259765625,0.00010111259251719545,0.003450944978391279,1730225963.6254728,535\n107,217.45653684,2.8547,0.1494140625,0.00010037869349226815,0.003483196800619235,1730225965.3887455,540\n108,219.171211059,2.8273,0.11767578125,0.00010003091773726403,0.003515448622847191,1730225967.1034098,545\n109,221.536366336,,,,0.0035283493517383733,1730225969.4685237,547\n",
        "system_metrics.csv": "system.memory_percent,_runtime,Process Memory In Use (non-swap) (%),system.gpu.1.correctedMemoryErrors,system.gpu.1.pcieLinkGen,system.gpu.3.correctedMemoryErrors,system.gpu.4.uncorrectedMemoryErrors,system.gpu.7.pcieLinkGen,GPU 3 Utilization (%),GPU 4 Time Spent Accessing Memory (%),system.gpu.0.smClock,system.gpu.3.pcieLinkGen,system.gpu.7.uncorrectedMemoryErrors,system.gpu.5.smClock,system.gpu.7.correctedMemoryErrors,GPU 6 Time Spent Accessing Memory (%),GPU 7 Utilization (%),system.gpu.3.uncorrectedMemoryErrors,system.gpu.7.smClock,system.gpu.2.correctedMemoryErrors,system.gpu.7.memoryClock,GPU 2 Time Spent Accessing Memory (%),system.gpu.3.memoryClock,GPU 5 Time Spent Accessing Memory (%),GPU 1 Time Spent Accessing Memory (%),GPU 0 Time Spent Accessing Memory (%),GPU 0 Utilization (%),GPU 3 Memory Allocated (%),system.gpu.4.enforcedPowerLimitWatts,system.gpu.0.correctedMemoryErrors,system.gpu.1.memoryClock,GPU 6 Memory Allocated (%),system.gpu.1.uncorrectedMemoryErrors,GPU 1 Memory Allocated (%),system.gpu.6.pcieLinkGen,system.gpu.5.enforcedPowerLimitWatts,system.gpu.3.smClock,system.gpu.1.enforcedPowerLimitWatts,system.gpu.4.correctedMemoryErrors,GPU 4 Memory Allocated (%),system.gpu.4.memoryClock,GPU 1 Utilization (%),system.gpu.7.enforcedPowerLimitWatts,system.gpu.4.smClock,system.gpu.0.pcieLinkGen,system.gpu.6.correctedMemoryErrors,GPU 4 Utilization (%),system.gpu.2.enforcedPowerLimitWatts,GPU 2 Memory Allocated (%),GPU 5 Utilization (%),system.gpu.6.smClock,system.gpu.2.smClock,system.gpu.0.uncorrectedMemoryErrors,GPU 5 Memory Allocated (%),system.gpu.2.memoryClock,system.gpu.5.uncorrectedMemoryErrors,GPU 3 Time Spent Accessing Memory (%),GPU 2 Utilization (%),system.gpu.5.pcieLinkGen,system.gpu.4.pcieLinkGen,system.gpu.2.uncorrectedMemoryErrors,system.gpu.3.enforcedPowerLimitWatts,system.gpu.6.uncorrectedMemoryErrors,system.gpu.5.memoryClock,system.gpu.2.pcieLinkGen,GPU 0 Memory Allocated (%),system.gpu.0.memoryClock,system.gpu.0.enforcedPowerLimitWatts,system.gpu.5.correctedMemoryErrors,GPU 7 Time Spent Accessing Memory (%),GPU 6 Utilization (%),system.gpu.6.enforcedPowerLimitWatts,system.gpu.6.memoryClock,system.gpu.1.smClock,GPU 7 Memory Allocated (%),Process CPU Utilization (%),Process CPU Threads In Use\n2.797490914683079,10.27112989,0.09887563504507751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.271193899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.272955966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,10.306231247,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,3.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,1.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,10.061078188764435,9000.0,350.0,0.0,0.0,0.0,350.0,405.0,210.0,1.0309488147955197,,\n,10.318507648,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.2960685468032935,107.0\n4.690086448351187,20.271469115,0.09887563504507751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.271603693,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.272654883,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,20.293737411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.2108402231056216,107.0\n,20.3308282,,0.0,4.0,0.0,0.0,4.0,5.0,5.0,2520.0,4.0,0.0,2520.0,0.0,50.0,5.0,0.0,2520.0,0.0,9000.0,1.0,9000.0,50.0,5.0,0.0,0.0,3.184287357818876,350.0,0.0,9000.0,37.83740883042459,0.0,37.820043197013106,4.0,350.0,2520.0,350.0,0.0,37.83740883042459,9000.0,7.0,350.0,2520.0,4.0,0.0,7.0,350.0,3.106142007467222,81.0,2520.0,2520.0,0.0,37.8504330554832,9000.0,0.0,1.0,5.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.13922353911609,9000.0,350.0,0.0,1.0,48.0,350.0,9000.0,2520.0,3.162580316054528,,\n,30.271797492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n2.652044906638115,30.271843611,0.09894301970743571,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.273028569,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,30.294024488,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.16604257108625753,45.0\n,30.305070903,,0.0,1.0,0.0,0.0,1.0,0.0,0.0,2520.0,1.0,0.0,210.0,0.0,0.0,0.0,0.0,210.0,0.0,405.0,0.0,405.0,0.0,0.0,0.0,0.0,1.0309488147955197,350.0,0.0,405.0,1.0309488147955197,0.0,1.0309488147955197,4.0,350.0,210.0,350.0,0.0,1.0309488147955197,405.0,0.0,350.0,210.0,4.0,0.0,0.0,350.0,1.0309488147955197,0.0,210.0,210.0,0.0,1.0309488147955197,405.0,0.0,0.0,0.0,1.0,1.0,0.0,350.0,0.0,405.0,1.0,10.061078188764435,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,210.0,1.0309488147955197,,\n,40.27104522,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n3.449659362392621,40.271071839,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.272310236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,40.294179189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.13585601358198773,45.0\n,40.305752863,,0.0,4.0,0.0,0.0,4.0,0.0,0.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,0.0,2.47663779630112,350.0,0.0,9000.0,2.47663779630112,0.0,2.47663779630112,4.0,350.0,2520.0,350.0,0.0,2.47663779630112,9000.0,0.0,350.0,2520.0,4.0,0.0,0.0,350.0,2.47663779630112,0.0,2520.0,2520.0,0.0,2.47663779630112,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,10.13922353911609,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,2.433223712772423,,\n4.862433700732305,50.271031814,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.271090283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.272918499,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,50.294298952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.11495211153551581,45.0\n,50.318423382,,0.0,4.0,0.0,0.0,4.0,95.0,93.0,2520.0,4.0,0.0,2520.0,0.0,90.0,95.0,0.0,2520.0,0.0,9000.0,91.0,9000.0,90.0,91.0,91.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,95.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,91.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,90.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n4.8887231831899705,60.271514081,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.27160292,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.272589271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,60.294060131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.09964999370319859,45.0\n,60.312472039,,0.0,4.0,0.0,0.0,4.0,100.0,96.0,2520.0,4.0,0.0,2520.0,0.0,37.0,97.0,0.0,2520.0,0.0,9000.0,92.0,9000.0,92.0,97.0,94.0,97.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,100.0,350.0,2520.0,4.0,0.0,96.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,99.0,94.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,93.0,46.0,350.0,9000.0,2520.0,37.82438460536598,,\n4.90378251953047,70.271745523,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.271850881,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.273319543,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,70.294075096,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.08796539459900561,45.0\n,70.31105827,,0.0,4.0,0.0,0.0,4.0,4.0,10.0,2520.0,4.0,0.0,2520.0,0.0,68.0,1.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,0.0,0.0,1.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,2.0,350.0,2520.0,4.0,0.0,18.0,350.0,37.86779868889468,0.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,0.0,65.0,350.0,9000.0,2520.0,37.82438460536598,,\n4.917938598542953,80.271183959,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.271259407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.272584873,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,80.294465735,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07875155420524389,45.0\n,80.309486556,,0.0,4.0,0.0,0.0,4.0,99.0,95.0,2520.0,4.0,0.0,2520.0,0.0,90.0,97.0,0.0,2520.0,0.0,9000.0,92.0,9000.0,93.0,98.0,95.0,98.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,100.0,350.0,2520.0,4.0,0.0,95.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,99.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,95.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n,90.271869282,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.929884990621815,90.272160726,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.27357638,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,90.294226326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.07129823271127145,45.0\n,90.312410507,,0.0,4.0,0.0,0.0,4.0,95.0,96.0,2520.0,4.0,0.0,2520.0,0.0,89.0,95.0,0.0,2520.0,0.0,9000.0,89.0,9000.0,90.0,92.0,91.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,96.0,350.0,2520.0,4.0,0.0,99.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,92.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,92.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n,100.271796959,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.946845482998061,100.271951366,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.273223472,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,100.294256951,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.06518025316215145,45.0\n,100.30876799,,0.0,4.0,0.0,0.0,4.0,58.0,58.0,2520.0,4.0,0.0,2520.0,0.0,0.0,52.0,0.0,2520.0,0.0,9000.0,41.0,9000.0,42.0,50.0,45.0,52.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,57.0,350.0,2520.0,4.0,0.0,63.0,350.0,37.86779868889468,49.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,52.0,48.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,44.0,1.0,350.0,9000.0,2520.0,37.82438460536598,,\n,110.271421971,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.960618832270971,110.271530809,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.272488352,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,110.293779126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.06001288312102998,45.0\n,110.309278297,,0.0,4.0,0.0,0.0,4.0,94.0,85.0,2520.0,4.0,0.0,2520.0,0.0,88.0,95.0,0.0,2520.0,0.0,9000.0,98.0,9000.0,98.0,91.0,95.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,95.0,350.0,37.86779868889468,97.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,88.0,97.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,95.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n4.970329794960928,120.271190411,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.271303139,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.273183184,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,120.298766758,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.055642030027836555,45.0\n,120.314965076,,0.0,4.0,0.0,0.0,4.0,95.0,90.0,2520.0,4.0,0.0,2520.0,0.0,92.0,95.0,0.0,2520.0,0.0,9000.0,90.0,9000.0,90.0,91.0,91.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,95.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,91.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,90.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n,130.271759985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.982507490571816,130.271817364,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.273485313,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,130.294289055,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.051848590202256246,45.0\n,130.310766388,,0.0,4.0,0.0,0.0,4.0,74.0,0.0,2520.0,4.0,0.0,2520.0,0.0,54.0,100.0,0.0,2520.0,0.0,9000.0,33.0,9000.0,73.0,86.0,63.0,60.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,83.0,350.0,2520.0,4.0,0.0,0.0,350.0,37.86779868889468,100.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,79.0,34.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,87.0,53.0,350.0,9000.0,2520.0,37.82438460536598,,\n,140.271911035,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n4.994088566924972,140.272026233,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.273340409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,140.294068063,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.048520401686124835,45.0\n,140.314063801,,0.0,4.0,0.0,0.0,4.0,95.0,31.0,2520.0,4.0,0.0,2520.0,0.0,97.0,95.0,0.0,2520.0,0.0,9000.0,48.0,9000.0,48.0,39.0,45.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,94.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,56.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,90.0,97.0,350.0,9000.0,2520.0,37.82438460536598,,\n,150.271645313,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.005846811940957,150.271676932,0.09894491253503003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.273749254,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,150.29383975,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04562070616443079,45.0\n,150.314025354,,0.0,4.0,0.0,0.0,4.0,99.0,95.0,2520.0,4.0,0.0,2520.0,0.0,90.0,97.0,0.0,2520.0,0.0,9000.0,92.0,9000.0,92.0,98.0,94.0,97.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,100.0,350.0,2520.0,4.0,0.0,95.0,350.0,37.86779868889468,94.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,99.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,94.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n5.014200995811297,160.271109684,0.09616775588862733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.271162813,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.272469039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,160.294226353,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04307545496514711,45.0\n,160.313611693,,0.0,4.0,0.0,0.0,4.0,95.0,93.0,2520.0,4.0,0.0,2520.0,0.0,91.0,95.0,0.0,2520.0,0.0,9000.0,90.0,9000.0,90.0,91.0,90.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,96.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,92.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,90.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n,170.272172564,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.020563167921364,170.2724064,0.09616775588862733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.273750285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,170.302894802,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.04080573357427479,45.0\n,170.308256642,,0.0,4.0,0.0,0.0,4.0,95.0,32.0,2520.0,4.0,0.0,2520.0,0.0,87.0,95.0,0.0,2520.0,0.0,9000.0,36.0,9000.0,35.0,32.0,90.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,95.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,32.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,33.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n,180.271004194,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.030777244185893,180.271125871,0.09616775588862733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.272146072,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,180.293749601,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03874949340821569,45.0\n,180.309451319,,0.0,4.0,0.0,0.0,4.0,100.0,20.0,2520.0,4.0,0.0,2520.0,0.0,55.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,76.0,0.0,73.0,100.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,100.0,350.0,2520.0,4.0,0.0,100.0,350.0,37.86779868889468,71.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,0.0,100.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,0.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n,190.271687548,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.041319158189761,190.271834185,0.09616775588862733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.273290998,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,190.294061071,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03689391898477521,45.0\n,190.311683263,,0.0,4.0,0.0,0.0,4.0,96.0,0.0,2520.0,4.0,0.0,2520.0,0.0,3.0,100.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,73.0,29.0,37.0,100.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,31.0,350.0,2520.0,4.0,0.0,0.0,350.0,37.86779868889468,69.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,97.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,70.0,4.0,350.0,9000.0,2520.0,37.82438460536598,,\n5.05212493236028,200.27176209,0.09616775588862733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.271906027,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.273510008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,200.294610185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.03521135513977279,45.0\n,200.313368716,,0.0,4.0,0.0,0.0,4.0,0.0,36.0,2520.0,4.0,0.0,2520.0,0.0,0.0,0.0,0.0,2520.0,0.0,9000.0,0.0,9000.0,0.0,12.0,0.0,0.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,14.0,350.0,2520.0,4.0,0.0,36.0,350.0,37.86779868889468,0.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,0.0,0.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,0.0,0.0,350.0,9000.0,2520.0,37.82438460536598,,\n,210.271980439,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n5.057463084741812,210.272122167,0.09616775588862733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.273705477,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,210.29398024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.033678618883045255,45.0\n,210.316331874,,0.0,4.0,0.0,0.0,4.0,96.0,97.0,2520.0,4.0,0.0,2520.0,0.0,89.0,95.0,0.0,2520.0,0.0,9000.0,91.0,9000.0,91.0,92.0,91.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,100.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,94.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,92.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n5.064287106784895,220.271525978,0.0961692701507028,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.271603266,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.273421642,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,220.299224783,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.032293307006591505,45.0\n,220.312914588,,0.0,4.0,0.0,0.0,4.0,97.0,0.0,2520.0,4.0,0.0,2520.0,0.0,64.0,95.0,0.0,2520.0,0.0,9000.0,91.0,9000.0,6.0,19.0,4.0,95.0,37.86779868889468,350.0,0.0,9000.0,37.86779868889468,0.0,37.86779868889468,4.0,350.0,2520.0,350.0,0.0,37.86779868889468,9000.0,95.0,350.0,2520.0,4.0,0.0,100.0,350.0,37.86779868889468,95.0,2520.0,2520.0,0.0,37.86779868889468,9000.0,0.0,0.0,95.0,4.0,4.0,0.0,350.0,0.0,9000.0,4.0,45.413166406182164,9000.0,350.0,0.0,4.0,95.0,350.0,9000.0,2520.0,37.82438460536598,,\n",
        "trainer_state.json": {},
        "eval_results.json": {
            "results": {
                "arc_challenge": {
                    "alias": "arc_challenge",
                    "acc,none": 0.23293515358361774,
                    "acc_stderr,none": 0.012352507042617355,
                    "acc_norm,none": 0.28242320819112626,
                    "acc_norm_stderr,none": 0.013155456884097213
                },
                "arc_easy": {
                    "alias": "arc_easy",
                    "acc,none": 0.2542087542087542,
                    "acc_stderr,none": 0.008934537681141764,
                    "acc_norm,none": 0.25925925925925924,
                    "acc_norm_stderr,none": 0.008992251535805688
                },
                "blimp_adjunct_island_filtered": {
                    "alias": "blimp_adjunct_island_filtered",
                    "acc,none": 0.7219827586206896,
                    "acc_stderr,none": 0.0147149710170833
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "alias": "blimp_anaphor_gender_agreement_filtered",
                    "acc,none": 0.5231719876416066,
                    "acc_stderr,none": 0.016036783072941874
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "alias": "blimp_anaphor_number_agreement_filtered",
                    "acc,none": 0.7250268528464017,
                    "acc_stderr,none": 0.01464133622119179
                },
                "blimp_animate_subject_passive_filtered": {
                    "alias": "blimp_animate_subject_passive_filtered",
                    "acc,none": 0.7005586592178771,
                    "acc_stderr,none": 0.015318257745976803
                },
                "blimp_animate_subject_trans_filtered": {
                    "alias": "blimp_animate_subject_trans_filtered",
                    "acc,none": 0.7432286023835319,
                    "acc_stderr,none": 0.01438696109870664
                },
                "blimp_causative_filtered": {
                    "alias": "blimp_causative_filtered",
                    "acc,none": 0.5122249388753056,
                    "acc_stderr,none": 0.01748755636866512
                },
                "blimp_complex_NP_island_filtered": {
                    "alias": "blimp_complex_NP_island_filtered",
                    "acc,none": 0.693853427895981,
                    "acc_stderr,none": 0.015855144891117102
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "acc,none": 0.7306843267108167,
                    "acc_stderr,none": 0.014745904625198291
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "alias": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "acc,none": 0.5384615384615384,
                    "acc_stderr,none": 0.01619112867411479
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_1_filtered",
                    "acc,none": 0.6706135629709364,
                    "acc_stderr,none": 0.015428191984127539
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_2_filtered",
                    "acc,none": 0.7647690655209453,
                    "acc_stderr,none": 0.013908199095836427
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "acc,none": 0.6960352422907489,
                    "acc_stderr,none": 0.01763895187379038
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "acc,none": 0.7804878048780488,
                    "acc_stderr,none": 0.014463401300704413
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "acc,none": 0.7832093517534537,
                    "acc_stderr,none": 0.013439876482754217
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "acc,none": 0.7883008356545961,
                    "acc_stderr,none": 0.0152561864425903
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "acc,none": 0.7833333333333333,
                    "acc_stderr,none": 0.014222907131568034
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "alias": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "acc,none": 0.6559485530546624,
                    "acc_stderr,none": 0.015561040296441134
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "alias": "blimp_distractor_agreement_relational_noun_filtered",
                    "acc,none": 0.7576142131979695,
                    "acc_stderr,none": 0.01527531819038555
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "alias": "blimp_distractor_agreement_relative_clause_filtered",
                    "acc,none": 0.7749712973593571,
                    "acc_stderr,none": 0.014158007588758636
                },
                "blimp_drop_argument_filtered": {
                    "alias": "blimp_drop_argument_filtered",
                    "acc,none": 0.7978260869565217,
                    "acc_stderr,none": 0.013248262329983308
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "alias": "blimp_ellipsis_n_bar_1_filtered",
                    "acc,none": 0.7331670822942643,
                    "acc_stderr,none": 0.015628054726989773
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "alias": "blimp_ellipsis_n_bar_2_filtered",
                    "acc,none": 0.36231884057971014,
                    "acc_stderr,none": 0.01671454262358683
                },
                "blimp_existential_there_object_raising_filtered": {
                    "alias": "blimp_existential_there_object_raising_filtered",
                    "acc,none": 0.8054187192118226,
                    "acc_stderr,none": 0.013901157415952627
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "alias": "blimp_existential_there_quantifiers_1_filtered",
                    "acc,none": 0.646236559139785,
                    "acc_stderr,none": 0.01568716192525147
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "alias": "blimp_existential_there_quantifiers_2_filtered",
                    "acc,none": 0.48737650933040616,
                    "acc_stderr,none": 0.01656955527675914
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "alias": "blimp_existential_there_subject_raising_filtered",
                    "acc,none": 0.8344155844155844,
                    "acc_stderr,none": 0.012234890383116323
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "alias": "blimp_expletive_it_object_raising_filtered",
                    "acc,none": 0.6956521739130435,
                    "acc_stderr,none": 0.016712698269105715
                },
                "blimp_inchoative_filtered": {
                    "alias": "blimp_inchoative_filtered",
                    "acc,none": 0.4994152046783626,
                    "acc_stderr,none": 0.01710963606821964
                },
                "blimp_intransitive_filtered": {
                    "alias": "blimp_intransitive_filtered",
                    "acc,none": 0.6762672811059908,
                    "acc_stderr,none": 0.015890696632295035
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "alias": "blimp_irregular_past_participle_adjectives_filtered",
                    "acc,none": 0.7169614984391259,
                    "acc_stderr,none": 0.014539017482960905
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "alias": "blimp_irregular_past_participle_verbs_filtered",
                    "acc,none": 0.8365180467091295,
                    "acc_stderr,none": 0.012055292567739977
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.6654228855721394,
                    "acc_stderr,none": 0.01665095739673485
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.773542600896861,
                    "acc_stderr,none": 0.014021566101226601
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "alias": "blimp_left_branch_island_echo_question_filtered",
                    "acc,none": 0.7296726504751848,
                    "acc_stderr,none": 0.014439875844389315
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "alias": "blimp_left_branch_island_simple_question_filtered",
                    "acc,none": 0.6098843322818086,
                    "acc_stderr,none": 0.01582554342690393
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "alias": "blimp_matrix_question_npi_licensor_present_filtered",
                    "acc,none": 0.6103336921420882,
                    "acc_stderr,none": 0.01600870171438206
                },
                "blimp_npi_present_1_filtered": {
                    "alias": "blimp_npi_present_1_filtered",
                    "acc,none": 0.935093509350935,
                    "acc_stderr,none": 0.008175769920276849
                },
                "blimp_npi_present_2_filtered": {
                    "alias": "blimp_npi_present_2_filtered",
                    "acc,none": 0.9037199124726477,
                    "acc_stderr,none": 0.009762246627990651
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "alias": "blimp_only_npi_licensor_present_filtered",
                    "acc,none": 0.8820861678004536,
                    "acc_stderr,none": 0.010865505320722394
                },
                "blimp_only_npi_scope_filtered": {
                    "alias": "blimp_only_npi_scope_filtered",
                    "acc,none": 0.7311827956989247,
                    "acc_stderr,none": 0.015333396759609227
                },
                "blimp_passive_1_filtered": {
                    "alias": "blimp_passive_1_filtered",
                    "acc,none": 0.6583333333333333,
                    "acc_stderr,none": 0.01637356497476294
                },
                "blimp_passive_2_filtered": {
                    "alias": "blimp_passive_2_filtered",
                    "acc,none": 0.6423034330011074,
                    "acc_stderr,none": 0.015959682189988358
                },
                "blimp_principle_A_c_command_filtered": {
                    "alias": "blimp_principle_A_c_command_filtered",
                    "acc,none": 0.8329809725158562,
                    "acc_stderr,none": 0.012133458570014521
                },
                "blimp_principle_A_case_1_filtered": {
                    "alias": "blimp_principle_A_case_1_filtered",
                    "acc,none": 0.7653508771929824,
                    "acc_stderr,none": 0.014040435254781257
                },
                "blimp_principle_A_case_2_filtered": {
                    "alias": "blimp_principle_A_case_2_filtered",
                    "acc,none": 0.6469945355191257,
                    "acc_stderr,none": 0.01580767224075839
                },
                "blimp_principle_A_domain_1_filtered": {
                    "alias": "blimp_principle_A_domain_1_filtered",
                    "acc,none": 0.8446389496717724,
                    "acc_stderr,none": 0.011988676401091818
                },
                "blimp_principle_A_domain_2_filtered": {
                    "alias": "blimp_principle_A_domain_2_filtered",
                    "acc,none": 0.8076502732240437,
                    "acc_stderr,none": 0.0130372009967862
                },
                "blimp_principle_A_domain_3_filtered": {
                    "alias": "blimp_principle_A_domain_3_filtered",
                    "acc,none": 0.6195536663124336,
                    "acc_stderr,none": 0.01583515214578183
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "alias": "blimp_principle_A_reconstruction_filtered",
                    "acc,none": 0.7290589451913133,
                    "acc_stderr,none": 0.014299806700247162
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "acc,none": 0.6280898876404495,
                    "acc_stderr,none": 0.016209850658241546
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "alias": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "acc,none": 0.5989417989417989,
                    "acc_stderr,none": 0.015951811717086355
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "alias": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "acc,none": 0.6648531011969532,
                    "acc_stderr,none": 0.015579700741395698
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "alias": "blimp_sentential_negation_npi_scope_filtered",
                    "acc,none": 0.7853042479908151,
                    "acc_stderr,none": 0.013921020493640636
                },
                "blimp_sentential_subject_island_filtered": {
                    "alias": "blimp_sentential_subject_island_filtered",
                    "acc,none": 0.7804370447450573,
                    "acc_stderr,none": 0.013360196789915544
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "alias": "blimp_superlative_quantifiers_1_filtered",
                    "acc,none": 0.5546475995914198,
                    "acc_stderr,none": 0.015892456824065985
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "alias": "blimp_superlative_quantifiers_2_filtered",
                    "acc,none": 0.8326572008113591,
                    "acc_stderr,none": 0.011893742190657171
                },
                "blimp_supplement_hypernym": {
                    "alias": "blimp_supplement_hypernym",
                    "acc,none": 0.6781472684085511,
                    "acc_stderr,none": 0.016109891303495192
                },
                "blimp_supplement_qa_congruence_easy": {
                    "alias": "blimp_supplement_qa_congruence_easy",
                    "acc,none": 0.5625,
                    "acc_stderr,none": 0.0625
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "alias": "blimp_supplement_qa_congruence_tricky",
                    "acc,none": 0.4484848484848485,
                    "acc_stderr,none": 0.038835659779569306
                },
                "blimp_supplement_subject_aux_inversion": {
                    "alias": "blimp_supplement_subject_aux_inversion",
                    "acc,none": 0.7548487199379363,
                    "acc_stderr,none": 0.006918566493455494
                },
                "blimp_supplement_turn_taking": {
                    "alias": "blimp_supplement_turn_taking",
                    "acc,none": 0.9214285714285714,
                    "acc_stderr,none": 0.016108721027177985
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "alias": "blimp_tough_vs_raising_1_filtered",
                    "acc,none": 0.3459915611814346,
                    "acc_stderr,none": 0.015457862496461887
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "alias": "blimp_tough_vs_raising_2_filtered",
                    "acc,none": 0.9434782608695652,
                    "acc_stderr,none": 0.007617561187847777
                },
                "blimp_transitive_filtered": {
                    "alias": "blimp_transitive_filtered",
                    "acc,none": 0.6036866359447005,
                    "acc_stderr,none": 0.016611757815587335
                },
                "blimp_wh_island_filtered": {
                    "alias": "blimp_wh_island_filtered",
                    "acc,none": 0.7979166666666667,
                    "acc_stderr,none": 0.012966856753223809
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "alias": "blimp_wh_questions_object_gap_filtered",
                    "acc,none": 0.6821885913853318,
                    "acc_stderr,none": 0.015896200201610564
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_filtered",
                    "acc,none": 0.7817371937639198,
                    "acc_stderr,none": 0.01379189790313069
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "alias": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "acc,none": 0.7374562427071178,
                    "acc_stderr,none": 0.015039454839470723
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_filtered",
                    "acc,none": 0.9012775842044135,
                    "acc_stderr,none": 0.010171568926971283
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "acc,none": 0.9051428571428571,
                    "acc_stderr,none": 0.00991146536386921
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_filtered",
                    "acc,none": 0.809575625680087,
                    "acc_stderr,none": 0.01295891496644709
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "alias": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "acc,none": 0.8615384615384616,
                    "acc_stderr,none": 0.01145565616265844
                },
                "cola": {
                    "alias": "cola",
                    "mcc,none": -0.028058579214906416,
                    "mcc_stderr,none": 0.030918982255760147
                },
                "hellaswag": {
                    "alias": "hellaswag",
                    "acc,none": 0.25652260505875324,
                    "acc_stderr,none": 0.0043582106894420325,
                    "acc_norm,none": 0.2614021111332404,
                    "acc_norm_stderr,none": 0.004385004998923735
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "alias": "inverse_scaling_hindsight_neglect_10shot",
                    "acc,none": 0.4888888888888889,
                    "acc_stderr,none": 0.028209664469082317,
                    "acc_norm,none": 0.4888888888888889,
                    "acc_norm_stderr,none": 0.028209664469082317
                },
                "inverse_scaling_into_the_unknown": {
                    "alias": "inverse_scaling_into_the_unknown",
                    "acc,none": 0.49780701754385964,
                    "acc_stderr,none": 0.011710420572631155,
                    "acc_norm,none": 0.49780701754385964,
                    "acc_norm_stderr,none": 0.011710420572631155
                },
                "inverse_scaling_memo_trap": {
                    "alias": "inverse_scaling_memo_trap",
                    "acc,none": 0.5480769230769231,
                    "acc_stderr,none": 0.016275982419150882,
                    "acc_norm,none": 0.5213675213675214,
                    "acc_norm_stderr,none": 0.016336810213354834
                },
                "inverse_scaling_modus_tollens": {
                    "alias": "inverse_scaling_modus_tollens",
                    "acc,none": 0.9425566343042071,
                    "acc_stderr,none": 0.0066212530727733365,
                    "acc_norm,none": 1.0,
                    "acc_norm_stderr,none": 0.0
                },
                "inverse_scaling_neqa": {
                    "alias": "inverse_scaling_neqa",
                    "acc,none": 0.53,
                    "acc_stderr,none": 0.028863651326417043,
                    "acc_norm,none": 0.53,
                    "acc_norm_stderr,none": 0.028863651326417043
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "alias": "inverse_scaling_pattern_matching_suppression",
                    "acc,none": 0.41946778711484595,
                    "acc_stderr,none": 0.013063227265063971,
                    "acc_norm,none": 0.33683473389355745,
                    "acc_norm_stderr,none": 0.012511441041227447
                },
                "inverse_scaling_quote_repetition": {
                    "alias": "inverse_scaling_quote_repetition",
                    "acc,none": 0.16,
                    "acc_stderr,none": 0.021201375610068258,
                    "acc_norm,none": 0.18666666666666668,
                    "acc_norm_stderr,none": 0.02253367767377886
                },
                "inverse_scaling_redefine_math": {
                    "alias": "inverse_scaling_redefine_math",
                    "acc,none": 0.5577777777777778,
                    "acc_stderr,none": 0.016564221880022427,
                    "acc_norm,none": 0.5577777777777778,
                    "acc_norm_stderr,none": 0.016564221880022427
                },
                "inverse_scaling_repetitive_algebra": {
                    "alias": "inverse_scaling_repetitive_algebra",
                    "acc,none": 0.489,
                    "acc_stderr,none": 0.01581547119529257,
                    "acc_norm,none": 0.482,
                    "acc_norm_stderr,none": 0.01580904569940659
                },
                "inverse_scaling_sig_figs": {
                    "alias": "inverse_scaling_sig_figs",
                    "acc,none": 0.3908695027994449,
                    "acc_stderr,none": 0.0033755106710580637,
                    "acc_norm,none": 0.3908695027994449,
                    "acc_norm_stderr,none": 0.0033755106710580637
                },
                "inverse_scaling_winobias_antistereotype": {
                    "alias": "inverse_scaling_winobias_antistereotype",
                    "acc,none": 0.7135922330097088,
                    "acc_stderr,none": 0.022299572732092512,
                    "acc_norm,none": 0.5169902912621359,
                    "acc_norm_stderr,none": 0.024648938029705903
                },
                "lambada_openai": {
                    "alias": "lambada_openai",
                    "perplexity,none": 52744231.65668113,
                    "perplexity_stderr,none": 5742575.936963265,
                    "acc,none": 0.0,
                    "acc_stderr,none": 0.0
                },
                "mathqa": {
                    "alias": "mathqa",
                    "acc,none": 0.2033500837520938,
                    "acc_stderr,none": 0.007368117208834293,
                    "acc_norm,none": 0.20971524288107202,
                    "acc_norm_stderr,none": 0.007452592792977309
                },
                "mnli": {
                    "alias": "mnli",
                    "acc,none": 0.34111054508405503,
                    "acc_stderr,none": 0.004785538608712214
                },
                "mnli_mismatch": {
                    "alias": "mnli_mismatch",
                    "acc,none": 0.3430634662327095,
                    "acc_stderr,none": 0.004787955385164881
                },
                "mrpc": {
                    "alias": "mrpc",
                    "acc,none": 0.5784313725490197,
                    "acc_stderr,none": 0.024477263169831738
                },
                "openbookqa": {
                    "alias": "openbookqa",
                    "acc,none": 0.154,
                    "acc_stderr,none": 0.016158285192455334,
                    "acc_norm,none": 0.262,
                    "acc_norm_stderr,none": 0.019684688820194637
                },
                "piqa": {
                    "alias": "piqa",
                    "acc,none": 0.5326441784548422,
                    "acc_stderr,none": 0.011640934420031744,
                    "acc_norm,none": 0.5092491838955386,
                    "acc_norm_stderr,none": 0.011663828032649192
                },
                "qa4mre_2011": {
                    "alias": "qa4mre_2011",
                    "acc,none": 0.13333333333333333,
                    "acc_stderr,none": 0.03116175682952018,
                    "acc_norm,none": 0.175,
                    "acc_norm_stderr,none": 0.0348315273009618
                },
                "qa4mre_2012": {
                    "alias": "qa4mre_2012",
                    "acc,none": 0.1625,
                    "acc_stderr,none": 0.029256375964756727,
                    "acc_norm,none": 0.275,
                    "acc_norm_stderr,none": 0.03541088558070898
                },
                "qa4mre_2013": {
                    "alias": "qa4mre_2013",
                    "acc,none": 0.22887323943661972,
                    "acc_stderr,none": 0.024972796486048474,
                    "acc_norm,none": 0.17253521126760563,
                    "acc_norm_stderr,none": 0.022460551373184274
                },
                "qnli": {
                    "alias": "qnli",
                    "acc,none": 0.4973457807065715,
                    "acc_stderr,none": 0.006765315228093288
                },
                "qqp": {
                    "alias": "qqp",
                    "acc,none": 0.4141479099678457,
                    "acc_stderr,none": 0.002449769532931361
                },
                "rte": {
                    "alias": "rte",
                    "acc,none": 0.5090252707581228,
                    "acc_stderr,none": 0.0300915598263313
                },
                "sciq": {
                    "alias": "sciq",
                    "acc,none": 0.164,
                    "acc_stderr,none": 0.011715000693181423,
                    "acc_norm,none": 0.199,
                    "acc_norm_stderr,none": 0.012631649083099107
                },
                "squad_completion": {
                    "alias": "squad_completion",
                    "contains,none": 0.0006702412868632708,
                    "contains_stderr,none": "N/A"
                },
                "sst2": {
                    "alias": "sst2",
                    "acc,none": 0.4988532110091743,
                    "acc_stderr,none": 0.016941809127923514
                },
                "swag": {
                    "alias": "swag",
                    "acc,none": 0.26781965410376884,
                    "acc_stderr,none": 0.0031308407509842017,
                    "acc_norm,none": 0.25372388283514946,
                    "acc_norm_stderr,none": 0.0030765300983979747
                },
                "tinyGSM8k": {
                    "alias": "tinyGSM8k",
                    "exact_match,strict-match": 0.0055335888559958765,
                    "exact_match_stderr,strict-match": "N/A",
                    "exact_match,flexible-extract": 0.0055335888559958765,
                    "exact_match_stderr,flexible-extract": "N/A"
                },
                "tinyMMLU": {
                    "alias": "tinyMMLU",
                    "acc_norm,none": 0.2686418143912649,
                    "acc_norm_stderr,none": "N/A"
                },
                "tinyTruthfulQA": {
                    "alias": "tinyTruthfulQA",
                    "acc,none": 0.5336833903999536,
                    "acc_stderr,none": "N/A"
                },
                "triviaqa": {
                    "alias": "triviaqa",
                    "exact_match,remove_whitespace": 0.0,
                    "exact_match_stderr,remove_whitespace": 0.0
                },
                "winogrande": {
                    "alias": "winogrande",
                    "acc,none": 0.5114443567482242,
                    "acc_stderr,none": 0.014048804199859391
                },
                "wnli": {
                    "alias": "wnli",
                    "acc,none": 0.49295774647887325,
                    "acc_stderr,none": 0.05975550263548289
                },
                "wsc273": {
                    "alias": "wsc273",
                    "acc,none": 0.5091575091575091,
                    "acc_stderr,none": 0.03031186794526186
                }
            },
            "group_subtasks": {
                "arc_challenge": [],
                "arc_easy": [],
                "blimp_principle_A_reconstruction_filtered": [],
                "blimp_causative_filtered": [],
                "blimp_wh_island_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_2_filtered": [],
                "blimp_intransitive_filtered": [],
                "blimp_superlative_quantifiers_2_filtered": [],
                "blimp_wh_vs_that_no_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": [],
                "blimp_wh_vs_that_with_gap_filtered": [],
                "blimp_principle_A_case_1_filtered": [],
                "blimp_tough_vs_raising_1_filtered": [],
                "blimp_matrix_question_npi_licensor_present_filtered": [],
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": [],
                "blimp_wh_vs_that_no_gap_long_distance_filtered": [],
                "blimp_principle_A_case_2_filtered": [],
                "blimp_complex_NP_island_filtered": [],
                "blimp_tough_vs_raising_2_filtered": [],
                "blimp_wh_questions_subject_gap_long_distance_filtered": [],
                "blimp_principle_A_c_command_filtered": [],
                "blimp_anaphor_gender_agreement_filtered": [],
                "blimp_determiner_noun_agreement_irregular_1_filtered": [],
                "blimp_ellipsis_n_bar_2_filtered": [],
                "blimp_sentential_negation_npi_scope_filtered": [],
                "blimp_only_npi_licensor_present_filtered": [],
                "blimp_distractor_agreement_relational_noun_filtered": [],
                "blimp_existential_there_object_raising_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_principle_A_domain_2_filtered": [],
                "blimp_passive_2_filtered": [],
                "blimp_superlative_quantifiers_1_filtered": [],
                "blimp_coordinate_structure_constraint_object_extraction_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_2_filtered": [],
                "blimp_irregular_past_participle_adjectives_filtered": [],
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_wh_questions_subject_gap_filtered": [],
                "blimp_adjunct_island_filtered": [],
                "blimp_existential_there_quantifiers_2_filtered": [],
                "blimp_determiner_noun_agreement_irregular_2_filtered": [],
                "blimp_animate_subject_trans_filtered": [],
                "blimp_anaphor_number_agreement_filtered": [],
                "blimp_sentential_negation_npi_licensor_present_filtered": [],
                "blimp_determiner_noun_agreement_2_filtered": [],
                "blimp_passive_1_filtered": [],
                "blimp_inchoative_filtered": [],
                "blimp_wh_vs_that_with_gap_long_distance_filtered": [],
                "blimp_existential_there_subject_raising_filtered": [],
                "blimp_wh_questions_object_gap_filtered": [],
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": [],
                "blimp_regular_plural_subject_verb_agreement_1_filtered": [],
                "blimp_existential_there_quantifiers_1_filtered": [],
                "blimp_drop_argument_filtered": [],
                "blimp_expletive_it_object_raising_filtered": [],
                "blimp_left_branch_island_simple_question_filtered": [],
                "blimp_irregular_past_participle_verbs_filtered": [],
                "blimp_npi_present_1_filtered": [],
                "blimp_animate_subject_passive_filtered": [],
                "blimp_transitive_filtered": [],
                "blimp_principle_A_domain_3_filtered": [],
                "blimp_npi_present_2_filtered": [],
                "blimp_sentential_subject_island_filtered": [],
                "blimp_principle_A_domain_1_filtered": [],
                "blimp_only_npi_scope_filtered": [],
                "blimp_determiner_noun_agreement_1_filtered": [],
                "blimp_left_branch_island_echo_question_filtered": [],
                "blimp_ellipsis_n_bar_1_filtered": [],
                "blimp_distractor_agreement_relative_clause_filtered": [],
                "blimp_supplement_qa_congruence_tricky": [],
                "blimp_supplement_turn_taking": [],
                "blimp_supplement_hypernym": [],
                "blimp_supplement_qa_congruence_easy": [],
                "blimp_supplement_subject_aux_inversion": [],
                "cola": [],
                "sst2": [],
                "qqp": [],
                "mnli": [],
                "mnli_mismatch": [],
                "wnli": [],
                "rte": [],
                "qnli": [],
                "mrpc": [],
                "hellaswag": [],
                "inverse_scaling_into_the_unknown": [],
                "inverse_scaling_redefine_math": [],
                "inverse_scaling_modus_tollens": [],
                "inverse_scaling_pattern_matching_suppression": [],
                "inverse_scaling_sig_figs": [],
                "inverse_scaling_memo_trap": [],
                "inverse_scaling_neqa": [],
                "inverse_scaling_winobias_antistereotype": [],
                "inverse_scaling_quote_repetition": [],
                "inverse_scaling_repetitive_algebra": [],
                "inverse_scaling_hindsight_neglect_10shot": [],
                "lambada_openai": [],
                "mathqa": [],
                "openbookqa": [],
                "piqa": [],
                "qa4mre_2012": [],
                "qa4mre_2013": [],
                "qa4mre_2011": [],
                "sciq": [],
                "squad_completion": [],
                "swag": [],
                "tinyGSM8k": [],
                "tinyMMLU": [],
                "tinyTruthfulQA": [],
                "triviaqa": [],
                "winogrande": [],
                "wsc273": []
            },
            "configs": {
                "arc_challenge": {
                    "task": "arc_challenge",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Challenge",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "arc_easy": {
                    "task": "arc_easy",
                    "tag": [
                        "ai2_arc"
                    ],
                    "dataset_path": "allenai/ai2_arc",
                    "dataset_name": "ARC-Easy",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{choices.label.index(answerKey)}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_adjunct_island_filtered": {
                    "task": "blimp_adjunct_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/adjunct_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "task": "blimp_anaphor_gender_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_gender_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "task": "blimp_anaphor_number_agreement_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/anaphor_number_agreement.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_passive_filtered": {
                    "task": "blimp_animate_subject_passive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_passive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_animate_subject_trans_filtered": {
                    "task": "blimp_animate_subject_trans_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/animate_subject_trans.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_causative_filtered": {
                    "task": "blimp_causative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/causative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_complex_NP_island_filtered": {
                    "task": "blimp_complex_NP_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/complex_NP_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "task": "blimp_coordinate_structure_constraint_complex_left_branch_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_complex_left_branch.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "task": "blimp_coordinate_structure_constraint_object_extraction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/coordinate_structure_constraint_object_extraction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adj_irregular_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "task": "blimp_determiner_noun_agreement_with_adjective_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/determiner_noun_agreement_with_adjective_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "task": "blimp_distractor_agreement_relational_noun_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relational_noun.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "task": "blimp_distractor_agreement_relative_clause_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/distractor_agreement_relative_clause.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_drop_argument_filtered": {
                    "task": "blimp_drop_argument_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/drop_argument.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "task": "blimp_ellipsis_n_bar_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "task": "blimp_ellipsis_n_bar_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/ellipsis_n_bar_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_object_raising_filtered": {
                    "task": "blimp_existential_there_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "task": "blimp_existential_there_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "task": "blimp_existential_there_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "task": "blimp_existential_there_subject_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/existential_there_subject_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "task": "blimp_expletive_it_object_raising_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/expletive_it_object_raising.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_inchoative_filtered": {
                    "task": "blimp_inchoative_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/inchoative.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_intransitive_filtered": {
                    "task": "blimp_intransitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/intransitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "task": "blimp_irregular_past_participle_adjectives_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_adjectives.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "task": "blimp_irregular_past_participle_verbs_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_past_participle_verbs.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_irregular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/irregular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "task": "blimp_left_branch_island_echo_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_echo_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "task": "blimp_left_branch_island_simple_question_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/left_branch_island_simple_question.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "task": "blimp_matrix_question_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/matrix_question_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_1_filtered": {
                    "task": "blimp_npi_present_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_npi_present_2_filtered": {
                    "task": "blimp_npi_present_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/npi_present_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "task": "blimp_only_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_only_npi_scope_filtered": {
                    "task": "blimp_only_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/only_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_1_filtered": {
                    "task": "blimp_passive_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_passive_2_filtered": {
                    "task": "blimp_passive_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/passive_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_c_command_filtered": {
                    "task": "blimp_principle_A_c_command_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_c_command.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_1_filtered": {
                    "task": "blimp_principle_A_case_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_case_2_filtered": {
                    "task": "blimp_principle_A_case_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_case_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_1_filtered": {
                    "task": "blimp_principle_A_domain_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_2_filtered": {
                    "task": "blimp_principle_A_domain_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_domain_3_filtered": {
                    "task": "blimp_principle_A_domain_3_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_domain_3.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "task": "blimp_principle_A_reconstruction_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/principle_A_reconstruction.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "task": "blimp_regular_plural_subject_verb_agreement_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/regular_plural_subject_verb_agreement_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "task": "blimp_sentential_negation_npi_licensor_present_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_licensor_present.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "task": "blimp_sentential_negation_npi_scope_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_negation_npi_scope.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_sentential_subject_island_filtered": {
                    "task": "blimp_sentential_subject_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/sentential_subject_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "task": "blimp_superlative_quantifiers_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "task": "blimp_superlative_quantifiers_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/superlative_quantifiers_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_hypernym": {
                    "task": "blimp_supplement_hypernym",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/hypernym.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_easy": {
                    "task": "blimp_supplement_qa_congruence_easy",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_easy.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "task": "blimp_supplement_qa_congruence_tricky",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/qa_congruence_tricky.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_subject_aux_inversion": {
                    "task": "blimp_supplement_subject_aux_inversion",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/subject_aux_inversion.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_supplement_turn_taking": {
                    "task": "blimp_supplement_turn_taking",
                    "tag": "blimp_supplement",
                    "group": "blimp_supplement",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/supplement_filtered/turn_taking.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "task": "blimp_tough_vs_raising_1_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_1.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "task": "blimp_tough_vs_raising_2_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/tough_vs_raising_2.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_transitive_filtered": {
                    "task": "blimp_transitive_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/transitive.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_island_filtered": {
                    "task": "blimp_wh_island_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_island.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "task": "blimp_wh_questions_object_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_object_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "task": "blimp_wh_questions_subject_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "task": "blimp_wh_questions_subject_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_questions_subject_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_no_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_no_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "task": "blimp_wh_vs_that_with_gap_long_distance_filtered",
                    "tag": "blimp_filtered",
                    "group": "blimp_filtered",
                    "dataset_path": "json",
                    "dataset_kwargs": {
                        "data_files": "/home/junyanc/model_discovery/data/blimp_filtered/wh_vs_that_with_gap_long_distance.jsonl"
                    },
                    "validation_split": "train",
                    "doc_to_text": "",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{[sentence_good, sentence_bad]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{sentence_good}} {{sentence_bad}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "cola": {
                    "task": "cola",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "cola",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Does this sentence make sense?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "mcc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "hellaswag": {
                    "task": "hellaswag",
                    "tag": [
                        "multiple_choice"
                    ],
                    "dataset_path": "hellaswag",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
                    "doc_to_text": "{{query}}",
                    "doc_to_target": "{{label}}",
                    "doc_to_choice": "choices",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "task": "inverse_scaling_hindsight_neglect_10shot",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/hindsight-neglect-10shot",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_into_the_unknown": {
                    "task": "inverse_scaling_into_the_unknown",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/into-the-unknown",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_memo_trap": {
                    "task": "inverse_scaling_memo_trap",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/memo-trap",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_modus_tollens": {
                    "task": "inverse_scaling_modus_tollens",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/modus-tollens",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_neqa": {
                    "task": "inverse_scaling_neqa",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/NeQA",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "task": "inverse_scaling_pattern_matching_suppression",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/pattern-matching-suppression",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_quote_repetition": {
                    "task": "inverse_scaling_quote_repetition",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/quote-repetition",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_redefine_math": {
                    "task": "inverse_scaling_redefine_math",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "inverse-scaling/redefine-math",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_repetitive_algebra": {
                    "task": "inverse_scaling_repetitive_algebra",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/repetitive-algebra",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_sig_figs": {
                    "task": "inverse_scaling_sig_figs",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "Albertmade/sig-figs",
                    "test_split": "train",
                    "doc_to_text": "prompt",
                    "doc_to_target": "answer_index",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": "",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "inverse_scaling_winobias_antistereotype": {
                    "task": "inverse_scaling_winobias_antistereotype",
                    "tag": [
                        "inverse_scaling_mc"
                    ],
                    "group": [
                        "inverse_scaling_mc"
                    ],
                    "dataset_path": "mathemakitten/winobias_antistereotype_test_v5",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "text",
                    "doc_to_target": "target",
                    "doc_to_choice": "classes",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "lambada_openai": {
                    "task": "lambada_openai",
                    "tag": [
                        "lambada"
                    ],
                    "dataset_path": "EleutherAI/lambada_openai",
                    "dataset_name": "default",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "test_split": "test",
                    "doc_to_text": "{{text.split(' ')[:-1]|join(' ')}}",
                    "doc_to_target": "{{' '+text.split(' ')[-1]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "perplexity",
                            "aggregation": "perplexity",
                            "higher_is_better": false
                        },
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "loglikelihood",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{text}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mathqa": {
                    "task": "mathqa",
                    "tag": [
                        "math_word_problems"
                    ],
                    "dataset_path": "math_qa",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "Question: {{Problem}}\nAnswer:",
                    "doc_to_target": "{{['a', 'b', 'c', 'd', 'e'].index(correct)}}",
                    "doc_to_choice": "def doc_to_choice(doc):\n    choices = [\n        c[4:].rstrip(\" ,\")\n        for c in re.findall(r\"[abcd] \\) .*?, |e \\) .*?$\", doc[\"options\"])\n    ]\n    return choices\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "Question: {{Problem}}\nAnswer:",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli": {
                    "task": "mnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_matched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mnli_mismatch": {
                    "task": "mnli_mismatch",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mnli",
                    "training_split": "train",
                    "validation_split": "validation_mismatched",
                    "doc_to_text": "def doc_to_text(doc) -> str:\n    return \"{}\\nQuestion: {} True, False or Neither?\\nAnswer:\".format(\n        doc[\"premise\"],\n        doc[\"hypothesis\"].strip()\n        + (\"\" if doc[\"hypothesis\"].strip().endswith(\".\") else \".\"),\n    )\n",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "Neither",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "mrpc": {
                    "task": "mrpc",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "mrpc",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Sentence 1: {{sentence1}}\nSentence 2: {{sentence2}}\nQuestion: Do both sentences mean the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "openbookqa": {
                    "task": "openbookqa",
                    "dataset_path": "openbookqa",
                    "dataset_name": "main",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "question_stem",
                    "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
                    "doc_to_choice": "{{choices.text}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question_stem",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "piqa": {
                    "task": "piqa",
                    "dataset_path": "piqa",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{goal}}\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[sol1, sol2]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "goal",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2011": {
                    "task": "qa4mre_2011",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2011.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2012": {
                    "task": "qa4mre_2012",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2012.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qa4mre_2013": {
                    "task": "qa4mre_2013",
                    "tag": [
                        "qa4mre"
                    ],
                    "dataset_path": "qa4mre",
                    "dataset_name": "2013.main.EN",
                    "test_split": "train",
                    "doc_to_text": "{{document_str.strip()}}\nQuestion: {{question_str}}\nAnswer:",
                    "doc_to_target": "{{correct_answer_id|int - 1}}",
                    "doc_to_choice": "{{answer_options.answer_str}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{document_str.strip()}} + ' ' + {{question_str}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qnli": {
                    "task": "qnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{question}}\n{{sentence}}\nQuestion: Does this response answer the question?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "qqp": {
                    "task": "qqp",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "qqp",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question 1: {{question1}}\nQuestion 2: {{question2}}\nQuestion: Do both questions ask the same thing?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "no",
                        "yes"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "rte": {
                    "task": "rte",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "rte",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "True",
                        "False"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "sciq": {
                    "task": "sciq",
                    "dataset_path": "sciq",
                    "training_split": "train",
                    "validation_split": "validation",
                    "test_split": "test",
                    "doc_to_text": "{{support.lstrip()}}\nQuestion: {{question}}\nAnswer:",
                    "doc_to_target": 3,
                    "doc_to_choice": "{{[distractor1, distractor2, distractor3, correct_answer]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "{{support}} {{question}}",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "squad_completion": {
                    "task": "squad_completion",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n\n"
                        ],
                        "do_sample": false
                    },
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0
                    }
                },
                "sst2": {
                    "task": "sst2",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "sst2",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence}}\nQuestion: Is this sentence positive or negative?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "negative",
                        "positive"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "swag": {
                    "task": "swag",
                    "dataset_path": "swag",
                    "dataset_name": "regular",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "startphrase",
                    "doc_to_target": "label",
                    "doc_to_choice": "{{[ending0, ending1, ending2, ending3]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        },
                        {
                            "metric": "acc_norm",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 1.0
                    }
                },
                "tinyGSM8k": {
                    "task": "tinyGSM8k",
                    "dataset_path": "tinyBenchmarks/tinyGSM8k",
                    "dataset_name": "main",
                    "training_split": "train",
                    "test_split": "test",
                    "fewshot_split": "train",
                    "doc_to_text": "Question: {{question}}\nAnswer:",
                    "doc_to_target": "{{answer}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 5,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "def agg_gpirt_gsm8k(items: List[float], benchmark: str = \"gsm8k\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": false,
                            "regexes_to_ignore": [
                                ",",
                                "\\$",
                                "(?s).*#### ",
                                "\\.$"
                            ]
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "Question:",
                            "</s>",
                            "<|im_end|>"
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "strict-match",
                            "filter": [
                                {
                                    "function": "regex",
                                    "regex_pattern": "#### (\\-?[0-9\\.\\,]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        },
                        {
                            "name": "flexible-extract",
                            "filter": [
                                {
                                    "function": "regex",
                                    "group_select": -1,
                                    "regex_pattern": "(-?[$0-9.,]{2,})|(-?[0-9]+)"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyMMLU": {
                    "task": "tinyMMLU",
                    "dataset_path": "tinyBenchmarks/tinyMMLU",
                    "dataset_name": "all",
                    "test_split": "test",
                    "fewshot_split": "dev",
                    "doc_to_text": "{{input_formatted}}",
                    "doc_to_target": "answer",
                    "doc_to_choice": [
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "fewshot_config": {
                        "sampler": "first_n"
                    },
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc_norm",
                            "aggregation": "def agg_gpirt_mmlu(items: List[float], benchmark: str = \"mmlu\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 0.0
                    }
                },
                "tinyTruthfulQA": {
                    "task": "tinyTruthfulQA",
                    "dataset_path": "tinyBenchmarks/tinyTruthfulQA",
                    "dataset_name": "multiple_choice",
                    "validation_split": "validation",
                    "doc_to_text": "{% set prompt_qa = 'Q: What is human life expectancy in the United States?\nA: Human life expectancy in the United States is 78 years.\n\nQ: Who was president of the United States in 1955?\nA: Dwight D. Eisenhower was president of the United States in 1955.\n\nQ: Which party did he belong to?\nA: He belonged to the Republican Party.\n\nQ: What is the square root of banana?\nA: I have no comment.\n\nQ: How does a telescope work?\nA: Telescopes use lenses or mirrors to focus light and make objects appear closer.\n\nQ: Where were the 1992 Olympics held?\nA: The 1992 Olympics were held in Barcelona, Spain.'%}{{prompt_qa + '\n\nQ: ' + question + '\nA:'}}",
                    "doc_to_target": 0,
                    "doc_to_choice": "{{mc2_targets.choices}}",
                    "process_results": "def process_results_mc2(result_cache, doc_id, doc, results):\n    lls, is_greedy = zip(*results)\n\n    UNCACHED= doc_id not in result_cache\n    if UNCACHED or doc is not None:\n        result_cache[doc_id] = {}\n        labels= doc[\"mc2_targets\"][\"labels\"]\n        result_cache[doc_id][\"labels\"]= labels\n    else:\n        labels= result_cache[doc_id][\"labels\"]\n\n    # Split on the first `0` as everything before it is true (`1`).\n    split_idx = list(labels).index(0)\n    # Compute the normalized probability mass for the correct answer.\n    ll_true, ll_false = lls[:split_idx], lls[split_idx:]\n    p_true, p_false = np.exp(np.array(ll_true)), np.exp(np.array(ll_false))\n    p_true = p_true / (sum(p_true) + sum(p_false))\n\n    return result_cache, {\"acc\": sum(p_true)}\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "def agg_gpirt_truthfulqa(items: List[float], benchmark: str = \"truthfulqa\") -> float:\n    items = np.array(items)\n    predictions = tb.evaluate(items, benchmark)\n    return predictions[benchmark][\"gpirt\"]\n",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 0.0
                    }
                },
                "triviaqa": {
                    "task": "triviaqa",
                    "dataset_path": "trivia_qa",
                    "dataset_name": "rc.nocontext",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "Question: {{question}}?\nAnswer:",
                    "doc_to_target": "{{answer.aliases}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "exact_match",
                            "aggregation": "mean",
                            "higher_is_better": true,
                            "ignore_case": true,
                            "ignore_punctuation": true
                        }
                    ],
                    "output_type": "generate_until",
                    "generation_kwargs": {
                        "until": [
                            "\n",
                            ".",
                            ","
                        ],
                        "do_sample": false,
                        "temperature": 0.0
                    },
                    "repeats": 1,
                    "filter_list": [
                        {
                            "name": "remove_whitespace",
                            "filter": [
                                {
                                    "function": "remove_whitespace"
                                },
                                {
                                    "function": "take_first"
                                }
                            ]
                        }
                    ],
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "question",
                    "metadata": {
                        "version": 3.0
                    }
                },
                "winogrande": {
                    "task": "winogrande",
                    "dataset_path": "winogrande",
                    "dataset_name": "winogrande_xl",
                    "dataset_kwargs": {
                        "trust_remote_code": true
                    },
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
                    "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
                    "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "sentence",
                    "metadata": {
                        "version": 1.0
                    }
                },
                "wnli": {
                    "task": "wnli",
                    "tag": "glue",
                    "dataset_path": "glue",
                    "dataset_name": "wnli",
                    "training_split": "train",
                    "validation_split": "validation",
                    "doc_to_text": "{{sentence1}}\nQuestion: {{sentence2}} True or False?\nAnswer:",
                    "doc_to_target": "label",
                    "doc_to_choice": [
                        "False",
                        "True"
                    ],
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc"
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": false,
                    "metadata": {
                        "version": 2.0
                    }
                },
                "wsc273": {
                    "task": "wsc273",
                    "dataset_path": "winograd_wsc",
                    "dataset_name": "wsc273",
                    "test_split": "test",
                    "process_docs": "def process_doc(dataset):\n    def process_fn(doc):\n        # The HF implementation of `wsc273` is not `partial evaluation` friendly.\n        doc[\"text\"] = doc[\"text\"].replace(\"  \", \" \")\n        doc[\"options\"][0] = __normalize_option(doc, doc[\"options\"][0])\n        doc[\"options\"][1] = __normalize_option(doc, doc[\"options\"][1])\n        return doc\n\n    return dataset.map(process_fn)\n",
                    "doc_to_text": "label",
                    "doc_to_target": "{% set index = pronoun_loc + pronoun | length %}{{text[index:]}}",
                    "doc_to_choice": "{% set template = text[:pronoun_loc] %}{{[template+options[0], template+options[1]]}}",
                    "description": "",
                    "target_delimiter": " ",
                    "fewshot_delimiter": "\n\n",
                    "num_fewshot": 0,
                    "metric_list": [
                        {
                            "metric": "acc",
                            "aggregation": "mean",
                            "higher_is_better": true
                        }
                    ],
                    "output_type": "multiple_choice",
                    "repeats": 1,
                    "should_decontaminate": true,
                    "doc_to_decontamination_query": "text",
                    "metadata": {
                        "version": 1.0
                    }
                }
            },
            "versions": {
                "arc_challenge": 1.0,
                "arc_easy": 1.0,
                "blimp_adjunct_island_filtered": 1.0,
                "blimp_anaphor_gender_agreement_filtered": 1.0,
                "blimp_anaphor_number_agreement_filtered": 1.0,
                "blimp_animate_subject_passive_filtered": 1.0,
                "blimp_animate_subject_trans_filtered": 1.0,
                "blimp_causative_filtered": 1.0,
                "blimp_complex_NP_island_filtered": 1.0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 1.0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 1.0,
                "blimp_determiner_noun_agreement_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 1.0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 1.0,
                "blimp_distractor_agreement_relational_noun_filtered": 1.0,
                "blimp_distractor_agreement_relative_clause_filtered": 1.0,
                "blimp_drop_argument_filtered": 1.0,
                "blimp_ellipsis_n_bar_1_filtered": 1.0,
                "blimp_ellipsis_n_bar_2_filtered": 1.0,
                "blimp_existential_there_object_raising_filtered": 1.0,
                "blimp_existential_there_quantifiers_1_filtered": 1.0,
                "blimp_existential_there_quantifiers_2_filtered": 1.0,
                "blimp_existential_there_subject_raising_filtered": 1.0,
                "blimp_expletive_it_object_raising_filtered": 1.0,
                "blimp_inchoative_filtered": 1.0,
                "blimp_intransitive_filtered": 1.0,
                "blimp_irregular_past_participle_adjectives_filtered": 1.0,
                "blimp_irregular_past_participle_verbs_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_left_branch_island_echo_question_filtered": 1.0,
                "blimp_left_branch_island_simple_question_filtered": 1.0,
                "blimp_matrix_question_npi_licensor_present_filtered": 1.0,
                "blimp_npi_present_1_filtered": 1.0,
                "blimp_npi_present_2_filtered": 1.0,
                "blimp_only_npi_licensor_present_filtered": 1.0,
                "blimp_only_npi_scope_filtered": 1.0,
                "blimp_passive_1_filtered": 1.0,
                "blimp_passive_2_filtered": 1.0,
                "blimp_principle_A_c_command_filtered": 1.0,
                "blimp_principle_A_case_1_filtered": 1.0,
                "blimp_principle_A_case_2_filtered": 1.0,
                "blimp_principle_A_domain_1_filtered": 1.0,
                "blimp_principle_A_domain_2_filtered": 1.0,
                "blimp_principle_A_domain_3_filtered": 1.0,
                "blimp_principle_A_reconstruction_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 1.0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 1.0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 1.0,
                "blimp_sentential_negation_npi_scope_filtered": 1.0,
                "blimp_sentential_subject_island_filtered": 1.0,
                "blimp_superlative_quantifiers_1_filtered": 1.0,
                "blimp_superlative_quantifiers_2_filtered": 1.0,
                "blimp_supplement_hypernym": 1.0,
                "blimp_supplement_qa_congruence_easy": 1.0,
                "blimp_supplement_qa_congruence_tricky": 1.0,
                "blimp_supplement_subject_aux_inversion": 1.0,
                "blimp_supplement_turn_taking": 1.0,
                "blimp_tough_vs_raising_1_filtered": 1.0,
                "blimp_tough_vs_raising_2_filtered": 1.0,
                "blimp_transitive_filtered": 1.0,
                "blimp_wh_island_filtered": 1.0,
                "blimp_wh_questions_object_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_filtered": 1.0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_filtered": 1.0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_filtered": 1.0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 1.0,
                "cola": 1.0,
                "hellaswag": 1.0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 1.0,
                "mathqa": 1.0,
                "mnli": 1.0,
                "mnli_mismatch": 1.0,
                "mrpc": 1.0,
                "openbookqa": 1.0,
                "piqa": 1.0,
                "qa4mre_2011": 1.0,
                "qa4mre_2012": 1.0,
                "qa4mre_2013": 1.0,
                "qnli": 1.0,
                "qqp": 2.0,
                "rte": 1.0,
                "sciq": 1.0,
                "squad_completion": 0,
                "sst2": 1.0,
                "swag": 1.0,
                "tinyGSM8k": 0.0,
                "tinyMMLU": 0.0,
                "tinyTruthfulQA": 0.0,
                "triviaqa": 3.0,
                "winogrande": 1.0,
                "wnli": 2.0,
                "wsc273": 1.0
            },
            "n-shot": {
                "arc_challenge": 0,
                "arc_easy": 0,
                "blimp_adjunct_island_filtered": 0,
                "blimp_anaphor_gender_agreement_filtered": 0,
                "blimp_anaphor_number_agreement_filtered": 0,
                "blimp_animate_subject_passive_filtered": 0,
                "blimp_animate_subject_trans_filtered": 0,
                "blimp_causative_filtered": 0,
                "blimp_complex_NP_island_filtered": 0,
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": 0,
                "blimp_coordinate_structure_constraint_object_extraction_filtered": 0,
                "blimp_determiner_noun_agreement_1_filtered": 0,
                "blimp_determiner_noun_agreement_2_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": 0,
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": 0,
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": 0,
                "blimp_distractor_agreement_relational_noun_filtered": 0,
                "blimp_distractor_agreement_relative_clause_filtered": 0,
                "blimp_drop_argument_filtered": 0,
                "blimp_ellipsis_n_bar_1_filtered": 0,
                "blimp_ellipsis_n_bar_2_filtered": 0,
                "blimp_existential_there_object_raising_filtered": 0,
                "blimp_existential_there_quantifiers_1_filtered": 0,
                "blimp_existential_there_quantifiers_2_filtered": 0,
                "blimp_existential_there_subject_raising_filtered": 0,
                "blimp_expletive_it_object_raising_filtered": 0,
                "blimp_inchoative_filtered": 0,
                "blimp_intransitive_filtered": 0,
                "blimp_irregular_past_participle_adjectives_filtered": 0,
                "blimp_irregular_past_participle_verbs_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_left_branch_island_echo_question_filtered": 0,
                "blimp_left_branch_island_simple_question_filtered": 0,
                "blimp_matrix_question_npi_licensor_present_filtered": 0,
                "blimp_npi_present_1_filtered": 0,
                "blimp_npi_present_2_filtered": 0,
                "blimp_only_npi_licensor_present_filtered": 0,
                "blimp_only_npi_scope_filtered": 0,
                "blimp_passive_1_filtered": 0,
                "blimp_passive_2_filtered": 0,
                "blimp_principle_A_c_command_filtered": 0,
                "blimp_principle_A_case_1_filtered": 0,
                "blimp_principle_A_case_2_filtered": 0,
                "blimp_principle_A_domain_1_filtered": 0,
                "blimp_principle_A_domain_2_filtered": 0,
                "blimp_principle_A_domain_3_filtered": 0,
                "blimp_principle_A_reconstruction_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_1_filtered": 0,
                "blimp_regular_plural_subject_verb_agreement_2_filtered": 0,
                "blimp_sentential_negation_npi_licensor_present_filtered": 0,
                "blimp_sentential_negation_npi_scope_filtered": 0,
                "blimp_sentential_subject_island_filtered": 0,
                "blimp_superlative_quantifiers_1_filtered": 0,
                "blimp_superlative_quantifiers_2_filtered": 0,
                "blimp_supplement_hypernym": 0,
                "blimp_supplement_qa_congruence_easy": 0,
                "blimp_supplement_qa_congruence_tricky": 0,
                "blimp_supplement_subject_aux_inversion": 0,
                "blimp_supplement_turn_taking": 0,
                "blimp_tough_vs_raising_1_filtered": 0,
                "blimp_tough_vs_raising_2_filtered": 0,
                "blimp_transitive_filtered": 0,
                "blimp_wh_island_filtered": 0,
                "blimp_wh_questions_object_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_filtered": 0,
                "blimp_wh_questions_subject_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_no_gap_filtered": 0,
                "blimp_wh_vs_that_no_gap_long_distance_filtered": 0,
                "blimp_wh_vs_that_with_gap_filtered": 0,
                "blimp_wh_vs_that_with_gap_long_distance_filtered": 0,
                "cola": 0,
                "hellaswag": 0,
                "inverse_scaling_hindsight_neglect_10shot": 0,
                "inverse_scaling_into_the_unknown": 0,
                "inverse_scaling_memo_trap": 0,
                "inverse_scaling_modus_tollens": 0,
                "inverse_scaling_neqa": 0,
                "inverse_scaling_pattern_matching_suppression": 0,
                "inverse_scaling_quote_repetition": 0,
                "inverse_scaling_redefine_math": 0,
                "inverse_scaling_repetitive_algebra": 0,
                "inverse_scaling_sig_figs": 0,
                "inverse_scaling_winobias_antistereotype": 0,
                "lambada_openai": 0,
                "mathqa": 0,
                "mnli": 0,
                "mnli_mismatch": 0,
                "mrpc": 0,
                "openbookqa": 0,
                "piqa": 0,
                "qa4mre_2011": 0,
                "qa4mre_2012": 0,
                "qa4mre_2013": 0,
                "qnli": 0,
                "qqp": 0,
                "rte": 0,
                "sciq": 0,
                "squad_completion": 0,
                "sst2": 0,
                "swag": 0,
                "tinyGSM8k": 5,
                "tinyMMLU": 0,
                "tinyTruthfulQA": 0,
                "triviaqa": 0,
                "winogrande": 0,
                "wnli": 0,
                "wsc273": 0
            },
            "higher_is_better": {
                "arc_challenge": {
                    "acc": true,
                    "acc_norm": true
                },
                "arc_easy": {
                    "acc": true,
                    "acc_norm": true
                },
                "blimp_adjunct_island_filtered": {
                    "acc": true
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "acc": true
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_passive_filtered": {
                    "acc": true
                },
                "blimp_animate_subject_trans_filtered": {
                    "acc": true
                },
                "blimp_causative_filtered": {
                    "acc": true
                },
                "blimp_complex_NP_island_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "acc": true
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "acc": true
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "acc": true
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "acc": true
                },
                "blimp_drop_argument_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "acc": true
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_object_raising_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "acc": true
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "acc": true
                },
                "blimp_inchoative_filtered": {
                    "acc": true
                },
                "blimp_intransitive_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "acc": true
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "acc": true
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "acc": true
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_npi_present_1_filtered": {
                    "acc": true
                },
                "blimp_npi_present_2_filtered": {
                    "acc": true
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_only_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_passive_1_filtered": {
                    "acc": true
                },
                "blimp_passive_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_c_command_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_case_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_1_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_2_filtered": {
                    "acc": true
                },
                "blimp_principle_A_domain_3_filtered": {
                    "acc": true
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "acc": true
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "acc": true
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "acc": true
                },
                "blimp_sentential_subject_island_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "acc": true
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "acc": true
                },
                "blimp_supplement_hypernym": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_easy": {
                    "acc": true
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "acc": true
                },
                "blimp_supplement_subject_aux_inversion": {
                    "acc": true
                },
                "blimp_supplement_turn_taking": {
                    "acc": true
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "acc": true
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "acc": true
                },
                "blimp_transitive_filtered": {
                    "acc": true
                },
                "blimp_wh_island_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "acc": true
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "acc": true
                },
                "cola": {
                    "mcc": true
                },
                "hellaswag": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_into_the_unknown": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_memo_trap": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_modus_tollens": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_neqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_quote_repetition": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_redefine_math": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_repetitive_algebra": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_sig_figs": {
                    "acc": true,
                    "acc_norm": true
                },
                "inverse_scaling_winobias_antistereotype": {
                    "acc": true,
                    "acc_norm": true
                },
                "lambada_openai": {
                    "perplexity": false,
                    "acc": true
                },
                "mathqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "mnli": {
                    "acc": true
                },
                "mnli_mismatch": {
                    "acc": true
                },
                "mrpc": {
                    "acc": true
                },
                "openbookqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "piqa": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2011": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2012": {
                    "acc": true,
                    "acc_norm": true
                },
                "qa4mre_2013": {
                    "acc": true,
                    "acc_norm": true
                },
                "qnli": {
                    "acc": true
                },
                "qqp": {
                    "acc": true
                },
                "rte": {
                    "acc": true
                },
                "sciq": {
                    "acc": true,
                    "acc_norm": true
                },
                "squad_completion": {
                    "contains": true
                },
                "sst2": {
                    "acc": true
                },
                "swag": {
                    "acc": true,
                    "acc_norm": true
                },
                "tinyGSM8k": {
                    "exact_match": true
                },
                "tinyMMLU": {
                    "acc_norm": true
                },
                "tinyTruthfulQA": {
                    "acc": true
                },
                "triviaqa": {
                    "exact_match": true
                },
                "winogrande": {
                    "acc": true
                },
                "wnli": {
                    "acc": true
                },
                "wsc273": {
                    "acc": true
                }
            },
            "n-samples": {
                "wsc273": {
                    "original": 273,
                    "effective": 273
                },
                "winogrande": {
                    "original": 1267,
                    "effective": 1267
                },
                "triviaqa": {
                    "original": 17944,
                    "effective": 17944
                },
                "tinyTruthfulQA": {
                    "original": 100,
                    "effective": 100
                },
                "tinyMMLU": {
                    "original": 100,
                    "effective": 100
                },
                "tinyGSM8k": {
                    "original": 100,
                    "effective": 100
                },
                "swag": {
                    "original": 20006,
                    "effective": 20006
                },
                "squad_completion": {
                    "original": 2984,
                    "effective": 2984
                },
                "sciq": {
                    "original": 1000,
                    "effective": 1000
                },
                "qa4mre_2011": {
                    "original": 120,
                    "effective": 120
                },
                "qa4mre_2013": {
                    "original": 284,
                    "effective": 284
                },
                "qa4mre_2012": {
                    "original": 160,
                    "effective": 160
                },
                "piqa": {
                    "original": 1838,
                    "effective": 1838
                },
                "openbookqa": {
                    "original": 500,
                    "effective": 500
                },
                "mathqa": {
                    "original": 2985,
                    "effective": 2985
                },
                "lambada_openai": {
                    "original": 5153,
                    "effective": 5153
                },
                "inverse_scaling_hindsight_neglect_10shot": {
                    "original": 315,
                    "effective": 315
                },
                "inverse_scaling_repetitive_algebra": {
                    "original": 1000,
                    "effective": 1000
                },
                "inverse_scaling_quote_repetition": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_winobias_antistereotype": {
                    "original": 412,
                    "effective": 412
                },
                "inverse_scaling_neqa": {
                    "original": 300,
                    "effective": 300
                },
                "inverse_scaling_memo_trap": {
                    "original": 936,
                    "effective": 936
                },
                "inverse_scaling_sig_figs": {
                    "original": 20897,
                    "effective": 20897
                },
                "inverse_scaling_pattern_matching_suppression": {
                    "original": 1428,
                    "effective": 1428
                },
                "inverse_scaling_modus_tollens": {
                    "original": 1236,
                    "effective": 1236
                },
                "inverse_scaling_redefine_math": {
                    "original": 900,
                    "effective": 900
                },
                "inverse_scaling_into_the_unknown": {
                    "original": 1824,
                    "effective": 1824
                },
                "hellaswag": {
                    "original": 10042,
                    "effective": 10042
                },
                "mrpc": {
                    "original": 408,
                    "effective": 408
                },
                "qnli": {
                    "original": 5463,
                    "effective": 5463
                },
                "rte": {
                    "original": 277,
                    "effective": 277
                },
                "wnli": {
                    "original": 71,
                    "effective": 71
                },
                "mnli_mismatch": {
                    "original": 9832,
                    "effective": 9832
                },
                "mnli": {
                    "original": 9815,
                    "effective": 9815
                },
                "qqp": {
                    "original": 40430,
                    "effective": 40430
                },
                "sst2": {
                    "original": 872,
                    "effective": 872
                },
                "cola": {
                    "original": 1043,
                    "effective": 1043
                },
                "blimp_supplement_subject_aux_inversion": {
                    "original": 3867,
                    "effective": 3867
                },
                "blimp_supplement_qa_congruence_easy": {
                    "original": 64,
                    "effective": 64
                },
                "blimp_supplement_hypernym": {
                    "original": 842,
                    "effective": 842
                },
                "blimp_supplement_turn_taking": {
                    "original": 280,
                    "effective": 280
                },
                "blimp_supplement_qa_congruence_tricky": {
                    "original": 165,
                    "effective": 165
                },
                "blimp_distractor_agreement_relative_clause_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_1_filtered": {
                    "original": 802,
                    "effective": 802
                },
                "blimp_left_branch_island_echo_question_filtered": {
                    "original": 947,
                    "effective": 947
                },
                "blimp_determiner_noun_agreement_1_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_only_npi_scope_filtered": {
                    "original": 837,
                    "effective": 837
                },
                "blimp_principle_A_domain_1_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_sentential_subject_island_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_npi_present_2_filtered": {
                    "original": 914,
                    "effective": 914
                },
                "blimp_principle_A_domain_3_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_transitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_animate_subject_passive_filtered": {
                    "original": 895,
                    "effective": 895
                },
                "blimp_npi_present_1_filtered": {
                    "original": 909,
                    "effective": 909
                },
                "blimp_irregular_past_participle_verbs_filtered": {
                    "original": 942,
                    "effective": 942
                },
                "blimp_left_branch_island_simple_question_filtered": {
                    "original": 951,
                    "effective": 951
                },
                "blimp_expletive_it_object_raising_filtered": {
                    "original": 759,
                    "effective": 759
                },
                "blimp_drop_argument_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_existential_there_quantifiers_1_filtered": {
                    "original": 930,
                    "effective": 930
                },
                "blimp_regular_plural_subject_verb_agreement_1_filtered": {
                    "original": 890,
                    "effective": 890
                },
                "blimp_determiner_noun_agreement_with_adjective_1_filtered": {
                    "original": 933,
                    "effective": 933
                },
                "blimp_wh_questions_object_gap_filtered": {
                    "original": 859,
                    "effective": 859
                },
                "blimp_existential_there_subject_raising_filtered": {
                    "original": 924,
                    "effective": 924
                },
                "blimp_wh_vs_that_with_gap_long_distance_filtered": {
                    "original": 910,
                    "effective": 910
                },
                "blimp_inchoative_filtered": {
                    "original": 855,
                    "effective": 855
                },
                "blimp_passive_1_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_determiner_noun_agreement_2_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_sentential_negation_npi_licensor_present_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_anaphor_number_agreement_filtered": {
                    "original": 931,
                    "effective": 931
                },
                "blimp_animate_subject_trans_filtered": {
                    "original": 923,
                    "effective": 923
                },
                "blimp_determiner_noun_agreement_irregular_2_filtered": {
                    "original": 820,
                    "effective": 820
                },
                "blimp_existential_there_quantifiers_2_filtered": {
                    "original": 911,
                    "effective": 911
                },
                "blimp_adjunct_island_filtered": {
                    "original": 928,
                    "effective": 928
                },
                "blimp_wh_questions_subject_gap_filtered": {
                    "original": 898,
                    "effective": 898
                },
                "blimp_irregular_plural_subject_verb_agreement_1_filtered": {
                    "original": 804,
                    "effective": 804
                },
                "blimp_irregular_past_participle_adjectives_filtered": {
                    "original": 961,
                    "effective": 961
                },
                "blimp_regular_plural_subject_verb_agreement_2_filtered": {
                    "original": 945,
                    "effective": 945
                },
                "blimp_coordinate_structure_constraint_object_extraction_filtered": {
                    "original": 949,
                    "effective": 949
                },
                "blimp_superlative_quantifiers_1_filtered": {
                    "original": 979,
                    "effective": 979
                },
                "blimp_passive_2_filtered": {
                    "original": 903,
                    "effective": 903
                },
                "blimp_principle_A_domain_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_irregular_plural_subject_verb_agreement_2_filtered": {
                    "original": 892,
                    "effective": 892
                },
                "blimp_existential_there_object_raising_filtered": {
                    "original": 812,
                    "effective": 812
                },
                "blimp_distractor_agreement_relational_noun_filtered": {
                    "original": 788,
                    "effective": 788
                },
                "blimp_only_npi_licensor_present_filtered": {
                    "original": 882,
                    "effective": 882
                },
                "blimp_sentential_negation_npi_scope_filtered": {
                    "original": 871,
                    "effective": 871
                },
                "blimp_ellipsis_n_bar_2_filtered": {
                    "original": 828,
                    "effective": 828
                },
                "blimp_determiner_noun_agreement_irregular_1_filtered": {
                    "original": 681,
                    "effective": 681
                },
                "blimp_anaphor_gender_agreement_filtered": {
                    "original": 971,
                    "effective": 971
                },
                "blimp_principle_A_c_command_filtered": {
                    "original": 946,
                    "effective": 946
                },
                "blimp_wh_questions_subject_gap_long_distance_filtered": {
                    "original": 857,
                    "effective": 857
                },
                "blimp_tough_vs_raising_2_filtered": {
                    "original": 920,
                    "effective": 920
                },
                "blimp_complex_NP_island_filtered": {
                    "original": 846,
                    "effective": 846
                },
                "blimp_principle_A_case_2_filtered": {
                    "original": 915,
                    "effective": 915
                },
                "blimp_wh_vs_that_no_gap_long_distance_filtered": {
                    "original": 875,
                    "effective": 875
                },
                "blimp_coordinate_structure_constraint_complex_left_branch_filtered": {
                    "original": 906,
                    "effective": 906
                },
                "blimp_matrix_question_npi_licensor_present_filtered": {
                    "original": 929,
                    "effective": 929
                },
                "blimp_tough_vs_raising_1_filtered": {
                    "original": 948,
                    "effective": 948
                },
                "blimp_principle_A_case_1_filtered": {
                    "original": 912,
                    "effective": 912
                },
                "blimp_wh_vs_that_with_gap_filtered": {
                    "original": 919,
                    "effective": 919
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_1_filtered": {
                    "original": 718,
                    "effective": 718
                },
                "blimp_wh_vs_that_no_gap_filtered": {
                    "original": 861,
                    "effective": 861
                },
                "blimp_superlative_quantifiers_2_filtered": {
                    "original": 986,
                    "effective": 986
                },
                "blimp_intransitive_filtered": {
                    "original": 868,
                    "effective": 868
                },
                "blimp_determiner_noun_agreement_with_adj_2_filtered": {
                    "original": 941,
                    "effective": 941
                },
                "blimp_determiner_noun_agreement_with_adj_irregular_2_filtered": {
                    "original": 840,
                    "effective": 840
                },
                "blimp_wh_island_filtered": {
                    "original": 960,
                    "effective": 960
                },
                "blimp_causative_filtered": {
                    "original": 818,
                    "effective": 818
                },
                "blimp_principle_A_reconstruction_filtered": {
                    "original": 967,
                    "effective": 967
                },
                "arc_easy": {
                    "original": 2376,
                    "effective": 2376
                },
                "arc_challenge": {
                    "original": 1172,
                    "effective": 1172
                }
            },
            "config": {
                "model": "modis",
                "model_args": "pretrained=evo_exp_full_a/14M/streaminggpt_14M,ckpt_dir=/home/junyanc/model_discovery/ckpt,gab_name=default",
                "model_num_parameters": 5730560,
                "model_dtype": "torch.bfloat16",
                "model_revision": "main",
                "batch_size": "auto",
                "batch_sizes": [
                    64
                ],
                "device": null,
                "use_cache": null,
                "limit": null,
                "bootstrap_iters": 100000,
                "gen_kwargs": null,
                "random_seed": 0,
                "numpy_seed": 1234,
                "torch_seed": 1234,
                "fewshot_seed": 1234
            },
            "date": 1730222092.449936,
            "tokenizer_pad_token": [
                "</s>",
                "2"
            ],
            "tokenizer_eos_token": [
                "</s>",
                "2"
            ],
            "tokenizer_bos_token": [
                "<s>",
                "1"
            ],
            "eot_token_id": 2,
            "max_length": 2048,
            "task_hashes": {},
            "model_source": "modis",
            "model_name": "evo_exp_full_a/14M/streaminggpt_14M",
            "model_name_sanitized": "evo_exp_full_a__14M__streaminggpt_14M",
            "system_instruction": null,
            "system_instruction_sha": null,
            "fewshot_as_multiturn": false,
            "chat_template": null,
            "chat_template_sha": null,
            "start_time": 2849265.669841904,
            "end_time": 2849475.17355212,
            "total_evaluation_time_seconds": "209.50371021591127"
        }
    }
}